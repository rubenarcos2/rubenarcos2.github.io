<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="https://www.rarcos.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://www.rarcos.com/" rel="alternate" type="text/html" /><updated>2022-03-22T12:12:48+01:00</updated><id>https://www.rarcos.com/feed.xml</id><title type="html">Rubén Arcos</title><subtitle>Desarrollador de aplicaciones multiplataformas</subtitle><entry><title type="html">Python - IA ejemplo de uso de Bert Q&amp;amp;A exportado con flask</title><link href="https://www.rarcos.com/2022/03/18/IA-Bert-flask/" rel="alternate" type="text/html" title="Python - IA ejemplo de uso de Bert Q&amp;amp;A exportado con flask" /><published>2022-03-18T15:33:28+01:00</published><updated>2022-03-18T15:33:28+01:00</updated><id>https://www.rarcos.com/2022/03/18/IA-Bert-flask</id><content type="html" xml:base="https://www.rarcos.com/2022/03/18/IA-Bert-flask/"><![CDATA[<h1 id="utilización-de-bert-en-flask">Utilización de Bert en flask</h1>

<p>El BERT (Bidirectional Encoder Representations from Transformers) puede utilizarse para una de estas aplicaciones, es decir, la de preguntas y respuestas. Le das al modelo de aprendizaje profundo un párrafo para que lo lea y luego le haces una pregunta relacionada con el mismo. Hay muchas aplicaciones de este tipo en las que BERT ha demostrado ser lo suficientemente fuerte en PNL (Comprensión del Lenguaje Natural para ser más precisos). El concepto de BERT se introdujo en 2018. Desde entonces, han surgido variaciones de BERT como ALBERT, RoBERTa, MobileBERT, etc. Puede leer sobre el documento original <a href="https://arxiv.org/pdf/1810.04805.pdf">aquí</a>.</p>

<p>Utilizaremos una versión de BERT especial para web, más ligera, está en <a href="https://huggingface.co/mrm8488/distill-bert-base-spanish-wwm-cased-finetuned-spa-squad2-es">huggingface</a> para un conjunto de datos de preguntas y respuestas, es decir, Stanford Question Answering Dataset (SQuAD) y desplegaremos el modelo afinado en Heroku para la inferencia en tiempo real.</p>

<hr />

<p>Esta es la aplicación que yo he realizado basándome en la del tutorial y he aplicado algunas modificaciones:</p>

<p><a href="https://bert-qna-flask.herokuapp.com/">https://bert-qna-flask.herokuapp.com/</a></p>

<hr />

<p><strong>Nota</strong>
Asegúrese de seguir esta estructura de carpetas:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">/web-app
|--templates
|----index.html
|--app.py
|--requirements.txt
|--Procfile</code></pre></figure>

<h2 id="paso-1">Paso 1</h2>

<p>Como esto tiene que ser desplegado en Heroku, vamos a asegurarnos de que Heroku instala todas las bibliotecas necesarias para ejecutar el programa.
Haz un archivo llamado “requirements.txt” y pon las siguientes librerías en el archivo:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">https://download.pytorch.org/whl/cpu/torch-1.3.1%2Bcpu-cp36-cp36m-linux_x86_64.whl
<span class="nv">transformers</span><span class="o">==</span>3.0.2
<span class="nv">numpy</span><span class="o">==</span>1.19.1
flask
<span class="nv">joblib</span><span class="o">==</span>0.16.0
<span class="nv">sentencepiece</span><span class="o">==</span>0.1.91
<span class="nv">urllib3</span><span class="o">==</span>1.25.10</code></pre></figure>

<p>Para instalar las dependencias en un entorno, tipo anaconda, no funciona la descarga directa de pytorch para cpu. Es necesario ejecutar:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">pip3 <span class="nb">install </span><span class="nv">torch</span><span class="o">==</span>1.3.1+cpu <span class="nv">torchvision</span><span class="o">==</span>0.4.2+cpu <span class="nt">-f</span> https://download.pytorch.org/whl/torch_stable.html</code></pre></figure>

<p>Más info: <a href="https://github.com/pytorch/pytorch/issues/29434">en este enlace</a> y este <a href="https://foroayuda.es/donde-obtengo-una-version-de-pytorch-solo-para-cpu/">otro enlace</a> que tiene el versionado de pytorch.</p>

<h2 id="paso-2">Paso 2</h2>

<p>Haz un archivo llamado “app.py” y pon el siguiente código:</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">os</span>

<span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Flask</span><span class="p">,</span> <span class="n">render_template</span>

<span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">request</span>

<span class="kn">import</span> <span class="nn">torch</span>

<span class="kn">from</span> <span class="nn">transformers</span> <span class="kn">import</span> <span class="n">pipeline</span>

<span class="c1"># name = "twmkn9/albert-base-v2-squad2"
</span>
<span class="c1"># name = "distilbert-base-uncased-distilled-squad"
</span>
<span class="n">nlp</span> <span class="o">=</span> <span class="n">pipeline</span><span class="p">(</span>

    <span class="s">'question-answering'</span><span class="p">,</span>

    <span class="n">model</span><span class="o">=</span><span class="s">'mrm8488/distill-bert-base-spanish-wwm-cased-finetuned-spa-squad2-es'</span><span class="p">,</span>

    <span class="n">tokenizer</span><span class="o">=</span><span class="p">(</span>

    <span class="s">'mrm8488/distill-bert-base-spanish-wwm-cased-finetuned-spa-squad2-es'</span><span class="p">,</span>

    <span class="p">{</span><span class="s">"use_fast"</span><span class="p">:</span> <span class="bp">False</span><span class="p">}</span>

    <span class="p">)</span>

<span class="p">)</span>

<span class="k">def</span> <span class="nf">answer_question</span><span class="p">(</span><span class="n">question</span><span class="p">,</span> <span class="n">answer_text</span><span class="p">):</span>

    <span class="k">try</span><span class="p">:</span>

    <span class="n">answer</span> <span class="o">=</span> <span class="n">nlp</span><span class="p">({</span><span class="s">'question'</span><span class="p">:</span><span class="n">question</span><span class="p">,</span> <span class="s">'context'</span><span class="p">:</span><span class="n">answer_text</span><span class="p">})</span>

    <span class="k">return</span> <span class="n">answer</span><span class="p">[</span><span class="s">'answer'</span><span class="p">]</span>

    <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>

    <span class="k">print</span><span class="p">(</span><span class="s">"Error en la generación de la respuesta:"</span><span class="p">,</span> <span class="n">e</span><span class="p">)</span>

<span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">)</span>

<span class="o">@</span><span class="n">app</span><span class="p">.</span><span class="n">route</span><span class="p">(</span><span class="s">'/'</span><span class="p">,</span> <span class="n">methods</span><span class="o">=</span><span class="p">[</span><span class="s">'GET'</span><span class="p">,</span> <span class="s">'POST'</span><span class="p">])</span>

<span class="k">def</span> <span class="nf">index</span><span class="p">():</span>

    <span class="k">if</span> <span class="n">request</span><span class="p">.</span><span class="n">method</span> <span class="o">==</span> <span class="s">'POST'</span><span class="p">:</span>

    <span class="n">form</span> <span class="o">=</span> <span class="n">request</span><span class="p">.</span><span class="n">form</span>

    <span class="n">result</span> <span class="o">=</span> <span class="p">[]</span>

    <span class="n">bert_abstract</span> <span class="o">=</span> <span class="n">form</span><span class="p">[</span><span class="s">'paragraph'</span><span class="p">]</span>

    <span class="n">question</span> <span class="o">=</span> <span class="n">form</span><span class="p">[</span><span class="s">'question'</span><span class="p">]</span>

    <span class="n">result</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">form</span><span class="p">[</span><span class="s">'question'</span><span class="p">])</span>

    <span class="n">result</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">answer_question</span><span class="p">(</span><span class="n">question</span><span class="p">,</span> <span class="n">bert_abstract</span><span class="p">))</span>

    <span class="n">result</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">form</span><span class="p">[</span><span class="s">'paragraph'</span><span class="p">])</span>

    <span class="k">return</span> <span class="n">render_template</span><span class="p">(</span><span class="s">"index.html"</span><span class="p">,</span><span class="n">result</span> <span class="o">=</span> <span class="n">result</span><span class="p">)</span>

    <span class="c1"># answer = answer_question(question, bert_abstract)
</span>
    <span class="c1"># return answer
</span>
    <span class="k">return</span> <span class="n">render_template</span><span class="p">(</span><span class="s">"index.html"</span><span class="p">)</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">'__main__'</span><span class="p">:</span>

    <span class="n">port</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="n">environ</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">"PORT"</span><span class="p">,</span> <span class="mi">5000</span><span class="p">))</span>

    <span class="n">app</span><span class="p">.</span><span class="n">run</span><span class="p">(</span><span class="n">host</span><span class="o">=</span><span class="s">'0.0.0.0'</span><span class="p">,</span> <span class="n">port</span><span class="o">=</span><span class="n">port</span><span class="p">)</span></code></pre></figure>

<p>Esto obtendrá el modelo BERT y el tokenizador necesario para el modelo. Hemos utilizado “mrm8488/bert-small-finetuned-squadv2” de huggingface ya que es comparativamente más pequeño que los otros modelos BERT y tenemos un espacio limitado de 512 MBs en la cuenta de nivel gratuito de Heroku. A continuación, creamos un servidor flask para recibir las entradas en forma de párrafos y preguntas.
Ahora, haz una carpeta llamada “templates” y dentro de la carpeta, crea un archivo llamado “index.html”. Pon el siguiente código en el archivo:</p>

<figure class="highlight"><pre><code class="language-html" data-lang="html"><span class="cp">&lt;!DOCTYPE html&gt;</span>

<span class="nt">&lt;html&gt;</span>
  <span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;title&gt;</span>Bert Question Answering<span class="nt">&lt;/title&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"viewport"</span> <span class="na">content=</span><span class="s">"width=device-width, initial-scale=1.0"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">"//netdna.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css"</span> <span class="na">rel=</span><span class="s">"stylesheet"</span> <span class="na">media=</span><span class="s">"screen"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;style&gt;</span>
      <span class="nc">.container</span> <span class="p">{</span>
        <span class="nl">max-width</span><span class="p">:</span> <span class="m">1000px</span><span class="p">;</span>
      <span class="p">}</span>
    <span class="nt">&lt;/style&gt;</span>
  <span class="nt">&lt;/head&gt;</span>
  <span class="nt">&lt;body&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"container"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"row-sm-5 row-sm-offset-1"</span><span class="nt">&gt;</span>
          <span class="nt">&lt;h4&gt;</span>Enter a paragraph and a question to test BERT<span class="nt">&lt;/h4&gt;</span>
            <span class="nt">&lt;form</span> <span class="na">role=</span><span class="s">"form"</span> <span class="na">method=</span><span class="s">'POST'</span> <span class="na">action=</span><span class="s">'/'</span><span class="nt">&gt;</span>
              <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"form-group"</span><span class="nt">&gt;</span>
                <span class="nt">&lt;textarea</span> <span class="na">name=</span><span class="s">"paragraph"</span> <span class="na">class=</span><span class="s">"form-control"</span> <span class="na">id=</span><span class="s">"url-box"</span> <span class="na">placeholder=</span><span class="s">"Enter a paragraph"</span> <span class="na">style=</span><span class="s">"max-width: 300px;"</span> <span class="na">autofocus</span> <span class="na">required</span><span class="nt">&gt;</span>
			
		<span class="nt">&lt;/textarea&gt;</span>
                 <span class="nt">&lt;br&gt;</span>
                <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"question"</span> <span class="na">class=</span><span class="s">"form-control"</span> <span class="na">id=</span><span class="s">"url-box"</span> <span class="na">placeholder=</span><span class="s">"Enter a question"</span> <span class="na">style=</span><span class="s">"max-width: 300px;"</span> <span class="na">autofocus</span> <span class="na">required</span><span class="nt">&gt;</span>
              <span class="nt">&lt;/div&gt;</span>
              <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">class=</span><span class="s">"btn btn-default"</span><span class="nt">&gt;</span>Predict<span class="nt">&lt;/button&gt;</span>
            <span class="nt">&lt;/form&gt;</span>
          <span class="nt">&lt;br&gt;</span>
      <span class="nt">&lt;/div&gt;</span>

    `<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"row-sm-5 row-sm-offset-1"</span><span class="nt">&gt;</span>`
          
      `<span class="nt">&lt;/div&gt;</span>`

    `<span class="nt">&lt;/div&gt;</span>`

<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span></code></pre></figure>

<p>Con el código anterior, creamos un formulario para recibir las entradas.</p>

<h2 id="paso-3">Paso 3</h2>

<p>Crea un archivo llamándolo “Procfile” sin ninguna extensión. Y pon el siguiente código:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">web: python app.py</code></pre></figure>

<p>Esto le dirá a Heroku qué hacer una vez que la aplicación haya sido desplegada.</p>

<h2 id="paso-4">Paso 4</h2>

<p>Tenemos nuestro código listo. Ahora vamos a hablar con Heroku. Asegúrate de tener instalado Heroku CLI y git.</p>

<p>Una vez hecho esto, escriba los siguientes comandos en su terminal de comandos:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">heroku login</code></pre></figure>

<p>Esto te conectará con Heroku CLI
A continuación, escriba esto para crear una aplicación heroku:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">heroku create your_app_name</code></pre></figure>

<p>El nombre de tu aplicación puede ser cualquier cosa única.
A continuación, escribe los siguientes comandos para desplegar tu aplicación en Heroku:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">git init
git add <span class="nb">.</span>
git commit <span class="nt">-m</span> <span class="s1">'initial commit'</span>
git push heroku master</code></pre></figure>

<p>¡Hurra! ¡Tu aplicación ha sido desplegada! Veamos cómo funciona.
Abre una ventana del navegador y escribe la siguiente dirección web:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">https://your_app_name.herokuapp.com</code></pre></figure>

<p>Debería ver una página web como ésta:</p>

<p><img src="/images/pages/0_1YwbgemSDKHq0WQ2.png" alt="app en funcionamiento" /></p>

<p><em>Fuente:</em> Este tutorial está copiado y traducido de <a href="https://medium.com/analytics-vidhya/deploying-bert-on-heroku-7df1d23f9c43">aquí</a> quién tiene todos los derechos.</p>

<p>La aplicación original:
“I have deployed my BERT app <a href="https://bertqna.herokuapp.com/">here</a> if you wish to give it a try.”</p>]]></content><author><name></name></author><category term="python" /><category term="pytorch" /><category term="ia" /><category term="flask" /><category term="bert" /><summary type="html"><![CDATA[Utilización del modelo de aprendizaje profundo Bert para pregruntas y respuestas, exportado en flask.]]></summary></entry><entry><title type="html">Python - IA ejemplo de uso de RoBERTa Q&amp;amp;A</title><link href="https://www.rarcos.com/2022/03/18/IA-Roberta-QA/" rel="alternate" type="text/html" title="Python - IA ejemplo de uso de RoBERTa Q&amp;amp;A" /><published>2022-03-18T15:33:28+01:00</published><updated>2022-03-18T15:33:28+01:00</updated><id>https://www.rarcos.com/2022/03/18/IA-Roberta-QA</id><content type="html" xml:base="https://www.rarcos.com/2022/03/18/IA-Roberta-QA/"><![CDATA[<h1 id="utilización-de-roberta-en-qa">Utilización de RoBERTa en Q&amp;A</h1>

<p>RoBERTa-base español entrenado en BNE afinado para el conjunto de datos del Corpus de Respuesta a Preguntas en Español (SQAC).
RoBERTa-base-bne es un modelo de lenguaje enmascarado basado en transformadores para el idioma español. Está basado en el modelo base de RoBERTa y ha sido preentrenado utilizando el mayor corpus de español conocido hasta la fecha, con un total de 570GB de texto limpio y deduplicado procesado para este trabajo, recopilado a partir de los rastreos web realizados por la Biblioteca Nacional de España desde 2009 hasta 2019.</p>

<p>El modelo original preentrenado se puede encontrar <a href="https://huggingface.co/PlanTL-GOB-ES/roberta-base-bne">aquí</a>:</p>

<p><strong>Dataset</strong></p>

<p>El conjunto de datos utilizado es el corpus SQAC.</p>

<p><strong>Evaluación y resultados</strong></p>

<p>Puntuación F1: 0,7923 (media de 5 ejecuciones).</p>

<p>Para ver los detalles de la evaluación, visite nuestro repositorio de <a href="https://github.com/PlanTL-GOB-ES/lm-spanish">GitHub</a>.</p>

<hr />
<p>Si quieres ver el resultado de mi ejemplo de utilización de RoBERTa, te recomiendo visites:</p>

<p><em>Repositorio con el contenido</em></p>

<p><a href="https://colab.research.google.com/drive/16diuU5pQSETl3VQeh6E909YFsbtlfX3Z"><img src="/images/pages/repository_small_colab.png" alt="Repositorio" /></a></p>]]></content><author><name></name></author><category term="python" /><category term="pytorch" /><category term="ia" /><category term="colab" /><category term="bert" /><summary type="html"><![CDATA[Utilización del modelo de aprendizaje profundo RoBERTa para pregruntas y respuestas.]]></summary></entry><entry><title type="html">Python - Modelo de IA en Keras con exportación a tensorflow js</title><link href="https://www.rarcos.com/2022/03/16/Python-Keras_IA_tf.js/" rel="alternate" type="text/html" title="Python - Modelo de IA en Keras con exportación a tensorflow js" /><published>2022-03-16T15:33:28+01:00</published><updated>2022-03-16T15:33:28+01:00</updated><id>https://www.rarcos.com/2022/03/16/Python%20-%20Keras_IA_tf.js</id><content type="html" xml:base="https://www.rarcos.com/2022/03/16/Python-Keras_IA_tf.js/"><![CDATA[<h1 id="modelo-de-regresión-en-keras-exportado-a-tensorflow-js">Modelo de regresión en Keras exportado a tensorflow js</h1>

<p>A continuación, se muestra un proyecto en Keras, que utiliza un dataset con los datos del desempleo en EEUU. Se aplica IA para la predicción de los valores futuros y se exporta el modelo ya entrenada para ser ejecutado mediante web.</p>

<p>Si quieres ver el resultado, te recomiendo visites:</p>

<p><a href="https://rarcos.com/WorkspaceWeb/predictUnrate(keras)/"><img src="/images/pages/450_1000.png" alt="Ir a ver la app en funcionamiento" /></a></p>

<p><em>Repositorio con el contenido</em></p>

<p><a href="https://colab.research.google.com/drive/1zG_hZIhR5Kzu-4RfsRDnWtf5RqE0rJWU"><img src="/images/pages/repository_small_colab.png" alt="Repositorio" /></a></p>]]></content><author><name></name></author><category term="python" /><category term="keras" /><category term="ia" /><category term="tensorflow" /><category term="js" /><summary type="html"><![CDATA[Proyecto en Keras, que utiliza un dataset con los datos del desempleo en EEUU. Se aplica IA para la predicción de los valores futuros y se exporta el modelo ya entrenada para ser ejecutado mediante web.]]></summary></entry><entry><title type="html">Python - API Rest en Flask</title><link href="https://www.rarcos.com/2022/02/15/Python-API_Rest_en_Flask/" rel="alternate" type="text/html" title="Python - API Rest en Flask" /><published>2022-02-15T15:33:28+01:00</published><updated>2022-02-15T15:33:28+01:00</updated><id>https://www.rarcos.com/2022/02/15/Python%20-%20API_Rest_en_Flask</id><content type="html" xml:base="https://www.rarcos.com/2022/02/15/Python-API_Rest_en_Flask/"><![CDATA[<h1 id="api-rest-en-python-con-flask">Api rest en Python con Flask</h1>

<p>A continuación, se muestra un proyecto de Python realizado para crear una api rest mediante el uso de la librería <a href="https://palletsprojects.com/p/flask/">flask</a>. Tiene las siguientes características:</p>

<p>Se crea una base de datos MySQL (situada en un servidor de bases de datos en Internet) con dos tablas para almacenar:</p>
<ul>
  <li>los datos de los usuarios: nombre, dirección, teléfono, email y usuario en Github</li>
  <li>los datos de los repositorios de los usuarios:  nombre del repositorio, url, descripción y fecha de última modificación</li>
</ul>

<p>La aplicación en Flask permite añadir un nuevo usuario, ver los datos de los usuarios almacenados, editarlos, eliminarlos y ver sus repositorios.
Los repositorios de un usuario se muestran en una nueva página.</p>

<p>Cuando se añade un usuario, se obtienen sus repositorios públicos usando el api de GitHub y se almacenan en la tabla de repositorios.
Cuando se modifica el nombre del usuario en Github, se borran sus repositorios anteriores y se obtienen los nuevos.</p>

<p>Si quieres ver el resultado, te recomiendo visites:</p>

<p><a href="https://flask-python-crud.herokuapp.com/usuarios"><img src="/images/pages/app_flask_heroku.jpg" alt="Ir a ver la app en funcionamiento" /></a></p>

<p><em>Repositorio con el contenido</em></p>

<p><a href="https://github.com/rubenarcos2/api_rest_flask_python"><img src="/images/pages/repository_small.png" alt="Repositorio" /></a></p>]]></content><author><name></name></author><category term="python" /><category term="api" /><category term="rest" /><category term="flask" /><summary type="html"><![CDATA[Proyecto en Python realizado para crear una api rest mediante el uso de la librería flask.]]></summary></entry><entry><title type="html">R - Api rest</title><link href="https://www.rarcos.com/2022/02/11/API_Rest_en_R/" rel="alternate" type="text/html" title="R - Api rest" /><published>2022-02-11T15:33:28+01:00</published><updated>2022-02-11T15:33:28+01:00</updated><id>https://www.rarcos.com/2022/02/11/API_Rest_en_R</id><content type="html" xml:base="https://www.rarcos.com/2022/02/11/API_Rest_en_R/"><![CDATA[<h1 id="api-rest-en-r">Api rest en R</h1>

<p>A continuación, se muestra un proyecto de R realizado para crear una api rest mediante el uso de la librería <a href="">plumber</a>.
Para que funcione tiene que estar todo en la misma carpeta y tiene el siguiente contenido:</p>

<ul>
  <li>Clase entrypoint. Contiene la configuración del servidor que levanta R.</li>
</ul>

<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="nx">library</span><span class="p">(</span><span class="nx">plumber</span><span class="p">)</span>

<span class="nx">p</span> <span class="o">&lt;-</span> <span class="nx">plumb</span><span class="p">(</span><span class="dl">"</span><span class="s2">API_calculadora.r</span><span class="dl">"</span><span class="p">)</span>
<span class="nx">p$run</span><span class="p">(</span><span class="nx">port</span> <span class="o">=</span> <span class="mi">8888</span><span class="p">)</span></code></pre></figure>

<ul>
  <li>Clase enrutadora. Es una clase que tiene los endpoints a las funciones de la calculadora.</li>
</ul>

<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="nx">library</span><span class="p">(</span><span class="nx">jsonlite</span><span class="p">)</span>
<span class="nx">library</span><span class="p">(</span><span class="nx">plumber</span><span class="p">)</span>
<span class="nx">library</span><span class="p">(</span><span class="nx">dplyr</span><span class="p">)</span>
<span class="nx">library</span><span class="p">(</span><span class="nx">ggplot2</span><span class="p">)</span>
<span class="nx">library</span><span class="p">(</span><span class="nx">gapminder</span><span class="p">)</span>

<span class="err">#</span><span class="o">*</span> <span class="p">@</span><span class="nd">apiTitle</span> <span class="nx">API</span> <span class="nx">de</span> <span class="nx">ejemplo</span>
<span class="err">#</span><span class="o">*</span> <span class="p">@</span><span class="nd">apiDescription</span> <span class="nx">Endpoints</span> <span class="nx">para</span> <span class="nx">exponer</span> <span class="nx">funciones</span> <span class="nx">de</span> <span class="nx">ejmplo</span> <span class="nx">con</span> <span class="nx">Plumber</span><span class="p">.</span><span class="nx">r</span>

<span class="err">#</span><span class="o">*</span> <span class="nx">Returns</span> <span class="nx">sum</span> <span class="k">of</span> <span class="nx">a</span> <span class="nx">and</span> <span class="nx">b</span>
<span class="err">#</span><span class="o">*</span> <span class="p">@</span><span class="nd">param</span> <span class="nx">a</span>
<span class="err">#</span><span class="o">*</span> <span class="p">@</span><span class="nd">param</span> <span class="nx">b</span>
<span class="err">#</span><span class="o">*</span> <span class="p">@</span><span class="nd">get</span> <span class="sr">/su</span><span class="err">m
</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">calculadora</span> <span class="o">&lt;-</span> <span class="nx">modules</span><span class="p">::</span><span class="nx">use</span><span class="p">(</span><span class="dl">'</span><span class="s1">./calculadora.r</span><span class="dl">'</span><span class="p">)</span>
  <span class="nx">calculadora$suma</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span>
<span class="p">}</span>

<span class="err">#</span><span class="o">*</span> <span class="nx">Returns</span> <span class="nx">minus</span> <span class="k">of</span> <span class="nx">a</span> <span class="nx">and</span> <span class="nx">b</span>
<span class="err">#</span><span class="o">*</span> <span class="p">@</span><span class="nd">param</span> <span class="nx">a</span>
<span class="err">#</span><span class="o">*</span> <span class="p">@</span><span class="nd">param</span> <span class="nx">b</span>
<span class="err">#</span><span class="o">*</span> <span class="p">@</span><span class="nd">get</span> <span class="sr">/minu</span><span class="err">s
</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">calculadora</span> <span class="o">&lt;-</span> <span class="nx">modules</span><span class="p">::</span><span class="nx">use</span><span class="p">(</span><span class="dl">'</span><span class="s1">./calculadora.r</span><span class="dl">'</span><span class="p">)</span>
  <span class="nx">calculadora$resta</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span>
<span class="p">}</span>

<span class="err">#</span><span class="o">*</span> <span class="nx">Returns</span> <span class="nx">multiply</span> <span class="k">of</span> <span class="nx">a</span> <span class="nx">and</span> <span class="nx">b</span>
<span class="err">#</span><span class="o">*</span> <span class="p">@</span><span class="nd">param</span> <span class="nx">a</span>
<span class="err">#</span><span class="o">*</span> <span class="p">@</span><span class="nd">param</span> <span class="nx">b</span>
<span class="err">#</span><span class="o">*</span> <span class="p">@</span><span class="nd">get</span> <span class="sr">/mul</span><span class="err">t
</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">calculadora</span> <span class="o">&lt;-</span> <span class="nx">modules</span><span class="p">::</span><span class="nx">use</span><span class="p">(</span><span class="dl">'</span><span class="s1">./calculadora.r</span><span class="dl">'</span><span class="p">)</span>
  <span class="nx">calculadora$mult</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span>
<span class="p">}</span>

<span class="err">#</span><span class="o">*</span> <span class="nx">Returns</span> <span class="nx">minus</span> <span class="k">of</span> <span class="nx">a</span> <span class="nx">and</span> <span class="nx">b</span>
<span class="err">#</span><span class="o">*</span> <span class="p">@</span><span class="nd">param</span> <span class="nx">a</span>
<span class="err">#</span><span class="o">*</span> <span class="p">@</span><span class="nd">param</span> <span class="nx">b</span>
<span class="err">#</span><span class="o">*</span> <span class="p">@</span><span class="nd">get</span> <span class="sr">/di</span><span class="err">v
</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">calculadora</span> <span class="o">&lt;-</span> <span class="nx">modules</span><span class="p">::</span><span class="nx">use</span><span class="p">(</span><span class="dl">'</span><span class="s1">./calculadora.r</span><span class="dl">'</span><span class="p">)</span>
  <span class="nx">calculadora$div</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span>
<span class="p">}</span>

<span class="err">#</span><span class="o">*</span> <span class="nx">Returns</span> <span class="nx">minus</span> <span class="k">of</span> <span class="nx">a</span> <span class="nx">and</span> <span class="nx">b</span>
<span class="err">#</span><span class="o">*</span> <span class="p">@</span><span class="nd">param</span> <span class="nx">a</span>
<span class="err">#</span><span class="o">*</span> <span class="p">@</span><span class="nd">param</span> <span class="nx">b</span>
<span class="err">#</span><span class="o">*</span> <span class="p">@</span><span class="nd">param</span> <span class="nx">c</span>
<span class="err">#</span><span class="o">*</span> <span class="p">@</span><span class="nd">get</span> <span class="sr">/pol</span><span class="err">i
</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">calculadora</span> <span class="o">&lt;-</span> <span class="nx">modules</span><span class="p">::</span><span class="nx">use</span><span class="p">(</span><span class="dl">'</span><span class="s1">./calculadora.r</span><span class="dl">'</span><span class="p">)</span>
  <span class="nx">calculadora$poli</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span>
<span class="p">}</span></code></pre></figure>

<ul>
  <li>Clase calculadora. Es una fichero de R estándar que solo contine las funciones básicas de las operaciones matemáticas</li>
</ul>

<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="nx">suma</span> <span class="o">&lt;-</span> <span class="kd">function</span><span class="p">(</span><span class="nx">num1</span><span class="p">,</span> <span class="nx">num2</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">as</span><span class="p">.</span><span class="nx">numeric</span><span class="p">(</span><span class="nx">num1</span><span class="p">)</span> <span class="o">+</span> <span class="k">as</span><span class="p">.</span><span class="nx">numeric</span><span class="p">(</span><span class="nx">num2</span><span class="p">)</span>
<span class="p">}</span>

<span class="nx">resta</span> <span class="o">&lt;-</span> <span class="kd">function</span><span class="p">(</span><span class="nx">num1</span><span class="p">,</span> <span class="nx">num2</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">as</span><span class="p">.</span><span class="nx">numeric</span><span class="p">(</span><span class="nx">num1</span><span class="p">)</span> <span class="o">-</span> <span class="k">as</span><span class="p">.</span><span class="nx">numeric</span><span class="p">(</span><span class="nx">num2</span><span class="p">)</span>
<span class="p">}</span>

<span class="nx">mult</span> <span class="o">&lt;-</span> <span class="kd">function</span><span class="p">(</span><span class="nx">num1</span><span class="p">,</span> <span class="nx">num2</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">as</span><span class="p">.</span><span class="nx">numeric</span><span class="p">(</span><span class="nx">num1</span><span class="p">)</span> <span class="o">*</span> <span class="k">as</span><span class="p">.</span><span class="nx">numeric</span><span class="p">(</span><span class="nx">num2</span><span class="p">)</span>
<span class="p">}</span>

<span class="nx">div</span> <span class="o">&lt;-</span> <span class="kd">function</span><span class="p">(</span><span class="nx">num1</span><span class="p">,</span> <span class="nx">num2</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">if</span><span class="p">(</span><span class="nx">num2</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">){</span>
    <span class="k">as</span><span class="p">.</span><span class="nx">numeric</span><span class="p">(</span><span class="nx">num1</span><span class="p">)</span> <span class="o">/</span> <span class="k">as</span><span class="p">.</span><span class="nx">numeric</span><span class="p">(</span><span class="nx">num2</span><span class="p">)</span>
  <span class="p">}</span><span class="k">else</span><span class="p">{</span>
    <span class="dl">"</span><span class="s2">No se puede dividir por 0</span><span class="dl">"</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="nx">poli</span> <span class="o">&lt;-</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">,</span> <span class="nx">c</span><span class="p">)</span> <span class="p">{</span>

  <span class="nx">discriminante</span> <span class="o">&lt;-</span> <span class="p">(</span><span class="nx">b</span><span class="o">^</span><span class="mi">2</span><span class="p">)</span> <span class="o">-</span> <span class="p">(</span><span class="mi">4</span><span class="o">*</span><span class="nx">a</span><span class="o">*</span><span class="nx">c</span><span class="p">)</span>

  <span class="k">if</span><span class="p">(</span><span class="nx">discriminante</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">){</span>
    <span class="nx">error</span> <span class="o">&lt;-</span> <span class="dl">"</span><span class="s2">No tiene solucion</span><span class="dl">"</span>
  <span class="p">}</span>
<span class="p">}</span></code></pre></figure>

<p><img src="/images/pages/r_api_calculadora.jpg" alt="r_api_calculadora.jpg" /></p>

<p><img src="/images/pages/api_funcionando.gif" alt="api_funcionando.gif" /></p>]]></content><author><name></name></author><category term="R" /><category term="api" /><category term="rest" /><category term="flask" /><summary type="html"><![CDATA[Proyecto en R realizado para crear una api rest mediante el uso de la librería plumber.]]></summary></entry><entry><title type="html">IA - Perceptrón clasificador dataset iris</title><link href="https://www.rarcos.com/2022/01/29/IA_perceptron_clasificador_iris/" rel="alternate" type="text/html" title="IA - Perceptrón clasificador dataset iris" /><published>2022-01-29T15:33:28+01:00</published><updated>2022-01-29T15:33:28+01:00</updated><id>https://www.rarcos.com/2022/01/29/IA_perceptron_clasificador_iris</id><content type="html" xml:base="https://www.rarcos.com/2022/01/29/IA_perceptron_clasificador_iris/"><![CDATA[<h1 id="perceptrón-clasificador-para-el-dataset-iris">Perceptrón clasificador para el dataset iris</h1>

<p>A continuación, se muestra un proyecto de IA realizado para la clasificación del dataset de flores iris, que se ha portado a la web para que se pueda utilizar por cualquier usuario introduciendo las medidas de las flores.</p>

<p>Abrir el proyecto uso de perceptrones para la clasificación de flores - dataset iris</p>

<p><a href="https://perceptron-clasificador-iris.herokuapp.com/"><img src="/images/pages/app_perceptron_heroku.jpg" alt="Abrir el proyecto uso de perceptrones para la clasificación de flores - dataset iris" /></a></p>

<p>Se ha portado mediante streamlit.</p>]]></content><author><name></name></author><category term="IA" /><category term="streamlit" /><category term="python" /><category term="ML" /><category term="web" /><category term="iris" /><summary type="html"><![CDATA[Proyecto de IA realizado para la clasificación del dataset de flores iris, que se ha portado a la web para que se pueda utilizar por cualquier usuario introduciendo las medidas de las flores.]]></summary></entry><entry><title type="html">IA - En la web con Streamlit</title><link href="https://www.rarcos.com/2022/01/29/IA_en_la_web-Streamlit/" rel="alternate" type="text/html" title="IA - En la web con Streamlit" /><published>2022-01-29T15:33:28+01:00</published><updated>2022-01-29T15:33:28+01:00</updated><id>https://www.rarcos.com/2022/01/29/IA_en_la_web-Streamlit</id><content type="html" xml:base="https://www.rarcos.com/2022/01/29/IA_en_la_web-Streamlit/"><![CDATA[<h1 id="instalación-de-streamlit">Instalación de Streamlit</h1>

<p>Mediante el uso de <a href="https://streamlit.io/">streamlit</a> podemos hacer visibles el uso de nuestros modelos de IA para cualquier usuario.</p>

<figure class="highlight"><pre><code class="language-js" data-lang="js">    <span class="nx">pip</span> <span class="nx">install</span> <span class="nx">streamlit</span></code></pre></figure>

<p>y en el entorno de env que previamente has creado, ejecutar</p>

<figure class="highlight"><pre><code class="language-js" data-lang="js">    <span class="nx">streamlit</span> <span class="nx">run</span> <span class="nx">main</span><span class="p">.</span><span class="nx">py</span></code></pre></figure>

<p>dentro del fichero main, nuestro ‘hello world’ sería:</p>

<figure class="highlight"><pre><code class="language-js" data-lang="js">    <span class="k">import</span> <span class="nx">streamlit</span> <span class="k">as</span> <span class="nx">st</span>

    <span class="nx">st</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="dl">"</span><span class="s2">Hello world!</span><span class="dl">"</span><span class="p">)</span></code></pre></figure>

<p>esto levantará un servidor web con el contenido, y ya tendrás tus scripts de python con IA corriendo en la web, con una interfaz transparente al usuario.</p>

<p>Ahora queda la parte más dificil, enlazar nuestro repositorio git con los códigos fuentes a heroku y hacer deploy automático en cada cambio.</p>

<h1 id="conexión-de-git-con-heroku">Conexión de git con heroku</h1>

<p><a href="">https://devcenter.heroku.com/articles/git</a></p>

<p><a href="">https://devcenter.heroku.com/articles/getting-started-with-python</a></p>

<h2 id="subiendo-nuestro-app-stramlit">Subiendo nuestro app Stramlit</h2>

<p>Actualiza los cambios en el repositorio y heroku lo detecta automáticamente, pero para ello es importante que esté activado el “Automatically deploys from master”, luego en “activity” podrás ver el curso del build y cuando indique la ruta de la nueva app querrá decir que ha terminado.</p>

<h3 id="nota">nota</h3>

<p>He tenido un problema con el fichero del dataset, que es general a todos los fichero que se tengan que acceder desde Heroku y es que no admite las rutas relativas, por ello con este trozo de código se soluciona:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">BASE_DIR <span class="o">=</span> os.path.dirname<span class="o">(</span>os.path.dirname<span class="o">(</span>os.path.abspath<span class="o">(</span>__file__<span class="o">)))</span>
<span class="c">#Donde se tenga que apuntar la ruta</span>
ruta <span class="o">=</span> os.path.join<span class="o">(</span>BASE_DIR, <span class="s1">'nombre_fichero'</span><span class="o">)</span></code></pre></figure>

<p><em>Repositorio con el contenido</em></p>

<p><a href="https://github.com/rubenarcos2/streamlit-perceptron-iris"><img src="/images/pages/repository_small.png" alt="Repositorio" /></a></p>]]></content><author><name></name></author><category term="IA" /><category term="streamlit" /><category term="python" /><category term="ML" /><category term="web" /><summary type="html"><![CDATA[Instalación de Streamlit: mediante el uso de streamlit podemos hacer visibles el uso de nuestros modelos de IA para cualquier usuario.]]></summary></entry><entry><title type="html">Android - Tu web en una app</title><link href="https://www.rarcos.com/2021/11/23/Tu_web_en_app_Android/" rel="alternate" type="text/html" title="Android - Tu web en una app" /><published>2021-11-23T15:33:28+01:00</published><updated>2021-11-23T15:33:28+01:00</updated><id>https://www.rarcos.com/2021/11/23/Tu_web_en_app_Android</id><content type="html" xml:base="https://www.rarcos.com/2021/11/23/Tu_web_en_app_Android/"><![CDATA[<p>Si quieres tener tu página web en una app mobile, solamente tenemos que crear un proyecto nuevo en Android Studio, y hacer lo siguiente:</p>

<h3 id="crear-un-componente-webview-en-el-layout">Crear un componente webview en el layout</h3>

<p>Sustituye el código del <em>activity_main.xml</em> por el siguiente, que añade un componente webview, es realmente una instancia del navegador web.</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;WebView</span>
        <span class="na">android:id=</span><span class="s">"@+id/webview"</span>
        <span class="na">android:layout_width=</span><span class="s">"match_parent"</span>
        <span class="na">android:layout_height=</span><span class="s">"match_parent"</span>
        <span class="nt">/&gt;</span>
</code></pre></div></div>

<p>Veras en la versión de diseño que ocupa todo el espacio del Activity.</p>

<h3 id="permisos-de-la-aplicación">Permisos de la aplicación</h3>

<p>en el fichero <em>AndroidManifest.xml</em> debajo de la declaración del <em>package</em>, añade el código siguiente que habilita los permisos de Internet.</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">"android.permission.INTERNET"</span> <span class="nt">/&gt;</span>
</code></pre></div></div>

<p>También es recomendable añadir en las propiedades de la aplicación:</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>android:usesCleartextTraffic="true"
</code></pre></div></div>

<p>Finalmente el Manifest queda así:</p>

<p><img src="/images/pages/manifest.png" alt="Manifest" /></p>

<h3 id="asignación-de-la-url-web-y-carga-del-webview">Asignación de la URL web y carga del webview</h3>

<p>En la actividad principal <em>MainActivity.java</em>, vamos a añadir las propiedades necesarias de comportamiento del webview, así como la ruta de nuestra web, para que la carge desde el inicio de la aplicación.</p>

<p>Para la asignación del webview de componente con el del layout:</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">WebView</span> <span class="n">myWebView</span> <span class="o">=</span> <span class="o">(</span><span class="nc">WebView</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="no">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">webview</span><span class="o">);</span>
</code></pre></div></div>

<p>Las propiedades de JS activo y contenido:</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">WebSettings</span> <span class="n">webSettings</span> <span class="o">=</span> <span class="n">myWebView</span><span class="o">.</span><span class="na">getSettings</span><span class="o">();</span>
<span class="n">webSettings</span><span class="o">.</span><span class="na">setJavaScriptEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
<span class="n">webSettings</span><span class="o">.</span><span class="na">getAllowContentAccess</span><span class="o">();</span>
</code></pre></div></div>

<p>La creación de un cliente de webview, es decir, una instancia del navegador que cargará dentro de nuestro visor:</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">myWebView</span><span class="o">.</span><span class="na">setWebViewClient</span><span class="o">(</span><span class="k">new</span> <span class="nc">WebViewClient</span><span class="o">());</span>
<span class="n">myWebView</span><span class="o">.</span><span class="na">loadUrl</span><span class="o">(</span><span class="s">"https://www.rarcos.com"</span><span class="o">);</span>
</code></pre></div></div>

<p>Finalmente la clase <em>MainActivity.java</em> queda así:</p>

<p><img src="/images/pages/mainactivity.png" alt="MainActivity" /></p>

<h3 id="personalización-y-estilos">Personalización y estilos</h3>

<p>Si ejecutas ahora la aplicación, verás que funciona perfectamente, pero que nos ha añadido una barra con un título y ha coloreado tanto esta barra como la superior del teléfono.</p>

<p>Si deseas cambiar el nombre y te gusta así, ve a los recursos de texto <em>res-&gt;values-&gt;strings.xml</em> y cambialo</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;resources&gt;</span>
    <span class="nt">&lt;string</span> <span class="na">name=</span><span class="s">"app_name"</span><span class="nt">&gt;</span>Rubén Arcos<span class="nt">&lt;/string&gt;</span>
<span class="nt">&lt;/resources&gt;</span>
</code></pre></div></div>

<p>En mi caso no me gustaba y opté por quitar la barra con el título y el color de ambas. Para ello hay que cambiar los recursos del tema (tanto para el dark como para el light) ubicados en <em>res-&gt;values-&gt;themes/themes.xml</em> añadiendo la siguiente línea:</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;item</span> <span class="na">name=</span><span class="s">"windowNoTitle"</span><span class="nt">&gt;</span>true<span class="nt">&lt;/item&gt;</span>
</code></pre></div></div>

<p>Para finalizar se puede generar los iconos de la app que se mostrarán en el instalador y tenemos que generar para las distintas densidades de pixel en pantalla (DPI), siguiedo el asistente que se encuentra haciendo clic con el botón derecho sobre la carpeta de recursos <em>res</em>:</p>

<p><img src="/images/pages/imageassets.png" alt="ImageAssets" /></p>

<p>Si quieres ver el resultado, te puedes descargar mi app</p>

<p><strong>App con acceso a esta web</strong></p>

<p><a href="/images/pages/rarcos.com.apk"><img src="/images/pages/Code-Optimization-3-256x2561.png" alt="App rarcos.com" /></a></p>]]></content><author><name></name></author><category term="Android" /><category term="apk" /><category term="app" /><summary type="html"><![CDATA[Cómo tener una página web en una app Android]]></summary></entry><entry><title type="html">IoT - Proyectos y Mqtt en openhab</title><link href="https://www.rarcos.com/2021/10/13/IoT_proyectos_openhab/" rel="alternate" type="text/html" title="IoT - Proyectos y Mqtt en openhab" /><published>2021-10-13T16:33:28+02:00</published><updated>2021-10-13T16:33:28+02:00</updated><id>https://www.rarcos.com/2021/10/13/IoT_proyectos_openhab</id><content type="html" xml:base="https://www.rarcos.com/2021/10/13/IoT_proyectos_openhab/"><![CDATA[<h1 id="proyectos-para-domotizar-things-con-openhab">Proyectos para domotizar things con OpenHab</h1>

<p>LLevo mucho tiempo haciendo <em>things</em> con Arduino y sus variantes: ESP8266, ESP32. Y no he querido publicar nada hasta ahora porque veo que la utilidad real viene cuando se puede controlar desde una central y sus salida web, desde TV, Smartphones, Apps… Es aquí cuando la automatización se vuelve universal y cualquier usuario sin conocimiento puede dar instrucciones, recibir datos de sensores y poder automatizar tareas de varias <em>things</em> entre sí y demás. En mi caso los proyectos más grandes e interesantes que he realizado son:</p>

<ul>
  <li>Regadera IoT</li>
  <li>Termómetro y Humedad interior</li>
  <li>Estor IoT</li>
</ul>

<p>He probado varias <em>centralitas</em> que gestionen las <em>things</em> y que utilizen el MQTT como broker para la comunicación como estandar.
Aquí estan las principales: <a href="https://alternativeto.net/feature/home-automation/">https://alternativeto.net/feature/home-automation/</a></p>

<p>También tengo que decir que primero decidí como condicion que debería aprender a hacer las <em>things</em> autónomas, es decir, que cada una de ella realizara las tareas que tenían que hacer de forma autónoma (solo con los microcontroladores) y a ser posible tener un acceso web para ver o tomar acciones. Ha sido después de haber conseguido cumplir con este requisito autoimpuesto, cuando he investigado centros de control y empezado a probarlos.</p>

<p>Actualmente tengo montado dos versiones de cada una de las <em>things</em> la autónoma y la que hace de cliente para OpenHab o cualquier servidor que implemente MQTT. Openhab lo he montado con la imagen de OpenHabian que facilitan en una Raspberry Pi 3 B+ y funciona perfectamente (eso sí con un cargador de 2,5 amp como el original) aunque tienen una carga apreciable en el SO. En una vps tengo HomeAssistants dockerizado. Los dos los he probado a dockerizar, pero Openhab me ha dado un problema de puertos del MQTT que no he conseguido resolver por ahora. En la vps me ha funcionado muy lento, requiere muchos mas recursos.</p>

<h2 id="reloj-meteorológico">Reloj meteorológico</h2>

<p><img src="/images/pages/reloj.png" alt="" />
<img src="/images/pages/IMG_20211026_120326.jpg" alt="" /></p>

<p>Reloj con sensor de temperatura DHT11 a tiempo real, y obtención de la previsión meteorológica mediante la API de <a href="http://openweathermap.org/">http://openweathermap.org/</a> y el envío mediante MQTT de los datos del sensor local a Openhab.</p>

<figure class="video_container">
  <iframe src="/images/pages/VID_20211026_114524.mp4" frameborder="0" allowfullscreen="true"> </iframe>
</figure>

<p>Código fuente y partes imprimibles:</p>

<p><a href="https://github.com/rubenarcos2/IoT-My_learning_path/tree/main/Mqtt/LCD_clock_openweather"><img src="/images/pages/repository_small.png" alt="Repositorio" /></a></p>

<h2 id="regadera-iot">Regadera IoT</h2>

<p><img src="/images/pages/IMG_20200904_195754.jpg" alt="" /></p>

<p>Regadera funcionando de forma autónoma, tiene un reloj interno que se activa a una hora y riega mientras pasa un minuto y hasta que detecta saturación de la humedad de la tierra, através del sensor capacitativo de humedad que está clavado en la tierra.</p>

<figure class="video_container">
  <iframe src="/images/pages/VID_20200904_195800.mp4" frameborder="0" allowfullscreen="true"> </iframe>
</figure>

<p>Código fuente y partes imprimibles:</p>

<p><a href="https://github.com/rubenarcos2/IoT-My_learning_path/tree/main/Mqtt/regader_iot_mqtt"><img src="/images/pages/repository_small.png" alt="Repositorio" /></a></p>]]></content><author><name></name></author><category term="iot" /><category term="mqtt" /><category term="arduino" /><category term="raspberrypi" /><category term="esp8266" /><summary type="html"><![CDATA[Proyectos para domotizar things con OpenHab]]></summary></entry><entry><title type="html">JS - Conversion de ES6 a ES5, transpilado</title><link href="https://www.rarcos.com/2021/08/14/Conversion_js_de_es6_a_es5-transpilado/" rel="alternate" type="text/html" title="JS - Conversion de ES6 a ES5, transpilado" /><published>2021-08-14T16:33:28+02:00</published><updated>2021-08-14T16:33:28+02:00</updated><id>https://www.rarcos.com/2021/08/14/Conversion_js_de_es6_a_es5-transpilado</id><content type="html" xml:base="https://www.rarcos.com/2021/08/14/Conversion_js_de_es6_a_es5-transpilado/"><![CDATA[<h1 id="transpilación-con-babel">Transpilación con Babel</h1>

<p>Transpilar manualmente el código ES6 a ES5 es posible, aunque la conversión manual sólo te lleves unos minutos, es insostenible a medida que aumenta el tamaño del archivo JavaScript.</p>

<p>Dado que ES6 es previsiblemente compatible con versiones anteriores, un grupo de programadores de JavaScript ha desarrollado una biblioteca de JavaScript llamada Babel que transpila JavaScript ES6 a ES5.</p>

<p><em>La transpilación es el proceso de convertir un lenguaje de programación a otro.</em></p>

<p>Los siguientes comandos sirve para utilizar Babel y transpilar la nueva versión de JavaScript (ES6), fácil de escribir, a la antigua versión de JavaScript (ES5), compatible con el navegador.</p>

<p>En las siguientes instrucciones, pasarás el código de JavaScript ES6 a Babel, que lo transpilará a ES5 y lo escribirá en un archivo en el directorio lib.</p>

<p>Esto instala uno de los dos paquetes <em>Babel</em> necesarios.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm <span class="nb">install </span>babel-cli
</code></pre></div></div>

<p>Esto instala el segundo de los dos paquetes Babel necesarios.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm <span class="nb">install </span>babel-preset-env
</code></pre></div></div>

<p>Puedes ver el código ES5 en ./lib/main.js.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm run build
</code></pre></div></div>

<p>Es posible que tengas que actualizar para ver el directorio lib recién creado.</p>

<p>Resultado del proceso de transpilado de ES6 a ES5:</p>

<table>
  <tbody>
    <tr>
      <td><img src="/images/pages/ES6.png" alt="" /></td>
      <td><img src="/images/pages/ES5.png" alt="" /></td>
    </tr>
  </tbody>
</table>

<p>Recuerda que si a los comandos anteriores les añades -D, indica a npm que añada cada paquete a una propiedad llamada devDependencies en package.json. Una vez que las dependencias del proyecto están listadas en devDependencies, otros desarrolladores pueden ejecutar su proyecto sin instalar cada paquete por separado. En su lugar, pueden simplemente ejecutar npm install - que indica a npm que busque dentro de package.json y descargue todos los paquetes listados en devDependencies.</p>

<h2 id="transpilado-a-una-versión-específica">Transpilado a una versión específica</h2>

<p>Por defecto, como se ha comprobado antes, se transpila a ES5, pero si queremos hacerlo a cualquier otra versión de ECMAScript, tenemos que crear en la raiz del proyecto el fichero  <em>.babelrc</em> .</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">touch</span> .babelrc
</code></pre></div></div>

<p>Dentro de .babelrc necesita definir el preajuste para su archivo JavaScript inicial. El preajuste especifica la versión de su archivo JavaScript inicial.</p>

<p>Para especificar que estamos transpilando código desde una fuente ES6+, tenemos que añadir el siguiente objeto JavaScript en .babelrc:</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"presets"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"env"</span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>Cuando se ejecuta Babel, busca en .babelrc para determinar la versión del archivo JavaScript inicial. En este caso, [“env”] indica a Babel que transpile cualquier código de las versiones ES6 y posteriores.</p>

<p><img src="/images/pages/proyect_schema.png" alt="" /></p>

<p>Hay un último paso antes de poder transpilar nuestro código. Necesitamos especificar un script en package.json que inicie la transpilación de ES6+ a ES5.</p>

<p>Dentro del archivo package.json, hay una propiedad llamada <strong>scripts</strong> así:</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nl">"scripts"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="nl">"test"</span><span class="p">:</span><span class="w"> </span><span class="s2">"echo </span><span class="se">\"</span><span class="s2">Error: no test specified</span><span class="se">\"</span><span class="s2"> &amp;&amp; exit 1"</span><span class="w">
</span><span class="p">}</span><span class="err">,</span><span class="w">
</span></code></pre></div></div>

<p>Añadimos la última línea de  <strong>build</strong> :</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nl">"scripts"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="nl">"test"</span><span class="p">:</span><span class="w"> </span><span class="s2">"echo </span><span class="se">\"</span><span class="s2">Error: no test specified</span><span class="se">\"</span><span class="s2"> &amp;&amp; exit 1"</span><span class="w">
   </span><span class="nl">"build"</span><span class="p">:</span><span class="w"> </span><span class="s2">"babel src -d lib"</span><span class="w">
</span><span class="p">}</span><span class="err">,</span><span class="w">
</span></code></pre></div></div>

<p>Así especificamos que se transpile a ES5.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm run build
</code></pre></div></div>]]></content><author><name></name></author><category term="es5" /><category term="es6" /><category term="js" /><summary type="html"><![CDATA[Transpilación con Babel: utilizar Babel y transpilar la nueva versión de JavaScript (ES6), fácil de escribir, a la antigua versión de JavaScript (ES5), compatible con el navegador..]]></summary></entry></feed>