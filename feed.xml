<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="https://rarcos.com//feed.xml" rel="self" type="application/atom+xml" /><link href="https://rarcos.com//" rel="alternate" type="text/html" /><updated>2022-07-08T09:26:48+02:00</updated><id>https://rarcos.com//feed.xml</id><title type="html">Rubén Arcos</title><subtitle>Desarrollador de aplicaciones multiplataformas</subtitle><entry><title type="html">Java - Stream Api</title><link href="https://rarcos.com//2022/07/07/Java-Stream-Api/" rel="alternate" type="text/html" title="Java - Stream Api" /><published>2022-07-07T16:33:28+02:00</published><updated>2022-07-07T16:33:28+02:00</updated><id>https://rarcos.com//2022/07/07/Java-Stream-Api</id><content type="html" xml:base="https://rarcos.com//2022/07/07/Java-Stream-Api/"><![CDATA[<h1 id="utilización-de-la-stream-api">Utilización de la Stream Api</h1>

<p>La API Stream ofrece un enfoque alternativo de “tuberías y filtros” para el procesamiento de colecciones.</p>

<p>Antes de Java 8 debías manipular colecciones manualmente, por lo general iterando a través de la colección y usando operadores en cada elemento en turno. Estos bucles explícitos requerían muchas repeticiones, además de que es difícil entender la estructura del ciclo for hasta que uno llega al cuerpo del mismo.</p>

<p>La API Stream te proporciona una forma de procesar datos de manera más eficiente al realizar una única ejecución sobre ellos, independientemente de la cantidad de información que estés procesando o de si estás realizando múltiples cálculos</p>

<p>El código fuente con los ejerciciós está <a href="https://github.com/rubenarcos2/java8StreamApi">aquí</a>, he utilizado TDD:</p>

<p><strong>Map</strong></p>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">com.rarcos</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">static</span> <span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">stream</span><span class="o">.</span><span class="na">Collectors</span><span class="o">.</span><span class="na">toList</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.stream.IntStream</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">MapCollection</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="nf">MapCollection</span><span class="o">()</span> <span class="o">{</span>
	<span class="o">}</span>

	<span class="c1">// Map 1 - All characters upper case are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">mapAllUpperCaseJava7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">newCollection</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
		<span class="k">for</span> <span class="o">(</span><span class="nc">String</span> <span class="n">elm</span> <span class="o">:</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">newCollection</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">elm</span><span class="o">.</span><span class="na">toUpperCase</span><span class="o">());</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">newCollection</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">mapAllUpperCase</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">map</span><span class="o">(</span><span class="nl">String:</span><span class="o">:</span><span class="n">toUpperCase</span><span class="o">).</span><span class="na">toList</span><span class="o">();</span>
	<span class="o">}</span>

	<span class="c1">// Map 2 - All length of countries are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">mapLengthJava7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">newCollection</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
		<span class="k">for</span> <span class="o">(</span><span class="nc">String</span> <span class="n">elm</span> <span class="o">:</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">newCollection</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">elm</span><span class="o">.</span><span class="na">length</span><span class="o">()));</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">newCollection</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">IntStream</span> <span class="nf">mapLength</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">mapToInt</span><span class="o">(</span><span class="nl">String:</span><span class="o">:</span><span class="n">length</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="c1">// Map 3 - All name of person to upper case are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">mapNamePersonUpperCaseJava7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Person</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">newCollection</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
		<span class="k">for</span> <span class="o">(</span><span class="nc">Person</span> <span class="n">elm</span> <span class="o">:</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">newCollection</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">elm</span><span class="o">.</span><span class="na">getName</span><span class="o">().</span><span class="na">toUpperCase</span><span class="o">()));</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">newCollection</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">mapNamePersonUpperCase</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Person</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">map</span><span class="o">(</span><span class="n">e</span> <span class="o">-&gt;</span> <span class="n">e</span><span class="o">.</span><span class="na">getName</span><span class="o">()).</span><span class="na">map</span><span class="o">(</span><span class="n">e</span> <span class="o">-&gt;</span> <span class="n">e</span><span class="o">.</span><span class="na">toUpperCase</span><span class="o">()).</span><span class="na">toList</span><span class="o">();</span>
	<span class="o">}</span>

	<span class="c1">// Map 4 - Flat map are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">mapFlatJava7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">newCollection</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
        <span class="k">for</span> <span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">subCollection</span> <span class="o">:</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">for</span> <span class="o">(</span><span class="nc">String</span> <span class="n">value</span> <span class="o">:</span> <span class="n">subCollection</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">newCollection</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">value</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">newCollection</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">mapFlat</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">stream</span><span class="o">()</span> <span class="c1">// Convert collection to Stream</span>
                <span class="o">.</span><span class="na">flatMap</span><span class="o">(</span><span class="n">value</span> <span class="o">-&gt;</span> <span class="n">value</span><span class="o">.</span><span class="na">stream</span><span class="o">())</span> <span class="c1">// Replace list with stream</span>
                <span class="o">.</span><span class="na">collect</span><span class="o">(</span><span class="n">toList</span><span class="o">());</span> <span class="c1">// Collect results to a new list</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre></figure>

<p><strong>Filter</strong></p>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">com.rarcos</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">FilterCollection</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="nf">FilterCollection</span><span class="o">()</span> <span class="o">{</span>
	<span class="o">}</span>

	<span class="c1">// Filter 1 - Filter collection so that only elements with less or equal then 5</span>
	<span class="c1">// characters are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">filterShorterThant5CharactersJava7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">newCollection</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
		<span class="k">for</span> <span class="o">(</span><span class="nc">String</span> <span class="n">elm</span> <span class="o">:</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">if</span> <span class="o">(</span><span class="n">elm</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">&lt;=</span> <span class="mi">5</span><span class="o">)</span>
				<span class="n">newCollection</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">elm</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">newCollection</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">filterShorterThant5Characters</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">filter</span><span class="o">(</span><span class="n">e</span> <span class="o">-&gt;</span> <span class="n">e</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">&lt;=</span> <span class="mi">5</span><span class="o">).</span><span class="na">toList</span><span class="o">();</span>
	<span class="o">}</span>

	<span class="c1">// Filter 2 - Filter collection start with C character are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">filterWithCharacterCJava7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">newCollection</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
		<span class="k">for</span> <span class="o">(</span><span class="nc">String</span> <span class="n">elm</span> <span class="o">:</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">if</span> <span class="o">(</span><span class="n">elm</span><span class="o">.</span><span class="na">toUpperCase</span><span class="o">().</span><span class="na">contains</span><span class="o">(</span><span class="s">"C"</span><span class="o">))</span>
				<span class="n">newCollection</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">elm</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">newCollection</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">filterWithCharacterC</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">filter</span><span class="o">(</span><span class="n">e</span> <span class="o">-&gt;</span> <span class="n">e</span><span class="o">.</span><span class="na">toUpperCase</span><span class="o">().</span><span class="na">contains</span><span class="o">(</span><span class="s">"C"</span><span class="o">)).</span><span class="na">toList</span><span class="o">();</span>
	<span class="o">}</span>

	<span class="c1">// Filter 3 - Filter collection with distinct characters are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">filterWithDistinctCharactersJava7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">listDistinctInts</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;(</span><span class="n">collection</span><span class="o">.</span><span class="na">size</span><span class="o">());</span>
		<span class="k">for</span> <span class="o">(</span><span class="nc">String</span> <span class="n">i</span> <span class="o">:</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">if</span> <span class="o">(!</span><span class="n">listDistinctInts</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">i</span><span class="o">))</span> <span class="o">{</span>
				<span class="n">listDistinctInts</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
			<span class="o">}</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">listDistinctInts</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">filterWithDistinctCharacters</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">distinct</span><span class="o">().</span><span class="na">toList</span><span class="o">();</span>
	<span class="o">}</span>

	<span class="c1">// Filter 4 - Filter collection 3 first elements are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">filter3FirstJava7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">newCollection</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;(</span><span class="n">collection</span><span class="o">.</span><span class="na">size</span><span class="o">());</span>
		<span class="n">newCollection</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">collection</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">));</span>
		<span class="n">newCollection</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">collection</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">));</span>
		<span class="n">newCollection</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">collection</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">2</span><span class="o">));</span>
		<span class="k">return</span> <span class="n">newCollection</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">filter3First</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">limit</span><span class="o">(</span><span class="mi">3</span><span class="o">).</span><span class="na">toList</span><span class="o">();</span>
	<span class="o">}</span>

	<span class="c1">// Filter 4 - Filter collection all elements minus 3 first elements are</span>
	<span class="c1">// returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">filterAllMinus3FirstJava7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">newCollection</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;(</span><span class="n">collection</span><span class="o">.</span><span class="na">size</span><span class="o">());</span>

		<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">3</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">collection</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="n">newCollection</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">collection</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">));</span>
		<span class="o">}</span>

		<span class="k">return</span> <span class="n">newCollection</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">filterAllMinus3First</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">skip</span><span class="o">(</span><span class="mi">3</span><span class="o">).</span><span class="na">toList</span><span class="o">();</span>
	<span class="o">}</span>
<span class="o">}</span></code></pre></figure>

<p><strong>Search</strong></p>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">com.rarcos</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Optional</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Random</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">SearchCollection</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="nf">SearchCollection</span><span class="o">()</span> <span class="o">{</span>
	<span class="o">}</span>

	<span class="c1">// Search 1 - Search it have more 4 characters are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">searchAllMore4CharactersJava7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">newCollection</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
		<span class="k">for</span> <span class="o">(</span><span class="nc">String</span> <span class="n">elm</span> <span class="o">:</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">if</span> <span class="o">(</span><span class="n">elm</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">4</span><span class="o">)</span>
				<span class="n">newCollection</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">elm</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">newCollection</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">searchAllMore4Characters</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">allMatch</span><span class="o">(</span><span class="n">e</span> <span class="o">-&gt;</span> <span class="n">e</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">4</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="c1">// Search 2 - Search it have one or more condition are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">searchConditionJava7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">newCollection</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
		<span class="k">for</span> <span class="o">(</span><span class="nc">String</span> <span class="n">elm</span> <span class="o">:</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">if</span> <span class="o">(</span><span class="n">elm</span> <span class="o">==</span> <span class="s">"Spain"</span><span class="o">)</span>
				<span class="n">newCollection</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">elm</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">newCollection</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">searchCondition</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">anyMatch</span><span class="o">(</span><span class="n">e</span> <span class="o">-&gt;</span> <span class="n">e</span> <span class="o">==</span> <span class="s">"Spain"</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="c1">// Search 2 - Search it haven't condition are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">searchNotConditionJava7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">newCollection</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
		<span class="k">for</span> <span class="o">(</span><span class="nc">String</span> <span class="n">elm</span> <span class="o">:</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">if</span> <span class="o">(</span><span class="n">elm</span> <span class="o">==</span> <span class="s">"Spain"</span><span class="o">)</span>
				<span class="n">newCollection</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">elm</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">newCollection</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">searchNotCondition</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">noneMatch</span><span class="o">(</span><span class="n">e</span> <span class="o">-&gt;</span> <span class="n">e</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">&gt;=</span> <span class="mi">4</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="c1">// Search 3 - Search any element are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">searchAnyElementJava7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">newCollection</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
		<span class="nc">Random</span> <span class="n">r</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Random</span><span class="o">();</span>
		<span class="kt">int</span> <span class="n">pos</span> <span class="o">=</span> <span class="n">r</span><span class="o">.</span><span class="na">nextInt</span><span class="o">((</span><span class="n">collection</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">-</span> <span class="mi">0</span><span class="o">)</span> <span class="o">+</span> <span class="mi">1</span><span class="o">)</span> <span class="o">+</span> <span class="mi">0</span><span class="o">;</span>
		<span class="n">newCollection</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">collection</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">pos</span><span class="o">));</span>
		<span class="k">return</span> <span class="n">newCollection</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">Optional</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">searchAnyElement</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">parallelStream</span><span class="o">().</span><span class="na">findAny</span><span class="o">();</span>
	<span class="o">}</span>

	<span class="c1">// Search 4 - Search first element are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">searchFirstElementJava7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">newCollection</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
		<span class="nc">Random</span> <span class="n">r</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Random</span><span class="o">();</span>
		<span class="kt">int</span> <span class="n">pos</span> <span class="o">=</span> <span class="n">r</span><span class="o">.</span><span class="na">nextInt</span><span class="o">((</span><span class="n">collection</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">-</span> <span class="mi">0</span><span class="o">)</span> <span class="o">+</span> <span class="mi">1</span><span class="o">)</span> <span class="o">+</span> <span class="mi">0</span><span class="o">;</span>
		<span class="n">newCollection</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">collection</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">pos</span><span class="o">));</span>
		<span class="k">return</span> <span class="n">newCollection</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">Optional</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">searchFirstElement</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">parallelStream</span><span class="o">().</span><span class="na">findFirst</span><span class="o">();</span>
	<span class="o">}</span>
<span class="o">}</span></code></pre></figure>

<p><strong>Data and Calculate</strong></p>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">com.rarcos</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Comparator</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.OptionalInt</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">DataAndCalculateCollection</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="nf">DataAndCalculateCollection</span><span class="o">()</span> <span class="o">{</span>
	<span class="o">}</span>

	<span class="c1">// Data and calculate 1 - Max number are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">dataAndCalculateMaxJava7</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="kt">int</span> <span class="n">maximum</span> <span class="o">=</span> <span class="n">collection</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span>
		<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">collection</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="k">if</span> <span class="o">(</span><span class="n">maximum</span> <span class="o">&lt;</span> <span class="n">collection</span><span class="o">[</span><span class="n">i</span><span class="o">])</span>
				<span class="n">maximum</span> <span class="o">=</span> <span class="n">collection</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">maximum</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">OptionalInt</span> <span class="nf">dataAndCalculateMax</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">stream</span><span class="o">(</span><span class="n">collection</span><span class="o">).</span><span class="na">reduce</span><span class="o">(</span><span class="nl">Integer:</span><span class="o">:</span><span class="n">max</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="c1">// Data and calculate 2 - Sum of numbers are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">dataAndCalculateSumJava7</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="kt">int</span> <span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">number</span> <span class="o">:</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">sum</span> <span class="o">+=</span> <span class="n">number</span><span class="o">;</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">sum</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">dataAndCalculateSum</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">stream</span><span class="o">(</span><span class="n">collection</span><span class="o">).</span><span class="na">reduce</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="o">(</span><span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="n">x</span> <span class="o">+</span> <span class="n">y</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="c1">// Data and calculate 3 - Elements sorted are returned.</span>
<span class="c1">//	public static int[] dataAndCalculateSortJava7(int[] collection) {</span>
<span class="c1">//		return Collections.sort(collection);</span>
<span class="c1">//	}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">Object</span><span class="o">[]</span> <span class="nf">dataAndCalculateSort</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">sorted</span><span class="o">((</span><span class="n">s1</span><span class="o">,</span> <span class="n">s2</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="n">s1</span><span class="o">.</span><span class="na">compareTo</span><span class="o">(</span><span class="n">s2</span><span class="o">)).</span><span class="na">toArray</span><span class="o">();</span>
	<span class="o">}</span>

	<span class="c1">// Data and calculate 4 - Oldest person are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">Person</span> <span class="nf">getOldestPerson7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Person</span><span class="o">&gt;</span> <span class="n">people</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">Person</span> <span class="n">oldestPerson</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Person</span><span class="o">(</span><span class="s">""</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
		<span class="k">for</span> <span class="o">(</span><span class="nc">Person</span> <span class="n">person</span> <span class="o">:</span> <span class="n">people</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">if</span> <span class="o">(</span><span class="n">person</span><span class="o">.</span><span class="na">getAge</span><span class="o">()</span> <span class="o">&gt;</span> <span class="n">oldestPerson</span><span class="o">.</span><span class="na">getAge</span><span class="o">())</span> <span class="o">{</span>
				<span class="n">oldestPerson</span> <span class="o">=</span> <span class="n">person</span><span class="o">;</span>
			<span class="o">}</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">oldestPerson</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">Person</span> <span class="nf">getOldestPerson</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Person</span><span class="o">&gt;</span> <span class="n">people</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">people</span><span class="o">.</span><span class="na">stream</span><span class="o">()</span> <span class="c1">// Convert collection to Stream</span>
				<span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="nc">Comparator</span><span class="o">.</span><span class="na">comparing</span><span class="o">(</span><span class="nl">Person:</span><span class="o">:</span><span class="n">getAge</span><span class="o">))</span> <span class="c1">// Compares people ages</span>
				<span class="o">.</span><span class="na">get</span><span class="o">();</span> <span class="c1">// Gets stream result</span>
	<span class="o">}</span>
<span class="o">}</span></code></pre></figure>

<hr />

<p>El código fuente con los ejerciciós está aquí, he utilizado TDD:</p>

<p><em>Repositorio con el contenido</em></p>

<p><a href="https://github.com/rubenarcos2/java8StreamApi"><img src="/images/pages/repository_small.png" alt="Repositorio" /></a></p>

<h5 id="más-sobre-todas-las-novedades-de-java-8">Más sobre todas las novedades de Java 8:</h5>

<p><a href="https://code.tutsplus.com/es/tutorials/java-8-for-android-development-stream-api-and-date-time-libraries--cms-29904">https://code.tutsplus.com/es/tutorials/java-8-for-android-development-stream-api-and-date-time-libraries–cms-29904</a></p>

<h5 id="más-ejercicios-para-practicar-el-stream-api">Más ejercicios para practicar el stream api:</h5>

<p><a href="https://github.com/vfarcic/java-8-exercises">https://github.com/vfarcic/java-8-exercises</a></p>

<p><a href="https://github.com/OpenWebinarsNet/Curso-java-8-para-programadores-java">https://github.com/OpenWebinarsNet/Curso-java-8-para-programadores-java</a></p>]]></content><author><name></name></author><category term="java" /><category term="stream api" /><summary type="html"><![CDATA[Uso de la Stream Api de Java 8]]></summary></entry><entry><title type="html">Python - NLTK</title><link href="https://rarcos.com//2022/04/05/Python-NLTK/" rel="alternate" type="text/html" title="Python - NLTK" /><published>2022-04-05T07:30:00+02:00</published><updated>2022-04-05T07:30:00+02:00</updated><id>https://rarcos.com//2022/04/05/Python%20-%20NLTK</id><content type="html" xml:base="https://rarcos.com//2022/04/05/Python-NLTK/"><![CDATA[<h1 id="buscador-de-sustantivos">Buscador de sustantivos</h1>

<p>Desarrollo de un buscador de sustantivos. El programa consistirá en preprocesar un documento, extraer todos sus sustantivos en minúsculas y guardarlos en un índice para poder hacer luego búsquedas solo de sustantivos.</p>

<p>Dado los archivos de texto con las siguientes secciones: título, noticia, resumen; 
desarrollar un programa que implemente las siguientes funcionalidades:</p>
<ul>
  <li>Leer el contenido de un fichero.
    Leer con codificación utf-8 para que los acentos sean detectados:</li>
</ul>

<figure class="highlight"><pre><code class="language-python" data-lang="python">        <span class="nb">open</span> <span class="p">(</span><span class="n">ruta_fichero</span><span class="p">,</span> <span class="s">"r"</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">'utf-8'</span><span class="p">)</span>
        </code></pre></figure>

<ul>
  <li>Detectar dónde empieza cada sección y guardar el contenido de cada sección por separado.</li>
  <li>Para cada sección
    <ul>
      <li>Extraer los tokens (word_tokenizer)</li>
      <li>Convertir a minúsculas (función lower() de str de python)</li>
      <li>Eliminar los acentos</li>
      <li>Eliminar las stopwords</li>
      <li>Extraer los POS tags</li>
      <li>Eliminar las palabras que no sean nombres.</li>
    </ul>
  </li>
</ul>

<h2 id="script-de-extracción-de-datos-de-fichero-y-preprocesado">Script de extracción de datos de fichero y preprocesado</h2>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="c1"># Importing the required libraries
</span><span class="kn">import</span> <span class="nn">nltk</span>
<span class="kn">import</span> <span class="nn">unicodedata</span>
<span class="kn">from</span> <span class="nn">nltk.corpus</span> <span class="kn">import</span> <span class="n">stopwords</span>

<span class="n">nltk</span><span class="p">.</span><span class="n">download</span><span class="p">(</span><span class="s">'punkt'</span><span class="p">)</span>
<span class="n">nltk</span><span class="p">.</span><span class="n">download</span><span class="p">(</span><span class="s">'stopwords'</span><span class="p">)</span>
<span class="n">nltk</span><span class="p">.</span><span class="n">download</span><span class="p">(</span><span class="s">'averaged_perceptron_tagger'</span><span class="p">)</span>

<span class="n">stopwords</span><span class="o">=</span><span class="nb">set</span><span class="p">(</span><span class="n">stopwords</span><span class="p">.</span><span class="n">words</span><span class="p">(</span><span class="s">'spanish'</span><span class="p">))</span>

<span class="c1"># Extraer los tokens (word_tokenizer)
</span><span class="k">def</span> <span class="nf">extract_tokens</span><span class="p">(</span><span class="n">sentence</span><span class="p">):</span>
  <span class="k">return</span> <span class="n">nltk</span><span class="p">.</span><span class="n">word_tokenize</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>

<span class="c1"># Convertir a minúsculas (función lower() de str de python)
</span><span class="k">def</span> <span class="nf">to_lower</span><span class="p">(</span><span class="n">sentence</span><span class="p">):</span>
  <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">sentence</span><span class="p">)):</span>
    <span class="n">sentence</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">sentence</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">lower</span><span class="p">()</span>
  <span class="k">return</span> <span class="n">sentence</span>

<span class="c1"># Eliminar los acentos
</span><span class="k">def</span> <span class="nf">remove_accents_word</span><span class="p">(</span><span class="n">input_str</span><span class="p">):</span>
    <span class="n">nfkd_form</span> <span class="o">=</span> <span class="n">unicodedata</span><span class="p">.</span><span class="n">normalize</span><span class="p">(</span><span class="s">'NFKD'</span><span class="p">,</span> <span class="n">input_str</span><span class="p">)</span>
    <span class="n">only_ascii</span> <span class="o">=</span> <span class="n">nfkd_form</span><span class="p">.</span><span class="n">encode</span><span class="p">(</span><span class="s">'ASCII'</span><span class="p">,</span> <span class="s">'ignore'</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">only_ascii</span>

<span class="k">def</span> <span class="nf">remove_accents</span><span class="p">(</span><span class="n">sentence</span><span class="p">):</span>
  <span class="n">encoding</span> <span class="o">=</span> <span class="s">"utf-8"</span> <span class="c1"># or iso-8859-15, or cp1252, or whatever encoding you use
</span>
  <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">sentence</span><span class="p">)):</span>
    <span class="n">sentence</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">remove_accents_word</span><span class="p">(</span><span class="n">sentence</span><span class="p">[</span><span class="n">i</span><span class="p">]).</span><span class="n">decode</span><span class="p">(</span><span class="n">encoding</span><span class="p">)</span>
  <span class="k">return</span> <span class="n">sentence</span>

<span class="c1"># Eliminar las stopwords
</span><span class="k">def</span> <span class="nf">remove_stopwords</span><span class="p">(</span><span class="n">data</span><span class="p">):</span>
  <span class="n">output_array</span><span class="o">=</span><span class="p">[]</span>
  <span class="k">for</span> <span class="n">sentence</span> <span class="ow">in</span> <span class="n">data</span><span class="p">:</span>
      <span class="n">temp_list</span><span class="o">=</span><span class="p">[]</span>
      <span class="k">for</span> <span class="n">word</span> <span class="ow">in</span> <span class="n">sentence</span><span class="p">.</span><span class="n">split</span><span class="p">():</span>
          <span class="k">if</span> <span class="n">word</span><span class="p">.</span><span class="n">lower</span><span class="p">()</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">stopwords</span><span class="p">:</span>
              <span class="n">temp_list</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">word</span><span class="p">)</span>
      <span class="n">output_array</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">' '</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">temp_list</span><span class="p">))</span>

  <span class="n">output_array</span> <span class="o">=</span> <span class="p">[</span><span class="n">x</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">output_array</span> <span class="k">if</span> <span class="n">x</span> <span class="o">!=</span> <span class="s">''</span><span class="p">]</span>
  <span class="k">return</span> <span class="n">output_array</span>

<span class="c1"># Extraer los POS tags
</span><span class="k">def</span> <span class="nf">extract_pos_tags</span><span class="p">(</span><span class="n">data</span><span class="p">):</span>
  <span class="n">text_tag</span> <span class="o">=</span> <span class="n">nltk</span><span class="p">.</span><span class="n">pos_tag</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
  <span class="k">return</span> <span class="n">text_tag</span>

<span class="c1"># Eliminar las palabras que no sean nombres.
</span><span class="k">def</span> <span class="nf">remove_not_nouns</span><span class="p">(</span><span class="n">data</span><span class="p">):</span>
  <span class="n">data_not</span> <span class="o">=</span> <span class="p">[]</span>
  <span class="k">for</span> <span class="n">d</span> <span class="ow">in</span> <span class="n">data</span><span class="p">:</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">d</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="s">"NN"</span><span class="p">):</span>
      <span class="n">data_not</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">d</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
  <span class="k">return</span> <span class="n">data_not</span>

<span class="c1"># Lectura y extracción del fichero 1
</span><span class="n">text1</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">"MiaTexto1.txt"</span><span class="p">,</span> <span class="s">"r"</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">'utf-8'</span><span class="p">)</span>
<span class="n">sentences</span> <span class="o">=</span> <span class="n">text1</span><span class="p">.</span><span class="n">readlines</span><span class="p">()</span>
<span class="n">text1</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>

<span class="c1">#División de los fragmentos del fichero 1
</span><span class="n">sentences_cleaned</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">sentences</span><span class="p">:</span>
  <span class="n">sentence</span> <span class="o">=</span> <span class="s">""</span>
  <span class="k">for</span> <span class="n">char</span> <span class="ow">in</span> <span class="n">line</span><span class="p">:</span>
    <span class="k">if</span><span class="p">(</span><span class="n">char</span> <span class="o">!=</span> <span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="p">):</span>
      <span class="n">sentence</span> <span class="o">+=</span> <span class="n">char</span>
  <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span> <span class="o">&gt;</span><span class="mi">0</span><span class="p">:</span>
    <span class="n">sentences_cleaned</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>

<span class="n">titulo</span> <span class="o">=</span> <span class="n">sentences_cleaned</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
<span class="n">noticia</span> <span class="o">=</span> <span class="n">sentences_cleaned</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="o">+</span> <span class="s">" "</span> <span class="o">+</span> <span class="n">sentences_cleaned</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span> <span class="o">+</span> <span class="s">" "</span> <span class="o">+</span> <span class="n">sentences_cleaned</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span> <span class="o">+</span> <span class="s">" "</span> <span class="o">+</span> <span class="n">sentences_cleaned</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span>
<span class="n">resumen</span> <span class="o">=</span> <span class="n">sentences_cleaned</span><span class="p">[</span><span class="mi">8</span><span class="p">]</span> <span class="o">+</span> <span class="s">" "</span> <span class="o">+</span> <span class="n">sentences_cleaned</span><span class="p">[</span><span class="mi">9</span><span class="p">]</span>

<span class="c1"># Lectura y extracción del fichero 2
</span><span class="n">text2</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">"MiaTexto2.txt"</span><span class="p">,</span> <span class="s">"r"</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">'utf-8'</span><span class="p">)</span>
<span class="n">sentences2</span> <span class="o">=</span> <span class="n">text2</span><span class="p">.</span><span class="n">readlines</span><span class="p">()</span>
<span class="n">text2</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>

<span class="c1">#División de los fragmentos del fichero 2
</span><span class="n">sentences_cleaned2</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">sentences2</span><span class="p">:</span>
  <span class="n">sentence</span> <span class="o">=</span> <span class="s">""</span>
  <span class="k">for</span> <span class="n">char</span> <span class="ow">in</span> <span class="n">line</span><span class="p">:</span>
    <span class="k">if</span><span class="p">(</span><span class="n">char</span> <span class="o">!=</span> <span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="p">):</span>
      <span class="n">sentence</span> <span class="o">+=</span> <span class="n">char</span>
  <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span> <span class="o">&gt;</span><span class="mi">0</span><span class="p">:</span>
    <span class="n">sentences_cleaned2</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>

<span class="n">titulo2</span> <span class="o">=</span> <span class="n">sentences_cleaned2</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> 
<span class="n">noticia2</span><span class="o">=</span> <span class="n">sentences_cleaned2</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">+</span> <span class="s">" "</span> <span class="o">+</span> <span class="n">sentences_cleaned2</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="o">+</span> <span class="s">" "</span> <span class="o">+</span> <span class="n">sentences_cleaned2</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span> <span class="o">+</span> <span class="s">" "</span> <span class="o">+</span> <span class="n">sentences_cleaned2</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span>
<span class="n">resumen2</span> <span class="o">=</span> <span class="n">sentences_cleaned2</span><span class="p">[</span><span class="mi">7</span><span class="p">]</span>

<span class="c1"># Preprocesado del fichero 1
</span><span class="n">titulo_process</span> <span class="o">=</span> <span class="n">extract_tokens</span><span class="p">(</span><span class="n">titulo</span><span class="p">)</span>
<span class="n">titulo_process</span> <span class="o">=</span> <span class="n">to_lower</span><span class="p">(</span><span class="n">titulo_process</span><span class="p">)</span>
<span class="n">titulo_process</span> <span class="o">=</span> <span class="n">remove_accents</span><span class="p">(</span><span class="n">titulo_process</span><span class="p">)</span>
<span class="n">titulo_process</span> <span class="o">=</span> <span class="n">remove_stopwords</span><span class="p">(</span><span class="n">titulo_process</span><span class="p">)</span>
<span class="n">titulo_process</span> <span class="o">=</span> <span class="n">extract_pos_tags</span><span class="p">(</span><span class="n">titulo_process</span><span class="p">)</span>
<span class="n">titulo_process</span> <span class="o">=</span> <span class="n">remove_not_nouns</span><span class="p">(</span><span class="n">titulo_process</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Fichero 1 -&gt; Sustantivos en Título:"</span><span class="p">,</span><span class="o">*</span><span class="n">titulo_process</span><span class="p">,</span> <span class="n">sep</span> <span class="o">=</span> <span class="s">", "</span><span class="p">)</span>
<span class="n">noticia_process</span> <span class="o">=</span> <span class="n">extract_tokens</span><span class="p">(</span><span class="n">noticia</span><span class="p">)</span>
<span class="n">noticia_process</span> <span class="o">=</span> <span class="n">to_lower</span><span class="p">(</span><span class="n">noticia_process</span><span class="p">)</span>
<span class="n">noticia_process</span> <span class="o">=</span> <span class="n">remove_accents</span><span class="p">(</span><span class="n">noticia_process</span><span class="p">)</span>
<span class="n">noticia_process</span> <span class="o">=</span> <span class="n">remove_stopwords</span><span class="p">(</span><span class="n">noticia_process</span><span class="p">)</span>
<span class="n">noticia_process</span> <span class="o">=</span> <span class="n">extract_pos_tags</span><span class="p">(</span><span class="n">noticia_process</span><span class="p">)</span>
<span class="n">noticia_process</span> <span class="o">=</span> <span class="n">remove_not_nouns</span><span class="p">(</span><span class="n">noticia_process</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Fichero 1 -&gt; Sustantivos en Noticia:"</span><span class="p">,</span><span class="o">*</span><span class="n">noticia_process</span><span class="p">,</span> <span class="n">sep</span> <span class="o">=</span> <span class="s">", "</span><span class="p">)</span>
<span class="n">resumen_process</span> <span class="o">=</span> <span class="n">extract_tokens</span><span class="p">(</span><span class="n">resumen</span><span class="p">)</span>
<span class="n">resumen_process</span> <span class="o">=</span> <span class="n">to_lower</span><span class="p">(</span><span class="n">resumen_process</span><span class="p">)</span>
<span class="n">resumen_process</span> <span class="o">=</span> <span class="n">remove_accents</span><span class="p">(</span><span class="n">resumen_process</span><span class="p">)</span>
<span class="n">resumen_process</span> <span class="o">=</span> <span class="n">remove_stopwords</span><span class="p">(</span><span class="n">resumen_process</span><span class="p">)</span>
<span class="n">resumen_process</span> <span class="o">=</span> <span class="n">extract_pos_tags</span><span class="p">(</span><span class="n">resumen_process</span><span class="p">)</span>
<span class="n">resumen_process</span> <span class="o">=</span> <span class="n">remove_not_nouns</span><span class="p">(</span><span class="n">resumen_process</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Fichero 1 -&gt; Sustantivos en Resumen:"</span><span class="p">,</span><span class="o">*</span><span class="n">resumen_process</span><span class="p">,</span> <span class="n">sep</span> <span class="o">=</span> <span class="s">", "</span><span class="p">)</span>

<span class="c1"># Preprocesado del fichero 2
</span><span class="n">titulo_process2</span> <span class="o">=</span> <span class="n">extract_tokens</span><span class="p">(</span><span class="n">titulo2</span><span class="p">)</span>
<span class="n">titulo_process2</span> <span class="o">=</span> <span class="n">to_lower</span><span class="p">(</span><span class="n">titulo_process2</span><span class="p">)</span>
<span class="n">titulo_process2</span> <span class="o">=</span> <span class="n">remove_accents</span><span class="p">(</span><span class="n">titulo_process2</span><span class="p">)</span>
<span class="n">titulo_process2</span> <span class="o">=</span> <span class="n">remove_stopwords</span><span class="p">(</span><span class="n">titulo_process2</span><span class="p">)</span>
<span class="n">titulo_process2</span> <span class="o">=</span> <span class="n">extract_pos_tags</span><span class="p">(</span><span class="n">titulo_process2</span><span class="p">)</span>
<span class="n">titulo_process2</span> <span class="o">=</span> <span class="n">remove_not_nouns</span><span class="p">(</span><span class="n">titulo_process2</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Fichero 2 -&gt; Sustantivos en Título:"</span><span class="p">,</span><span class="o">*</span><span class="n">titulo_process2</span><span class="p">,</span> <span class="n">sep</span> <span class="o">=</span> <span class="s">", "</span><span class="p">)</span>
<span class="n">noticia_process2</span> <span class="o">=</span> <span class="n">extract_tokens</span><span class="p">(</span><span class="n">noticia2</span><span class="p">)</span>
<span class="n">noticia_process2</span> <span class="o">=</span> <span class="n">to_lower</span><span class="p">(</span><span class="n">noticia_process2</span><span class="p">)</span>
<span class="n">noticia_process2</span> <span class="o">=</span> <span class="n">remove_accents</span><span class="p">(</span><span class="n">noticia_process2</span><span class="p">)</span>
<span class="n">noticia_process2</span> <span class="o">=</span> <span class="n">remove_stopwords</span><span class="p">(</span><span class="n">noticia_process2</span><span class="p">)</span>
<span class="n">noticia_process2</span> <span class="o">=</span> <span class="n">extract_pos_tags</span><span class="p">(</span><span class="n">noticia_process2</span><span class="p">)</span>
<span class="n">noticia_process2</span> <span class="o">=</span> <span class="n">remove_not_nouns</span><span class="p">(</span><span class="n">noticia_process2</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Fichero 2 -&gt; Sustantivos en Noticia:"</span><span class="p">,</span><span class="o">*</span><span class="n">noticia_process2</span><span class="p">,</span> <span class="n">sep</span> <span class="o">=</span> <span class="s">", "</span><span class="p">)</span>
<span class="n">resumen_process2</span> <span class="o">=</span> <span class="n">extract_tokens</span><span class="p">(</span><span class="n">resumen2</span><span class="p">)</span>
<span class="n">resumen_process2</span> <span class="o">=</span> <span class="n">to_lower</span><span class="p">(</span><span class="n">resumen_process2</span><span class="p">)</span>
<span class="n">resumen_process2</span> <span class="o">=</span> <span class="n">remove_accents</span><span class="p">(</span><span class="n">resumen_process2</span><span class="p">)</span>
<span class="n">resumen_process2</span> <span class="o">=</span> <span class="n">remove_stopwords</span><span class="p">(</span><span class="n">resumen_process2</span><span class="p">)</span>
<span class="n">resumen_process2</span> <span class="o">=</span> <span class="n">extract_pos_tags</span><span class="p">(</span><span class="n">resumen_process2</span><span class="p">)</span>
<span class="n">resumen_process2</span> <span class="o">=</span> <span class="n">remove_not_nouns</span><span class="p">(</span><span class="n">resumen_process2</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Fichero 2 -&gt; Sustantivos en Resumen:"</span><span class="p">,</span><span class="o">*</span><span class="n">resumen_process2</span><span class="p">,</span> <span class="n">sep</span> <span class="o">=</span> <span class="s">", "</span><span class="p">)</span></code></pre></figure>

<p><em>Repositorio con el contenido</em></p>

<p>Para utilizar el colab, debe descargar y subir los 2 ficheros de ejemplo que se aportan a continunación</p>

<p><a href="https://colab.research.google.com/drive/1ST8i9XHfSs3Q2V05bNJSYaeLBWgiaeMy"><img src="/images/pages/repository_small_colab.png" alt="Repositorio" /></a>
<a href="https://drive.google.com/file/d/1QhejgenyBE_FBpFvKOOmlMja_Y5o-Xjv/view"><img src="/images/pages/repository_small_file.png" alt="Fichero 1" /></a>
<a href="https://drive.google.com/file/d/1_TjHyRSwFDea6gVHYOz6u15U9Krd3U-D/view"><img src="/images/pages/repository_small_file.png" alt="Fichero 2" /></a></p>]]></content><author><name></name></author><category term="python" /><category term="NLTK" /><summary type="html"><![CDATA[Desarrollo de un buscador de sustantivos. El programa consistirá en preprocesar un documento, extraer todos sus sustantivos en minúsculas y guardarlos en un índice para poder hacer luego búsquedas solo de sustantivos.]]></summary></entry><entry><title type="html">Python - IA ejemplo de uso de RoBERTa Q&amp;amp;A</title><link href="https://rarcos.com//2022/03/18/IA-Roberta-QA/" rel="alternate" type="text/html" title="Python - IA ejemplo de uso de RoBERTa Q&amp;amp;A" /><published>2022-03-18T15:33:28+01:00</published><updated>2022-03-18T15:33:28+01:00</updated><id>https://rarcos.com//2022/03/18/IA-Roberta-QA</id><content type="html" xml:base="https://rarcos.com//2022/03/18/IA-Roberta-QA/"><![CDATA[<h1 id="utilización-de-roberta-en-qa">Utilización de RoBERTa en Q&amp;A</h1>

<p>RoBERTa-base español entrenado en BNE afinado para el conjunto de datos del Corpus de Respuesta a Preguntas en Español (SQAC).
RoBERTa-base-bne es un modelo de lenguaje enmascarado basado en transformadores para el idioma español. Está basado en el modelo base de RoBERTa y ha sido preentrenado utilizando el mayor corpus de español conocido hasta la fecha, con un total de 570GB de texto limpio y deduplicado procesado para este trabajo, recopilado a partir de los rastreos web realizados por la Biblioteca Nacional de España desde 2009 hasta 2019.</p>

<p>El modelo original preentrenado se puede encontrar <a href="https://huggingface.co/PlanTL-GOB-ES/roberta-base-bne">aquí</a>:</p>

<p><strong>Dataset</strong></p>

<p>El conjunto de datos utilizado es el corpus SQAC.</p>

<p><strong>Evaluación y resultados</strong></p>

<p>Puntuación F1: 0,7923 (media de 5 ejecuciones).</p>

<p>Para ver los detalles de la evaluación, visite nuestro repositorio de <a href="https://github.com/PlanTL-GOB-ES/lm-spanish">GitHub</a>.</p>

<hr />
<p>Si quieres ver el resultado de mi ejemplo de utilización de RoBERTa, te recomiendo visites:</p>

<p><em>Repositorio con el contenido</em></p>

<p><a href="https://colab.research.google.com/drive/16diuU5pQSETl3VQeh6E909YFsbtlfX3Z"><img src="/images/pages/repository_small_colab.png" alt="Repositorio" /></a></p>]]></content><author><name></name></author><category term="python" /><category term="pytorch" /><category term="ia" /><category term="colab" /><category term="bert" /><summary type="html"><![CDATA[Utilización del modelo de aprendizaje profundo RoBERTa para pregruntas y respuestas.]]></summary></entry><entry><title type="html">Python - IA ejemplo de uso de Bert Q&amp;amp;A exportado con flask</title><link href="https://rarcos.com//2022/03/18/IA-Bert-flask/" rel="alternate" type="text/html" title="Python - IA ejemplo de uso de Bert Q&amp;amp;A exportado con flask" /><published>2022-03-18T15:33:28+01:00</published><updated>2022-03-18T15:33:28+01:00</updated><id>https://rarcos.com//2022/03/18/IA-Bert-flask</id><content type="html" xml:base="https://rarcos.com//2022/03/18/IA-Bert-flask/"><![CDATA[<h1 id="utilización-de-bert-en-flask">Utilización de Bert en flask</h1>

<p>El BERT (Bidirectional Encoder Representations from Transformers) puede utilizarse para una de estas aplicaciones, es decir, la de preguntas y respuestas. Le das al modelo de aprendizaje profundo un párrafo para que lo lea y luego le haces una pregunta relacionada con el mismo. Hay muchas aplicaciones de este tipo en las que BERT ha demostrado ser lo suficientemente fuerte en PNL (Comprensión del Lenguaje Natural para ser más precisos). El concepto de BERT se introdujo en 2018. Desde entonces, han surgido variaciones de BERT como ALBERT, RoBERTa, MobileBERT, etc. Puede leer sobre el documento original <a href="https://arxiv.org/pdf/1810.04805.pdf">aquí</a>.</p>

<p>Utilizaremos una versión de BERT especial para web, más ligera, está en <a href="https://huggingface.co/mrm8488/distill-bert-base-spanish-wwm-cased-finetuned-spa-squad2-es">huggingface</a> para un conjunto de datos de preguntas y respuestas, es decir, Stanford Question Answering Dataset (SQuAD) y desplegaremos el modelo afinado en Heroku para la inferencia en tiempo real.</p>

<hr />

<p>Esta es la aplicación que yo he realizado basándome en la del tutorial y he aplicado algunas modificaciones:</p>

<p><a href="https://bert-qna-flask.herokuapp.com/">https://bert-qna-flask.herokuapp.com/</a></p>

<hr />

<p><strong>Nota</strong>
Asegúrese de seguir esta estructura de carpetas:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">/web-app
|--templates
|----index.html
|--app.py
|--requirements.txt
|--Procfile</code></pre></figure>

<h2 id="paso-1">Paso 1</h2>

<p>Como esto tiene que ser desplegado en Heroku, vamos a asegurarnos de que Heroku instala todas las bibliotecas necesarias para ejecutar el programa.
Haz un archivo llamado “requirements.txt” y pon las siguientes librerías en el archivo:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">https://download.pytorch.org/whl/cpu/torch-1.3.1%2Bcpu-cp36-cp36m-linux_x86_64.whl
<span class="nv">transformers</span><span class="o">==</span>3.0.2
<span class="nv">numpy</span><span class="o">==</span>1.19.1
flask
<span class="nv">joblib</span><span class="o">==</span>0.16.0
<span class="nv">sentencepiece</span><span class="o">==</span>0.1.91
<span class="nv">urllib3</span><span class="o">==</span>1.25.10</code></pre></figure>

<p>Para instalar las dependencias en un entorno, tipo anaconda, no funciona la descarga directa de pytorch para cpu. Es necesario ejecutar:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">pip3 <span class="nb">install </span><span class="nv">torch</span><span class="o">==</span>1.3.1+cpu <span class="nv">torchvision</span><span class="o">==</span>0.4.2+cpu <span class="nt">-f</span> https://download.pytorch.org/whl/torch_stable.html</code></pre></figure>

<p>Más info: <a href="https://github.com/pytorch/pytorch/issues/29434">en este enlace</a> y este <a href="https://foroayuda.es/donde-obtengo-una-version-de-pytorch-solo-para-cpu/">otro enlace</a> que tiene el versionado de pytorch.</p>

<h2 id="paso-2">Paso 2</h2>

<p>Haz un archivo llamado “app.py” y pon el siguiente código:</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">os</span>

<span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Flask</span><span class="p">,</span> <span class="n">render_template</span>

<span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">request</span>

<span class="kn">import</span> <span class="nn">torch</span>

<span class="kn">from</span> <span class="nn">transformers</span> <span class="kn">import</span> <span class="n">pipeline</span>

<span class="c1"># name = "twmkn9/albert-base-v2-squad2"
</span>
<span class="c1"># name = "distilbert-base-uncased-distilled-squad"
</span>
<span class="n">nlp</span> <span class="o">=</span> <span class="n">pipeline</span><span class="p">(</span>

    <span class="s">'question-answering'</span><span class="p">,</span>

    <span class="n">model</span><span class="o">=</span><span class="s">'mrm8488/distill-bert-base-spanish-wwm-cased-finetuned-spa-squad2-es'</span><span class="p">,</span>

    <span class="n">tokenizer</span><span class="o">=</span><span class="p">(</span>

    <span class="s">'mrm8488/distill-bert-base-spanish-wwm-cased-finetuned-spa-squad2-es'</span><span class="p">,</span>

    <span class="p">{</span><span class="s">"use_fast"</span><span class="p">:</span> <span class="bp">False</span><span class="p">}</span>

    <span class="p">)</span>

<span class="p">)</span>

<span class="k">def</span> <span class="nf">answer_question</span><span class="p">(</span><span class="n">question</span><span class="p">,</span> <span class="n">answer_text</span><span class="p">):</span>

    <span class="k">try</span><span class="p">:</span>

    <span class="n">answer</span> <span class="o">=</span> <span class="n">nlp</span><span class="p">({</span><span class="s">'question'</span><span class="p">:</span><span class="n">question</span><span class="p">,</span> <span class="s">'context'</span><span class="p">:</span><span class="n">answer_text</span><span class="p">})</span>

    <span class="k">return</span> <span class="n">answer</span><span class="p">[</span><span class="s">'answer'</span><span class="p">]</span>

    <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>

    <span class="k">print</span><span class="p">(</span><span class="s">"Error en la generación de la respuesta:"</span><span class="p">,</span> <span class="n">e</span><span class="p">)</span>

<span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">)</span>

<span class="o">@</span><span class="n">app</span><span class="p">.</span><span class="n">route</span><span class="p">(</span><span class="s">'/'</span><span class="p">,</span> <span class="n">methods</span><span class="o">=</span><span class="p">[</span><span class="s">'GET'</span><span class="p">,</span> <span class="s">'POST'</span><span class="p">])</span>

<span class="k">def</span> <span class="nf">index</span><span class="p">():</span>

    <span class="k">if</span> <span class="n">request</span><span class="p">.</span><span class="n">method</span> <span class="o">==</span> <span class="s">'POST'</span><span class="p">:</span>

    <span class="n">form</span> <span class="o">=</span> <span class="n">request</span><span class="p">.</span><span class="n">form</span>

    <span class="n">result</span> <span class="o">=</span> <span class="p">[]</span>

    <span class="n">bert_abstract</span> <span class="o">=</span> <span class="n">form</span><span class="p">[</span><span class="s">'paragraph'</span><span class="p">]</span>

    <span class="n">question</span> <span class="o">=</span> <span class="n">form</span><span class="p">[</span><span class="s">'question'</span><span class="p">]</span>

    <span class="n">result</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">form</span><span class="p">[</span><span class="s">'question'</span><span class="p">])</span>

    <span class="n">result</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">answer_question</span><span class="p">(</span><span class="n">question</span><span class="p">,</span> <span class="n">bert_abstract</span><span class="p">))</span>

    <span class="n">result</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">form</span><span class="p">[</span><span class="s">'paragraph'</span><span class="p">])</span>

    <span class="k">return</span> <span class="n">render_template</span><span class="p">(</span><span class="s">"index.html"</span><span class="p">,</span><span class="n">result</span> <span class="o">=</span> <span class="n">result</span><span class="p">)</span>

    <span class="c1"># answer = answer_question(question, bert_abstract)
</span>
    <span class="c1"># return answer
</span>
    <span class="k">return</span> <span class="n">render_template</span><span class="p">(</span><span class="s">"index.html"</span><span class="p">)</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">'__main__'</span><span class="p">:</span>

    <span class="n">port</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="n">environ</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">"PORT"</span><span class="p">,</span> <span class="mi">5000</span><span class="p">))</span>

    <span class="n">app</span><span class="p">.</span><span class="n">run</span><span class="p">(</span><span class="n">host</span><span class="o">=</span><span class="s">'0.0.0.0'</span><span class="p">,</span> <span class="n">port</span><span class="o">=</span><span class="n">port</span><span class="p">)</span></code></pre></figure>

<p>Esto obtendrá el modelo BERT y el tokenizador necesario para el modelo. Hemos utilizado “mrm8488/bert-small-finetuned-squadv2” de huggingface ya que es comparativamente más pequeño que los otros modelos BERT y tenemos un espacio limitado de 512 MBs en la cuenta de nivel gratuito de Heroku. A continuación, creamos un servidor flask para recibir las entradas en forma de párrafos y preguntas.
Ahora, haz una carpeta llamada “templates” y dentro de la carpeta, crea un archivo llamado “index.html”. Pon el siguiente código en el archivo:</p>

<figure class="highlight"><pre><code class="language-html" data-lang="html"><span class="cp">&lt;!DOCTYPE html&gt;</span>

<span class="nt">&lt;html&gt;</span>
  <span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;title&gt;</span>Bert Question Answering<span class="nt">&lt;/title&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"viewport"</span> <span class="na">content=</span><span class="s">"width=device-width, initial-scale=1.0"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">"//netdna.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css"</span> <span class="na">rel=</span><span class="s">"stylesheet"</span> <span class="na">media=</span><span class="s">"screen"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;style&gt;</span>
      <span class="nc">.container</span> <span class="p">{</span>
        <span class="nl">max-width</span><span class="p">:</span> <span class="m">1000px</span><span class="p">;</span>
      <span class="p">}</span>
    <span class="nt">&lt;/style&gt;</span>
  <span class="nt">&lt;/head&gt;</span>
  <span class="nt">&lt;body&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"container"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"row-sm-5 row-sm-offset-1"</span><span class="nt">&gt;</span>
          <span class="nt">&lt;h4&gt;</span>Enter a paragraph and a question to test BERT<span class="nt">&lt;/h4&gt;</span>
            <span class="nt">&lt;form</span> <span class="na">role=</span><span class="s">"form"</span> <span class="na">method=</span><span class="s">'POST'</span> <span class="na">action=</span><span class="s">'/'</span><span class="nt">&gt;</span>
              <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"form-group"</span><span class="nt">&gt;</span>
                <span class="nt">&lt;textarea</span> <span class="na">name=</span><span class="s">"paragraph"</span> <span class="na">class=</span><span class="s">"form-control"</span> <span class="na">id=</span><span class="s">"url-box"</span> <span class="na">placeholder=</span><span class="s">"Enter a paragraph"</span> <span class="na">style=</span><span class="s">"max-width: 300px;"</span> <span class="na">autofocus</span> <span class="na">required</span><span class="nt">&gt;</span>
			
		<span class="nt">&lt;/textarea&gt;</span>
                 <span class="nt">&lt;br&gt;</span>
                <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"question"</span> <span class="na">class=</span><span class="s">"form-control"</span> <span class="na">id=</span><span class="s">"url-box"</span> <span class="na">placeholder=</span><span class="s">"Enter a question"</span> <span class="na">style=</span><span class="s">"max-width: 300px;"</span> <span class="na">autofocus</span> <span class="na">required</span><span class="nt">&gt;</span>
              <span class="nt">&lt;/div&gt;</span>
              <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">class=</span><span class="s">"btn btn-default"</span><span class="nt">&gt;</span>Predict<span class="nt">&lt;/button&gt;</span>
            <span class="nt">&lt;/form&gt;</span>
          <span class="nt">&lt;br&gt;</span>
      <span class="nt">&lt;/div&gt;</span>

    `<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"row-sm-5 row-sm-offset-1"</span><span class="nt">&gt;</span>`
          
      `<span class="nt">&lt;/div&gt;</span>`

    `<span class="nt">&lt;/div&gt;</span>`

<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span></code></pre></figure>

<p>Con el código anterior, creamos un formulario para recibir las entradas.</p>

<h2 id="paso-3">Paso 3</h2>

<p>Crea un archivo llamándolo “Procfile” sin ninguna extensión. Y pon el siguiente código:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">web: python app.py</code></pre></figure>

<p>Esto le dirá a Heroku qué hacer una vez que la aplicación haya sido desplegada.</p>

<h2 id="paso-4">Paso 4</h2>

<p>Tenemos nuestro código listo. Ahora vamos a hablar con Heroku. Asegúrate de tener instalado Heroku CLI y git.</p>

<p>Una vez hecho esto, escriba los siguientes comandos en su terminal de comandos:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">heroku login</code></pre></figure>

<p>Esto te conectará con Heroku CLI
A continuación, escriba esto para crear una aplicación heroku:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">heroku create your_app_name</code></pre></figure>

<p>El nombre de tu aplicación puede ser cualquier cosa única.
A continuación, escribe los siguientes comandos para desplegar tu aplicación en Heroku:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">git init
git add <span class="nb">.</span>
git commit <span class="nt">-m</span> <span class="s1">'initial commit'</span>
git push heroku master</code></pre></figure>

<p>¡Hurra! ¡Tu aplicación ha sido desplegada! Veamos cómo funciona.
Abre una ventana del navegador y escribe la siguiente dirección web:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">https://your_app_name.herokuapp.com</code></pre></figure>

<p>Debería ver una página web como ésta:</p>

<p><img src="/images/pages/0_1YwbgemSDKHq0WQ2.png" alt="app en funcionamiento" /></p>

<p><em>Este tutorial está copiado y traducido de <a href="https://medium.com/analytics-vidhya/deploying-bert-on-heroku-7df1d23f9c43">aquí</a> quién tiene todos los derechos.
La aplicación original: “I have deployed my BERT app <a href="https://bertqna.herokuapp.com/">here</a> if you wish to give it a try.”</em></p>

<hr />
<p><strong>Fuentes:</strong></p>

<p><a href="https://medium.com/analytics-vidhya/deploying-bert-on-heroku-7df1d23f9c43">https://medium.com/analytics-vidhya/deploying-bert-on-heroku-7df1d23f9c43</a></p>]]></content><author><name></name></author><category term="python" /><category term="pytorch" /><category term="ia" /><category term="flask" /><category term="bert" /><summary type="html"><![CDATA[Utilización del modelo de aprendizaje profundo Bert para pregruntas y respuestas, exportado en flask.]]></summary></entry><entry><title type="html">Python - Webscraping II (Selenium)</title><link href="https://rarcos.com//2022/03/18/Python-Webscraping-2/" rel="alternate" type="text/html" title="Python - Webscraping II (Selenium)" /><published>2022-03-18T15:33:28+01:00</published><updated>2022-03-18T15:33:28+01:00</updated><id>https://rarcos.com//2022/03/18/Python%20-%20Webscraping-2</id><content type="html" xml:base="https://rarcos.com//2022/03/18/Python-Webscraping-2/"><![CDATA[<h1 id="webscraping-ii">Webscraping II</h1>

<p>A continuación, se muestra un proyecto de webscraping. Consiste en la captación de un listado con las ofertas de trabajo del portal <em>ticjob.es</em> para el lenguaje de programación Python y la localidad de Málaga.</p>

<p>Además se hace uso de <em>sqlalchemy</em> para el almacenamiento del resultado en una tabla en una base de datos <em>mysql</em>.</p>

<h2 id="script-de-captación-de-datos-y-guardado-en-base-de-datos">Script de captación de datos y guardado en base de datos</h2>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">selenium</span> <span class="kn">import</span> <span class="n">webdriver</span>
<span class="kn">from</span> <span class="nn">sqlalchemy</span> <span class="kn">import</span> <span class="n">create_engine</span>
<span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">time</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">search_query</span> <span class="o">=</span> <span class="s">'https://ticjob.es'</span>

<span class="n">browser</span> <span class="o">=</span> <span class="n">webdriver</span><span class="p">.</span><span class="n">Firefox</span><span class="p">()</span>
<span class="k">if</span> <span class="s">'linux'</span> <span class="ow">in</span> <span class="n">os</span><span class="p">.</span><span class="n">name</span><span class="p">:</span>
    <span class="n">browser</span> <span class="o">=</span> <span class="n">webdriver</span><span class="p">.</span><span class="n">Firefox</span><span class="p">(</span><span class="n">executable_path</span><span class="o">=</span><span class="s">'geckodriver'</span><span class="p">)</span>
<span class="k">elif</span> <span class="s">'windows'</span> <span class="ow">in</span> <span class="n">os</span><span class="p">.</span><span class="n">name</span><span class="p">:</span>
    <span class="n">browser</span> <span class="o">=</span> <span class="n">webdriver</span><span class="p">.</span><span class="n">Firefox</span><span class="p">(</span><span class="n">executable_path</span><span class="o">=</span><span class="s">'geckodriver.exe'</span><span class="p">)</span>

<span class="n">browser</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">search_query</span><span class="p">)</span>
<span class="n">time</span><span class="p">.</span><span class="n">sleep</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>

<span class="nb">input</span> <span class="o">=</span> <span class="n">browser</span><span class="p">.</span><span class="n">find_element_by_id</span><span class="p">(</span><span class="s">"keywords-input"</span><span class="p">).</span><span class="n">send_keys</span><span class="p">(</span><span class="s">"Python Málaga"</span><span class="p">)</span>
<span class="n">send_button</span> <span class="o">=</span> <span class="n">browser</span><span class="p">.</span><span class="n">find_element_by_id</span><span class="p">(</span><span class="s">"search-form"</span><span class="p">).</span><span class="n">submit</span><span class="p">()</span>
<span class="n">time</span><span class="p">.</span><span class="n">sleep</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>

<span class="c1"># Página con los resultados
</span>
<span class="n">titles</span> <span class="o">=</span> <span class="n">browser</span><span class="p">.</span><span class="n">find_elements_by_class_name</span><span class="p">(</span><span class="s">"job-title"</span><span class="p">)</span>
<span class="n">dates</span> <span class="o">=</span> <span class="n">browser</span><span class="p">.</span><span class="n">find_elements_by_class_name</span><span class="p">(</span><span class="s">"date-field"</span><span class="p">)</span>
<span class="n">locations</span> <span class="o">=</span> <span class="n">browser</span><span class="p">.</span><span class="n">find_elements_by_class_name</span><span class="p">(</span><span class="s">"location-field"</span><span class="p">)</span>
<span class="n">descriptions</span> <span class="o">=</span> <span class="n">browser</span><span class="p">.</span><span class="n">find_elements_by_class_name</span><span class="p">(</span><span class="s">"job-description"</span><span class="p">)</span>

<span class="n">time</span><span class="p">.</span><span class="n">sleep</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>

<span class="n">lista_titles</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">title</span> <span class="ow">in</span> <span class="n">titles</span><span class="p">:</span>
    <span class="n">lista_titles</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">title</span><span class="p">.</span><span class="n">text</span><span class="p">)</span>

<span class="n">lista_dates</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">date</span> <span class="ow">in</span> <span class="n">dates</span><span class="p">:</span>
    <span class="n">lista_dates</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">date</span><span class="p">.</span><span class="n">text</span><span class="p">)</span>

<span class="n">lista_locations</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">location</span> <span class="ow">in</span> <span class="n">locations</span><span class="p">:</span>
    <span class="n">lista_locations</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">location</span><span class="p">.</span><span class="n">text</span><span class="p">)</span>

<span class="n">lista_descriptions</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">description</span> <span class="ow">in</span> <span class="n">descriptions</span><span class="p">:</span>
    <span class="n">lista_descriptions</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">description</span><span class="p">.</span><span class="n">text</span><span class="p">)</span>

<span class="n">time</span><span class="p">.</span><span class="n">sleep</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
<span class="n">browser</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>

<span class="c1">#### Guardado de los datos en un dataframe
</span>
<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"Títulos"</span><span class="p">:</span> <span class="n">lista_titles</span><span class="p">,</span> <span class="s">"Fechas"</span><span class="p">:</span> <span class="n">lista_dates</span><span class="p">,</span> <span class="s">"Localización"</span><span class="p">:</span> <span class="n">lista_locations</span><span class="p">,</span> <span class="s">"Descripción"</span><span class="p">:</span> <span class="n">lista_descriptions</span><span class="p">}</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">data</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="c1">#### Guardado del dataframe en la base de datos ####
</span><span class="k">try</span><span class="p">:</span>
    <span class="n">engine</span> <span class="o">=</span> <span class="n">create_engine</span><span class="p">(</span><span class="s">'mysql+pymysql://sbd_tarea_24:sbd_tarea_2-4123456@db4free.net/sbd_tarea_24'</span><span class="p">)</span>

    <span class="n">df</span><span class="p">.</span><span class="n">to_sql</span><span class="p">(</span><span class="s">"ofertas_trabajo"</span><span class="p">,</span> <span class="n">con</span> <span class="o">=</span> <span class="n">engine</span><span class="p">,</span> <span class="n">if_exists</span><span class="o">=</span><span class="s">'replace'</span><span class="p">)</span>

    <span class="k">print</span><span class="p">(</span><span class="s">"Se ha grabado en la base de datos correctamente"</span><span class="p">)</span>
<span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Ha habido un error en la grabación en la base de datos:"</span><span class="p">,</span> <span class="n">e</span><span class="p">)</span></code></pre></figure>

<h2 id="envío-del-resultado-por-email">Envío del resultado por email</h2>

<p>A continuación, se muestra el uso de la api de gmail, para poder enviar el resultado por email.</p>

<p>Puedes seguir el tutorial de configuración <a href="/2022/03/18/Python-Gmail_api">aquí</a>. Y guardar el script resultante en la misma carpeta.</p>

<p>Añadir este pedazo de código al final del script de webscraping, para que se envíen las ofertas por email.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">email_api_gmail</span> <span class="kn">import</span> <span class="n">send</span>

<span class="c1">#### Envío de los datos por email ####
</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="n">email</span> <span class="o">=</span> <span class="s">"&lt;html&gt;"</span> <span class="o">+</span> <span class="n">df</span><span class="p">.</span><span class="n">to_html</span><span class="p">()</span> <span class="o">+</span> <span class="s">"&lt;/html&gt;"</span>
        <span class="n">send</span><span class="p">(</span><span class="s">"destinatario@email.com"</span><span class="p">,</span> <span class="s">"Listado de ofertas de empleo"</span><span class="p">,</span> <span class="n">email</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"Se han enviado las ofertas de trabajo por email correctamente."</span><span class="p">)</span>
    <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"Ha habido un error en el envío de las ofertas por email:"</span><span class="p">,</span> <span class="n">e</span><span class="p">)</span></code></pre></figure>

<h2 id="automatización-del-script-con-cron">Automatización del script con cron</h2>

<p>Para finalizar, se muestra el uso de la configuración del lanzamiento de un script mediant cron con la librería <em>python-crontab.</em></p>

<p>Puedes seguir el tutorial de configuración <a href="/2022/03/18/Python-Crontab/">aquí</a>.</p>

<p>Cambiar este pedazo de código, sustituir la función <em>uploadScript</em>, al final del script de crontab del tutorial anterior.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">uploadScript</span><span class="p">():</span>
    <span class="n">src_path</span> <span class="o">=</span> <span class="sa">r</span><span class="s">"ruta_acceso/Selenium.py"</span>
    <span class="n">dst_path</span> <span class="o">=</span> <span class="sa">r</span><span class="s">"/opt/jobs_offer/jobs_offer_task.py"</span>
    <span class="n">shutil</span><span class="p">.</span><span class="n">copy</span><span class="p">(</span><span class="n">src_path</span><span class="p">,</span> <span class="n">dst_path</span><span class="p">)</span>
    <span class="n">src_path</span> <span class="o">=</span> <span class="sa">r</span><span class="s">"ruta_acceso/credentials.json"</span>
    <span class="n">dst_path</span> <span class="o">=</span> <span class="sa">r</span><span class="s">"/opt/jobs_offer/credentials.json"</span>
    <span class="n">shutil</span><span class="p">.</span><span class="n">copy</span><span class="p">(</span><span class="n">src_path</span><span class="p">,</span> <span class="n">dst_path</span><span class="p">)</span>
    <span class="n">src_path</span> <span class="o">=</span> <span class="sa">r</span><span class="s">"ruta_acceso/email_api_gmail.py"</span>
    <span class="n">dst_path</span> <span class="o">=</span> <span class="sa">r</span><span class="s">"/opt/jobs_offer/email_api_gmail.py"</span>
    <span class="n">shutil</span><span class="p">.</span><span class="n">copy</span><span class="p">(</span><span class="n">src_path</span><span class="p">,</span> <span class="n">dst_path</span><span class="p">)</span>
    <span class="n">src_path</span> <span class="o">=</span> <span class="sa">r</span><span class="s">"ruta_acceso/chromedriver"</span>
    <span class="n">dst_path</span> <span class="o">=</span> <span class="sa">r</span><span class="s">"/opt/jobs_offer/chromedriver"</span>
    <span class="n">shutil</span><span class="p">.</span><span class="n">copy</span><span class="p">(</span><span class="n">src_path</span><span class="p">,</span> <span class="n">dst_path</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">'Copied all files'</span><span class="p">)</span></code></pre></figure>

<hr />
<p><strong>Fuentes:</strong></p>

<p><a href="https://mailtrap.io/blog/send-emails-with-gmail-api/#Python">https://mailtrap.io/blog/send-emails-with-gmail-api/#Python</a>
<a href="https://www.thepythoncode.com/article/use-gmail-api-in-python">https://www.thepythoncode.com/article/use-gmail-api-in-python</a>
<a href="https://developers.google.com/android-publisher/getting_started?hl=es-419">https://developers.google.com/android-publisher/getting_started?hl=es-419</a>
<a href="https://docs.moodle.org/all/es/Servicio_OAuth_2_Google">https://docs.moodle.org/all/es/Servicio_OAuth_2_Google</a></p>]]></content><author><name></name></author><category term="python" /><category term="keras" /><category term="ia" /><category term="tensorflow" /><category term="js" /><category term="webscraping" /><summary type="html"><![CDATA[Proyecto de webscraping: consiste en la captación de un listado con las ofertas de trabajo del portal *ticjob.es* para el lenguaje de programación Python y la localidad de Málaga.]]></summary></entry><entry><title type="html">Python - Webscraping I (BeautifulSoup)</title><link href="https://rarcos.com//2022/03/18/Python-Webscraping-1/" rel="alternate" type="text/html" title="Python - Webscraping I (BeautifulSoup)" /><published>2022-03-18T15:33:28+01:00</published><updated>2022-03-18T15:33:28+01:00</updated><id>https://rarcos.com//2022/03/18/Python%20-%20Webscraping-1</id><content type="html" xml:base="https://rarcos.com//2022/03/18/Python-Webscraping-1/"><![CDATA[<h1 id="webscraping-i">Webscraping I</h1>

<p>A continuación, se muestra un proyecto de webscraping. Consiste en la captación de un listado con los libros que corresponden al título <em>machine learning</em> de la web de amazon.</p>

<p>Si quieres ver el resultado, te recomiendo visites:</p>

<p><em>Repositorio con el contenido</em></p>

<p><a href="https://colab.research.google.com/drive/11Kiqfw7KvID4KDvu8ag8WV41EO4Em9OT"><img src="/images/pages/repository_small_colab.png" alt="Repositorio" /></a></p>]]></content><author><name></name></author><category term="python" /><category term="keras" /><category term="ia" /><category term="tensorflow" /><category term="js" /><category term="webscraping" /><summary type="html"><![CDATA[Proyecto de webscraping: consiste en la captación de un listado con los libros que corresponden al título *machine learning* de la web de amazon.]]></summary></entry><entry><title type="html">Python - Envío de emails mediante la api de Gmail con python</title><link href="https://rarcos.com//2022/03/18/Python-Gmail_api/" rel="alternate" type="text/html" title="Python - Envío de emails mediante la api de Gmail con python" /><published>2022-03-18T15:33:28+01:00</published><updated>2022-03-18T15:33:28+01:00</updated><id>https://rarcos.com//2022/03/18/Python%20-%20Gmail_api</id><content type="html" xml:base="https://rarcos.com//2022/03/18/Python-Gmail_api/"><![CDATA[<h1 id="utilización-y-activación-de-la-api-de-gmail">Utilización y activación de la api de Gmail</h1>

<h2 id="google-api-console">Google API Console</h2>

<p>Lo primero que tenemos que hacer es crear un proyecto nuevo en <a href="https://console.cloud.google.com/apis/dashboard">Google Developers Console</a>. A continuación, haz clic en Seleccionar un proyecto y crea uno nuevo.</p>

<p><img src="https://lh4.googleusercontent.com/cQ3I0lmHvuA46MI7Btd3fL-4AVbcyFE6Z_a6OA3l3XrN6jsETLZNzt-uvrfu9wfiTN-BmL3EX2RLQapRZ1ILEmjfFB_BhcunrubAgBhRSJCmlXtg2Cv1toNKm7lznukYB0LgjYbP" alt="image1" /></p>

<p>Nombra tu nuevo proyecto y pulsa Crear en la parte inferior.</p>

<h2 id="habilita-gmail-api">Habilita Gmail API</h2>

<p>Una vez hecho esto, puedes pulsar la pestaña Biblioteca de la izquierda y encontrarte en la página de la Biblioteca API. Introduce “Gmail API” en la barra de búsqueda y haz clic en ella una vez encontrada. Ahora, tienes que habilitar la API para tu proyecto.</p>

<p><img src="https://lh6.googleusercontent.com/qRA82H-dl5bKqCzC8H_YpR8cDa23K85f6s5Q2piOw95VO62mqn_YfOkLFVaSD_p0qCVKTLGRLeFDMzU3Ad-Lb8Ou0Yde3efa7diXO5QDVC7IjCQcrbQh-H30xBVpy24KfrSZJ1Uc" alt="image2" /></p>

<p>*Ten en cuenta que tendrás que activarlo por separado para cada nuevo proyecto en el que trabajes. *</p>

<h2 id="paso-3-credenciales-y-autenticación-con-oauth-20">Paso 3: Credenciales y autenticación con OAuth 2.0</h2>

<p>Una vez activada la API, accederás a un bonito panel que dice: “Para utilizar esta API, puede que necesites credenciales”. Si haces clic en Crear credenciales, tendrás que pasar por una serie de preguntas para saber qué tipo de credenciales necesitas. Te aconsejamos que vayas por otro camino ya que ya sabemos lo que es: ID de cliente OAuth. Así pues, haz clic en la pestaña Credenciales de la izquierda, y luego elige OAuth client ID en la lista desplegable del botón Crear credenciales.</p>

<p><img src="https://lh6.googleusercontent.com/UwsT80hMiX5B1TjEg51gbqkkJ-iembuOfCu3cM9k1pdcv2mlleKht4k_FmeRFBwFApyuHkqb8Xgxut9dHybJAIQCtzfvul60Uh957dPXi3fRFrsU4ZjhTSZo_-8byEsxIy52jSRv" alt="image3" /></p>

<p>Verás el botón Configurar pantalla de consentimiento. Te llevará a una página con muchos campos. Sólo tienes que introducir el nombre de tu aplicación y especificar los dominios autorizados. Rellena otros campos si quieres.</p>

<p><img src="https://lh5.googleusercontent.com/WAhpqm_Hwa640iUPpKK7eWRPDIPf2FlpQ7Y5XT2uKa9UrfO-i868IpL-O4orLMXSMT6wRnubrYzyZD0LRUSjKt9xJDSOdZSrZmjBTuDKj3w9pGHG2U_m_afZ8RlN9R2SXmDHcXht" alt="image4" /></p>

<p>Haz clic en guardar y luego elige el tipo de tu aplicación (aplicación web, Android, Chrome App, iOS u otra). Después de eso, nombra tu ID de cliente OAuth. Además, introduce los orígenes de JavaScript y los dominios de redirección para utilizarlos con las solicitudes de un navegador o un servidor web, respectivamente. Haz clic en crear para finalizar. Eso es todo. Descarga un archivo JSON con tus credenciales - lo necesitarás más tarde.</p>

<h2 id="habilitación-de-la-api-de-gmail">Habilitación de la API de Gmail</h2>

<p>Para utilizar la API de Gmail, necesitamos un token para conectarnos a la API de Gmail, podemos obtener uno desde el panel de control de las API de Google.</p>

<p>Primero habilitamos la API de correo de Google, nos dirigimos al panel de control y utilizamos la barra de búsqueda para buscar la API de Gmail, hacemos clic en ella y la habilitamos:</p>

<p><img src="https://www.thepythoncode.com/media/articles/use-gmail-api-in-python/enable-gmail-api.png" alt="image5" /></p>

<p>A continuación, creamos un ID de cliente OAuth 2.0 mediante la creación de credenciales (dirigiéndose al botón Crear credenciales):</p>

<p><img src="https://www.thepythoncode.com/media/articles/use-gmail-api-in-python/create-oauth-client-id.png" alt="image6" /></p>

<p>Seleccione Desktop App como el tipo de aplicación y proceda, verá una ventana como esta:</p>

<p><img src="https://www.thepythoncode.com/media/articles/use-gmail-api-in-python/oauth-credentials.png" alt="image7" /></p>

<p>Descargamos nuestro archivo de credenciales y lo <strong>guardamos como</strong> <em>credentials.json</em> en el directorio actual:</p>

<p><img src="https://www.thepythoncode.com/media/articles/use-gmail-api-in-python/download-credentials.png" alt="image8" /></p>

<hr />

<p>Nota: Si es la primera vez que utilizas las API de Google, puede que tengas que crear simplemente una pantalla de consentimiento de OAuth y añadir tu correo electrónico como usuario de prueba.</p>

<h2 id="crear-pantalla-de-consentimiento">Crear pantalla de consentimiento</h2>

<p>Información detallada de cómo crearla <a href="https://docs.moodle.org/all/es/Servicio_OAuth_2_Google">aquí</a>.</p>

<p>Importante destacar que se marque para <em>uso interno</em> y que no se suba <em>logotipo</em>.</p>

<p>Es porque si no se activa un procedimiento de verificación humana, que retrasa la activación de ventana de consentimiento hasta que termine, y pueden ser días. Lo cual no necesitamos para nuestras pruebas y sería en caso de poner en producción la aplicación, para que así se muestre una ventana <em>formal</em> de aceptación de permisos con aspecto y auterización corporativo.</p>

<h1 id="creación-del-script-para-consumir-la-api-de-gmail-en-python">Creación del Script para consumir la API de Gmail en python</h1>

<h2 id="dependencias-necesarias">Dependencias necesarias</h2>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>pip3 <span class="nb">install</span> <span class="nt">--upgrade</span> google-api-python-client google-auth-httplib2 google-auth-oauthlib</code></pre></figure>

<h2 id="código-de-consumo-de-la-api">Código de consumo de la api</h2>

<p>En la misma carpeta donde se encuentre este script, debe estar el fichero <em>credentials.json</em> que fue renombrado por el que nos descargamos de google con los credenciales de acceso de nuestra cuenta. También destacar que se creará de forma automática después del primer lanzamiento un fichero <em>tocken.picle</em> que no deberemos borrar.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">pickle</span>

<span class="c1"># Gmail API utils
</span>
<span class="kn">from</span> <span class="nn">googleapiclient.discovery</span> <span class="kn">import</span> <span class="n">build</span>
<span class="kn">from</span> <span class="nn">google_auth_oauthlib.flow</span> <span class="kn">import</span> <span class="n">InstalledAppFlow</span>
<span class="kn">from</span> <span class="nn">google.auth.transport.requests</span> <span class="kn">import</span> <span class="n">Request</span>

<span class="c1"># for encoding/decoding messages in base64
</span>
<span class="kn">from</span> <span class="nn">base64</span> <span class="kn">import</span> <span class="n">urlsafe_b64decode</span><span class="p">,</span> <span class="n">urlsafe_b64encode</span>

<span class="c1"># for dealing with attachement MIME types
</span>
<span class="kn">from</span> <span class="nn">email.mime.text</span> <span class="kn">import</span> <span class="n">MIMEText</span>
<span class="kn">from</span> <span class="nn">email.mime.multipart</span> <span class="kn">import</span> <span class="n">MIMEMultipart</span>
<span class="kn">from</span> <span class="nn">email.mime.image</span> <span class="kn">import</span> <span class="n">MIMEImage</span>
<span class="kn">from</span> <span class="nn">email.mime.audio</span> <span class="kn">import</span> <span class="n">MIMEAudio</span>
<span class="kn">from</span> <span class="nn">email.mime.base</span> <span class="kn">import</span> <span class="n">MIMEBase</span>
<span class="kn">from</span> <span class="nn">mimetypes</span> <span class="kn">import</span> <span class="n">guess_type</span> <span class="k">as</span> <span class="n">guess_mime_type</span>

<span class="c1"># Request all access (permission to read/send/receive emails, manage the inbox, and more)
</span>
<span class="n">SCOPES</span> <span class="o">=</span> <span class="p">[</span><span class="s">'https://mail.google.com/'</span><span class="p">]</span>
<span class="n">our_email</span> <span class="o">=</span> <span class="s">'email_envio@gmail.com'</span>

<span class="k">def</span> <span class="nf">gmail_authenticate</span><span class="p">():</span>
    <span class="n">creds</span> <span class="o">=</span> <span class="bp">None</span>
    <span class="c1"># the file token.pickle stores the user's access and refresh tokens, and is
</span>    <span class="c1"># created automatically when the authorization flow completes for the first time
</span>    <span class="k">if</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">exists</span><span class="p">(</span><span class="s">"token.pickle"</span><span class="p">):</span>
        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">"token.pickle"</span><span class="p">,</span> <span class="s">"rb"</span><span class="p">)</span> <span class="k">as</span> <span class="n">token</span><span class="p">:</span>
            <span class="n">creds</span> <span class="o">=</span> <span class="n">pickle</span><span class="p">.</span><span class="n">load</span><span class="p">(</span><span class="n">token</span><span class="p">)</span>
    <span class="c1"># if there are no (valid) credentials availablle, let the user log in.
</span>    <span class="k">if</span> <span class="ow">not</span> <span class="n">creds</span> <span class="ow">or</span> <span class="ow">not</span> <span class="n">creds</span><span class="p">.</span><span class="n">valid</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">creds</span> <span class="ow">and</span> <span class="n">creds</span><span class="p">.</span><span class="n">expired</span> <span class="ow">and</span> <span class="n">creds</span><span class="p">.</span><span class="n">refresh_token</span><span class="p">:</span>
            <span class="n">creds</span><span class="p">.</span><span class="n">refresh</span><span class="p">(</span><span class="n">Request</span><span class="p">())</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="n">flow</span> <span class="o">=</span> <span class="n">InstalledAppFlow</span><span class="p">.</span><span class="n">from_client_secrets_file</span><span class="p">(</span><span class="s">'credentials.json'</span><span class="p">,</span> <span class="n">SCOPES</span><span class="p">)</span>
            <span class="n">creds</span> <span class="o">=</span> <span class="n">flow</span><span class="p">.</span><span class="n">run_local_server</span><span class="p">(</span><span class="n">port</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
        <span class="c1"># save the credentials for the next run
</span>        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">"token.pickle"</span><span class="p">,</span> <span class="s">"wb"</span><span class="p">)</span> <span class="k">as</span> <span class="n">token</span><span class="p">:</span>
            <span class="n">pickle</span><span class="p">.</span><span class="n">dump</span><span class="p">(</span><span class="n">creds</span><span class="p">,</span> <span class="n">token</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">build</span><span class="p">(</span><span class="s">'gmail'</span><span class="p">,</span> <span class="s">'v1'</span><span class="p">,</span> <span class="n">credentials</span><span class="o">=</span><span class="n">creds</span><span class="p">)</span>

<span class="c1"># get the Gmail API service
</span>
<span class="n">service</span> <span class="o">=</span> <span class="n">gmail_authenticate</span><span class="p">()</span>

<span class="c1"># Adds the attachment with the given filename to the given message
</span>
<span class="k">def</span> <span class="nf">add_attachment</span><span class="p">(</span><span class="n">message</span><span class="p">,</span> <span class="n">filename</span><span class="p">):</span>
    <span class="n">content_type</span><span class="p">,</span> <span class="n">encoding</span> <span class="o">=</span> <span class="n">guess_mime_type</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">content_type</span> <span class="ow">is</span> <span class="bp">None</span> <span class="ow">or</span> <span class="n">encoding</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
        <span class="n">content_type</span> <span class="o">=</span> <span class="s">'application/octet-stream'</span>
    <span class="n">main_type</span><span class="p">,</span> <span class="n">sub_type</span> <span class="o">=</span> <span class="n">content_type</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="s">'/'</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">main_type</span> <span class="o">==</span> <span class="s">'text'</span><span class="p">:</span>
        <span class="n">fp</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s">'rb'</span><span class="p">)</span>
        <span class="n">msg</span> <span class="o">=</span> <span class="n">MIMEText</span><span class="p">(</span><span class="n">fp</span><span class="p">.</span><span class="n">read</span><span class="p">().</span><span class="n">decode</span><span class="p">(),</span> <span class="n">_subtype</span><span class="o">=</span><span class="n">sub_type</span><span class="p">)</span>
        <span class="n">fp</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>
    <span class="k">elif</span> <span class="n">main_type</span> <span class="o">==</span> <span class="s">'image'</span><span class="p">:</span>
        <span class="n">fp</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s">'rb'</span><span class="p">)</span>
        <span class="n">msg</span> <span class="o">=</span> <span class="n">MIMEImage</span><span class="p">(</span><span class="n">fp</span><span class="p">.</span><span class="n">read</span><span class="p">(),</span> <span class="n">_subtype</span><span class="o">=</span><span class="n">sub_type</span><span class="p">)</span>
        <span class="n">fp</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>
    <span class="k">elif</span> <span class="n">main_type</span> <span class="o">==</span> <span class="s">'audio'</span><span class="p">:</span>
        <span class="n">fp</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s">'rb'</span><span class="p">)</span>
        <span class="n">msg</span> <span class="o">=</span> <span class="n">MIMEAudio</span><span class="p">(</span><span class="n">fp</span><span class="p">.</span><span class="n">read</span><span class="p">(),</span> <span class="n">_subtype</span><span class="o">=</span><span class="n">sub_type</span><span class="p">)</span>
        <span class="n">fp</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">fp</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s">'rb'</span><span class="p">)</span>
        <span class="n">msg</span> <span class="o">=</span> <span class="n">MIMEBase</span><span class="p">(</span><span class="n">main_type</span><span class="p">,</span> <span class="n">sub_type</span><span class="p">)</span>
        <span class="n">msg</span><span class="p">.</span><span class="n">set_payload</span><span class="p">(</span><span class="n">fp</span><span class="p">.</span><span class="n">read</span><span class="p">())</span>
        <span class="n">fp</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>
    <span class="n">filename</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">basename</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span>
    <span class="n">msg</span><span class="p">.</span><span class="n">add_header</span><span class="p">(</span><span class="s">'Content-Disposition'</span><span class="p">,</span> <span class="s">'attachment'</span><span class="p">,</span> <span class="n">filename</span><span class="o">=</span><span class="n">filename</span><span class="p">)</span>
    <span class="n">message</span><span class="p">.</span><span class="n">attach</span><span class="p">(</span><span class="n">msg</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">build_message</span><span class="p">(</span><span class="n">destination</span><span class="p">,</span> <span class="n">obj</span><span class="p">,</span> <span class="n">body</span><span class="p">,</span> <span class="n">attachments</span><span class="o">=</span><span class="p">[]):</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="n">attachments</span><span class="p">:</span> <span class="c1"># no attachments given
</span>        <span class="n">message</span> <span class="o">=</span> <span class="n">MIMEText</span><span class="p">(</span><span class="n">body</span><span class="p">,</span> <span class="s">'html'</span><span class="p">)</span>
        <span class="n">message</span><span class="p">[</span><span class="s">'to'</span><span class="p">]</span> <span class="o">=</span> <span class="n">destination</span>
        <span class="n">message</span><span class="p">[</span><span class="s">'from'</span><span class="p">]</span> <span class="o">=</span> <span class="n">our_email</span>
        <span class="n">message</span><span class="p">[</span><span class="s">'subject'</span><span class="p">]</span> <span class="o">=</span> <span class="n">obj</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">message</span> <span class="o">=</span> <span class="n">MIMEMultipart</span><span class="p">()</span>
        <span class="n">message</span><span class="p">[</span><span class="s">'to'</span><span class="p">]</span> <span class="o">=</span> <span class="n">destination</span>
        <span class="n">message</span><span class="p">[</span><span class="s">'from'</span><span class="p">]</span> <span class="o">=</span> <span class="n">our_email</span>
        <span class="n">message</span><span class="p">[</span><span class="s">'subject'</span><span class="p">]</span> <span class="o">=</span> <span class="n">obj</span>
        <span class="n">message</span><span class="p">.</span><span class="n">attach</span><span class="p">(</span><span class="n">MIMEText</span><span class="p">(</span><span class="n">body</span><span class="p">))</span>
        <span class="k">for</span> <span class="n">filename</span> <span class="ow">in</span> <span class="n">attachments</span><span class="p">:</span>
            <span class="n">add_attachment</span><span class="p">(</span><span class="n">message</span><span class="p">,</span> <span class="n">filename</span><span class="p">)</span>
    <span class="k">return</span> <span class="p">{</span><span class="s">'raw'</span><span class="p">:</span> <span class="n">urlsafe_b64encode</span><span class="p">(</span><span class="n">message</span><span class="p">.</span><span class="n">as_bytes</span><span class="p">()).</span><span class="n">decode</span><span class="p">()}</span>

<span class="k">def</span> <span class="nf">send_message</span><span class="p">(</span><span class="n">service</span><span class="p">,</span> <span class="n">destination</span><span class="p">,</span> <span class="n">obj</span><span class="p">,</span> <span class="n">body</span><span class="p">,</span> <span class="n">attachments</span><span class="o">=</span><span class="p">[]):</span>
    <span class="k">return</span> <span class="n">service</span><span class="p">.</span><span class="n">users</span><span class="p">().</span><span class="n">messages</span><span class="p">().</span><span class="n">send</span><span class="p">(</span>
      <span class="n">userId</span><span class="o">=</span><span class="s">"me"</span><span class="p">,</span>
      <span class="n">body</span><span class="o">=</span><span class="n">build_message</span><span class="p">(</span><span class="n">destination</span><span class="p">,</span> <span class="n">obj</span><span class="p">,</span> <span class="n">body</span><span class="p">,</span> <span class="n">attachments</span><span class="p">)</span>
    <span class="p">).</span><span class="n">execute</span><span class="p">()</span>

<span class="k">def</span> <span class="nf">send</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">subject</span><span class="p">,</span> <span class="n">body</span><span class="p">):</span>
    <span class="n">send_message</span><span class="p">(</span><span class="n">service</span><span class="p">,</span> <span class="n">user</span><span class="p">,</span> <span class="n">subject</span><span class="p">,</span> <span class="n">body</span><span class="p">)</span></code></pre></figure>

<h2 id="llamada-y-utilización-a-este-script">Llamada y utilización a este script</h2>

<p>El script anterior, lo denominto una dependencia y he externalizado su uso, por ello desde dónde tengamos los datos y queramos enviar el email deberemos poner:</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">email_api_gmail</span> <span class="kn">import</span> <span class="n">send</span> <span class="c1">#Es el nombre que yo le he dado al script que consume la api de gmail.
</span>
<span class="c1">#### Envío de los datos por email
</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="n">email</span> <span class="o">=</span> <span class="s">"`&lt;html&gt;`"</span> <span class="o">+</span> <span class="n">df</span><span class="p">.</span><span class="n">to_html</span><span class="p">()</span> <span class="o">+</span> <span class="s">"`&lt;/html&gt;`"</span>
        <span class="n">send</span><span class="p">(</span><span class="s">"email_destinatario@dominio"</span><span class="p">,</span> <span class="s">"Encabezado del email"</span><span class="p">,</span> <span class="n">cuerpo_email</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"Se ha el email correctamente."</span><span class="p">)</span>
    <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"Ha habido un error en el envío del email:"</span><span class="p">,</span> <span class="n">e</span><span class="p">)</span></code></pre></figure>

<hr />
<p><strong>Fuentes:</strong></p>

<p><a href="https://mailtrap.io/blog/send-emails-with-gmail-api/#Python">https://mailtrap.io/blog/send-emails-with-gmail-api/#Python</a>
<a href="https://www.thepythoncode.com/article/use-gmail-api-in-python">https://www.thepythoncode.com/article/use-gmail-api-in-python</a>
<a href="https://developers.google.com/android-publisher/getting_started?hl=es-419">https://developers.google.com/android-publisher/getting_started?hl=es-419</a>
<a href="https://docs.moodle.org/all/es/Servicio_OAuth_2_Google">https://docs.moodle.org/all/es/Servicio_OAuth_2_Google</a></p>]]></content><author><name></name></author><category term="python" /><category term="gmail" /><category term="api" /><category term="webscraping" /><summary type="html"><![CDATA[Proyecto de webscraping: consiste en la captación de un listado con las ofertas de trabajo del portal *ticjob.es* para el lenguaje de programación Python y la localidad de Málaga.]]></summary></entry><entry><title type="html">Python - Programación de scripts mediante crontab en pyton</title><link href="https://rarcos.com//2022/03/18/Python-Crontab/" rel="alternate" type="text/html" title="Python - Programación de scripts mediante crontab en pyton" /><published>2022-03-18T15:33:28+01:00</published><updated>2022-03-18T15:33:28+01:00</updated><id>https://rarcos.com//2022/03/18/Python%20-%20Crontab</id><content type="html" xml:base="https://rarcos.com//2022/03/18/Python-Crontab/"><![CDATA[<h1 id="crontab">Crontab</h1>

<p>Cron es una utilidad que nos permite programar tareas en sistemas basados en Unix utilizando expresiones Cron. Las tareas en cron se definen en un crontab, que es un archivo de texto que contiene los comandos a ejecutar. La sintaxis utilizada en un crontab se describe más adelante en este artículo.
Python nos presenta el módulo crontab para gestionar los trabajos programados a través de cron. Las funciones disponibles en él permiten acceder a cron, crear trabajos, establecer restricciones, eliminar trabajos y mucho más sin tener que escribir manualmente los archivos crontab. En este artículo, mostraremos cómo utilizar estas operaciones desde tu código Python.</p>

<p>Cron utiliza una sintaxis específica para definir los horarios. Consta de cinco campos, separados por espacios en blanco. Los campos son:</p>

<p><img src="https://miro.medium.com/max/875/0*3S3I1pVZY6ZG-x-G.png" alt="image1" /></p>

<ul>
  <li>Resaltar que este script solamente puede ser utilizado en un <strong>entorno linux</strong>.</li>
  <li>Para la misma tarea en <strong>windows</strong> ver este <a href="#https://datatofish.com/python-script-windows-scheduler/">tutorial</a>.</li>
  <li>Para eliminar la tarea después de haberla probado, estos son los <a href="https://linuxhint.com/delete-cron-job-linux/">pasos a seguir</a>.</li>
</ul>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="c1">############################################################################################
##### ESTE SCRIPT SOLO PUEDE SER EJECUTADO EN UN ENTORNO LINUX                  ############
##### THIS SCRIPT CAN ONLY BE RUN IN A LINUX ENVIRONMENT                        ############
############################################################################################
</span>
<span class="kn">from</span> <span class="nn">crontab</span> <span class="kn">import</span> <span class="n">CronTab</span>
<span class="kn">import</span> <span class="nn">pwd</span>
<span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">shutil</span>

<span class="c1">#/opt/jobs_offer must have permissions for the script to create the token.pickle file the first time. This is a dependency on email sending.
#They have to be absolute routes, change before using
</span><span class="k">def</span> <span class="nf">uploadScript</span><span class="p">():</span>
    <span class="n">src_path</span> <span class="o">=</span> <span class="sa">r</span><span class="s">"ruta_absoluta/script_lanzado.py"</span>
    <span class="n">dst_path</span> <span class="o">=</span> <span class="sa">r</span><span class="s">"/opt/carpeta_destino/script_lanzado.py"</span>
    <span class="n">shutil</span><span class="p">.</span><span class="n">copy</span><span class="p">(</span><span class="n">src_path</span><span class="p">,</span> <span class="n">dst_path</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">'Copied all files'</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">add_cron</span><span class="p">():</span>
    <span class="n">cron</span> <span class="o">=</span> <span class="n">CronTab</span><span class="p">(</span><span class="n">pwd</span><span class="p">.</span><span class="n">getpwuid</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="n">getuid</span><span class="p">())[</span><span class="mi">0</span><span class="p">])</span> <span class="c1"># For current user
</span>    <span class="c1"># 8:00 am all days in the morning
</span>    <span class="n">basic_command</span> <span class="o">=</span> <span class="s">"0 8 * * 0-6 python3 /opt/jobs_offer/jobs_offer_task.py"</span>
    <span class="n">basic_iter</span> <span class="o">=</span> <span class="n">cron</span><span class="p">.</span><span class="n">find_command</span><span class="p">(</span><span class="s">"jobs_offer_task"</span><span class="p">)</span>
    <span class="n">exists</span><span class="o">=</span><span class="bp">False</span>
    <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">basic_iter</span><span class="p">:</span>
        <span class="k">if</span> <span class="nb">str</span><span class="p">(</span><span class="n">item</span><span class="p">)</span> <span class="o">==</span> <span class="n">basic_command</span><span class="p">:</span>
            <span class="k">print</span><span class="p">(</span><span class="s">"crontab job already exist"</span><span class="p">,</span> <span class="n">item</span><span class="p">)</span>
            <span class="n">exists</span><span class="o">=</span><span class="bp">True</span>
            <span class="k">break</span>

    <span class="k">if</span> <span class="ow">not</span> <span class="n">exists</span><span class="p">:</span>
        <span class="n">job</span> <span class="o">=</span> <span class="n">cron</span><span class="p">.</span><span class="n">new</span><span class="p">(</span><span class="n">command</span><span class="o">=</span><span class="s">'python3 /opt/jobs_offer_task.py'</span><span class="p">)</span>
        <span class="n">job</span><span class="p">.</span><span class="n">minute</span><span class="p">.</span><span class="n">every</span><span class="p">(</span><span class="mi">15</span><span class="p">)</span>
        <span class="n">job</span><span class="p">.</span><span class="n">enable</span><span class="p">()</span>
        <span class="n">cron</span><span class="p">.</span><span class="n">write</span><span class="p">()</span>
    <span class="k">print</span><span class="p">(</span><span class="s">'Job added to crontab, ok'</span><span class="p">)</span>

<span class="n">uploadScript</span><span class="p">()</span>
<span class="n">add_cron</span><span class="p">()</span></code></pre></figure>

<hr />
<p><strong>Fuentes:</strong></p>

<p><a href="https://medium.com/@django.course/7-ways-to-execute-scheduled-jobs-with-python-47d481d22b91">https://medium.com/@django.course/7-ways-to-execute-scheduled-jobs-with-python-47d481d22b91</a>
<a href="https://linuxhint.com/delete-cron-job-linux/">https://linuxhint.com/delete-cron-job-linux/</a></p>]]></content><author><name></name></author><category term="python" /><category term="webscraping" /><category term="cron" /><category term="crontab" /><summary type="html"><![CDATA[Proyecto de webscraping: consiste en la captación de un listado con las ofertas de trabajo del portal *ticjob.es* para el lenguaje de programación Python y la localidad de Málaga.]]></summary></entry><entry><title type="html">Python - Modelo de IA en Keras con exportación a tensorflow js</title><link href="https://rarcos.com//2022/03/16/Python-Keras_IA_tf.js/" rel="alternate" type="text/html" title="Python - Modelo de IA en Keras con exportación a tensorflow js" /><published>2022-03-16T15:33:28+01:00</published><updated>2022-03-16T15:33:28+01:00</updated><id>https://rarcos.com//2022/03/16/Python%20-%20Keras_IA_tf.js</id><content type="html" xml:base="https://rarcos.com//2022/03/16/Python-Keras_IA_tf.js/"><![CDATA[<h1 id="modelo-de-regresión-en-keras-exportado-a-tensorflow-js">Modelo de regresión en Keras exportado a tensorflow js</h1>

<p>A continuación, se muestra un proyecto en Keras, que utiliza un dataset con los datos del desempleo en EEUU. Se aplica IA para la predicción de los valores futuros y se exporta el modelo ya entrenada para ser ejecutado mediante web.</p>

<p>Si quieres ver el resultado, te recomiendo visites:</p>

<p><a href="https://rarcos.com/WorkspaceWeb/predictUnrate(keras)/"><img src="/images/pages/450_1000.png" alt="Ir a ver la app en funcionamiento" /></a></p>

<p><em>Repositorio con el contenido</em></p>

<p><a href="https://colab.research.google.com/drive/1zG_hZIhR5Kzu-4RfsRDnWtf5RqE0rJWU"><img src="/images/pages/repository_small_colab.png" alt="Repositorio" /></a></p>]]></content><author><name></name></author><category term="python" /><category term="keras" /><category term="ia" /><category term="tensorflow" /><category term="js" /><summary type="html"><![CDATA[Proyecto en Keras, que utiliza un dataset con los datos del desempleo en EEUU. Se aplica IA para la predicción de los valores futuros y se exporta el modelo ya entrenada para ser ejecutado mediante web.]]></summary></entry><entry><title type="html">Python - API Rest en Flask</title><link href="https://rarcos.com//2022/02/15/Python-API_Rest_en_Flask/" rel="alternate" type="text/html" title="Python - API Rest en Flask" /><published>2022-02-15T15:33:28+01:00</published><updated>2022-02-15T15:33:28+01:00</updated><id>https://rarcos.com//2022/02/15/Python%20-%20API_Rest_en_Flask</id><content type="html" xml:base="https://rarcos.com//2022/02/15/Python-API_Rest_en_Flask/"><![CDATA[<h1 id="api-rest-en-python-con-flask">Api rest en Python con Flask</h1>

<p>A continuación, se muestra un proyecto de Python realizado para crear una api rest mediante el uso de la librería <a href="https://palletsprojects.com/p/flask/">flask</a>. Tiene las siguientes características:</p>

<p>Se crea una base de datos MySQL (situada en un servidor de bases de datos en Internet) con dos tablas para almacenar:</p>
<ul>
  <li>los datos de los usuarios: nombre, dirección, teléfono, email y usuario en Github</li>
  <li>los datos de los repositorios de los usuarios:  nombre del repositorio, url, descripción y fecha de última modificación</li>
</ul>

<p>La aplicación en Flask permite añadir un nuevo usuario, ver los datos de los usuarios almacenados, editarlos, eliminarlos y ver sus repositorios.
Los repositorios de un usuario se muestran en una nueva página.</p>

<p>Cuando se añade un usuario, se obtienen sus repositorios públicos usando el api de GitHub y se almacenan en la tabla de repositorios.
Cuando se modifica el nombre del usuario en Github, se borran sus repositorios anteriores y se obtienen los nuevos.</p>

<p>Si quieres ver el resultado, te recomiendo visites:</p>

<p><a href="https://flask-python-crud.herokuapp.com/usuarios"><img src="/images/pages/app_flask_heroku.jpg" alt="Ir a ver la app en funcionamiento" /></a></p>

<p><em>Repositorio con el contenido</em></p>

<p><a href="https://github.com/rubenarcos2/api_rest_flask_python"><img src="/images/pages/repository_small.png" alt="Repositorio" /></a></p>]]></content><author><name></name></author><category term="python" /><category term="api" /><category term="rest" /><category term="flask" /><summary type="html"><![CDATA[Proyecto en Python realizado para crear una api rest mediante el uso de la librería flask.]]></summary></entry></feed>