<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="https://rarcos.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://rarcos.com/" rel="alternate" type="text/html" /><updated>2023-10-15T11:34:53+02:00</updated><id>https://rarcos.com/feed.xml</id><title type="html">Rubén Arcos</title><subtitle>Desarrollador de aplicaciones multiplataformas</subtitle><entry xml:lang="en"><title type="html">Integrated Project DWA</title><link href="https://rarcos.com/2023/06/30/Proyecto_integrado/" rel="alternate" type="text/html" title="Integrated Project DWA" /><published>2023-06-30T16:33:28+02:00</published><updated>2023-06-30T16:33:28+02:00</updated><id>https://rarcos.com/2023/06/30/Proyecto_integrado</id><content type="html" xml:base="https://rarcos.com/2023/06/30/Proyecto_integrado/"><![CDATA[<h1 id="integrated-project-at-the-end-of-the-higher-technician-in-development-of-web-applications">Integrated project at the end of the Higher Technician in Development of Web Applications</h1>

<p style="text-align: justify">
The main purpose of the application has been to demonstrate the implementation of the knowledge acquired throughout the training cycle of web application development. I have focused the application on the knowledge acquired on the management of user access privileges to different elements (or modules as I will refer to throughout the document) of the application, the management of hierarchical users in different groups (called roles) and the administration by an authorised user. No less relevant has been the application of knowledge in the design and management of relational databases and their implementation platforms. Another factor taken into account was the security of the environment of use (JWT) and of the application (Angular), implementing functionalities such as the encryption of sensitive data, or the prevention of the use of elements sensitive to the injection of automated information (cracking or brute force attacks).
</p>

<h1 id="architecture">Architecture</h1>

<p>This is the architecture that has been used for the production environment on a VPS.</p>

<p><img src="/images/pages/GesMerCa_arquitectura.png" alt="VPS Architecture" title="GesMerCa VPS Architecture" /></p>

<p>The logical separation of frontend, backend and database.</p>

<p><img src="/images/pages/GesMerCa_arquitectura_Front-Back.png" alt="Architecture GesMerCa Frontend-Backend" title="GesMerCa Frontend-Backend architecture" /></p>

<h2 id="execution-environment---frontend">Execution environment - Frontend</h2>

<p style="text-align: center">
<a href="https://vps.rarcos.com:10448/" target="_blank">
    <img src="/images/pages/gesmerca.png" width="100" alt="GesMerCa Logo" />Online web demo
</a>
</p>

<h2 id="api-documentation---backend">API documentation - Backend</h2>

<p style="text-align: center">
<a href="https://vps.rarcos.com:10447/" target="_blank">
    <img src="https://avatars.githubusercontent.com/u/7658037?s=200&amp;v=4" width="100" alt="Swagger Logo" />Api online documentation
</a>
</p>

<hr />

<p><em>Repository with content</em></p>

<p><a href="https://github.com/rubenarcos2/proyecto_daw/tree/main/frontend/gesmerca"><img src="/images/pages/repository_small.png" alt="Repository" /></a>
Frontend
<a href="https://github.com/rubenarcos2/proyecto_daw/tree/main/backend/gesmerca"><img src="/images/pages/repository_small.png" alt="Repository" /></a>
Backend
<a href="https://github.com/rubenarcos2/proyecto_daw/tree/main/IA"><img src="/images/pages/repository_small.png" alt="Repository" /></a>
IA</p>

<hr />

<p><strong>Sources:</strong></p>

<p><em>Angular</em></p>

<ul>
  <li><a href="https://openwebinars.net/academia/aprende/angular/9221/">https://openwebinars.net/academia/aprende/angular/9221/</a></li>
  <li><a href="https://www.positronx.io/laravel-angular-token-based-authentication-with-jwt/">https://www.positronx.io/laravel-angular-token-based-authentication-with-jwt/</a></li>
  <li><a href="https://www.ultimateakash.com/blog-details/Ii1TNGAKYAo=/How-to-Implement-JWT-Authentication-in-Angular-2023">https://www.ultimateakash.com/blog-details/Ii1TNGAKYAo=/How-to-Implement-JWT-Authentication-in-Angular-2023</a></li>
  <li><a href="https://www.tektutorialshub.com/angular/meta-service-in-angular-add-update-meta-tags-example/">https://www.tektutorialshub.com/angular/meta-service-in-angular-add-update-meta-tags-example/</a>
<a href="https://angular.io/api/platform-browser/MetaDefinition">https://angular.io/api/platform-browser/MetaDefinition</a></li>
  <li><a href="https://www.concretepage.com/angular-2/angular-2-4-minlength-and-maxlength-validation-example#:~:text=It%20means%20the%20value%20entered,can%20write%20code%20as%20below.">https://www.concretepage.com/angular-2/angular-2-4-minlength-and-maxlength-validation-example#:~:text=It%20means%20the%20value%20entered,can%20write%20code%20as%20below.</a></li>
  <li><a href="https://stackoverflow.com/questions/52389376/how-to-reload-current-page">https://stackoverflow.com/questions/52389376/how-to-reload-current-page</a></li>
</ul>

<p><em>LocalStorage y sessionStorage</em></p>

<ul>
  <li><a href="https://ed.team/blog/que-es-y-como-utilizar-localstorage-y-sessionstorage">https://ed.team/blog/que-es-y-como-utilizar-localstorage-y-sessionstorage</a></li>
</ul>

<p><em>Component Lifecycle</em></p>

<ul>
  <li><a href="https://angular.io/guide/lifecycle-hooks">https://angular.io/guide/lifecycle-hooks</a></li>
</ul>

<p><em>Unit testing</em></p>

<ul>
  <li><a href="https://www.infragistics.com/community/blogs/b/infragistics/posts/unit-testing-in-angular">https://www.infragistics.com/community/blogs/b/infragistics/posts/unit-testing-in-angular</a> -&gt; ng test –code-coverage</li>
</ul>

<p><em>Auth guard with roles/permission based</em></p>

<ul>
  <li><a href="https://jasonwatmore.com/post/2022/12/22/angular-14-role-based-authorization-tutorial-with-example">https://jasonwatmore.com/post/2022/12/22/angular-14-role-based-authorization-tutorial-with-example</a></li>
</ul>

<p><em>Unsuscribing AJAX request</em></p>

<ul>
  <li><a href="https://nocodenobug.substack.com/p/rxjs-en-angular-el-drama-de-las-suscripciones">https://nocodenobug.substack.com/p/rxjs-en-angular-el-drama-de-las-suscripciones</a></li>
</ul>

<p><em>Laravel</em>
<em>Creating the rest API in laravel with JWT authentication</em></p>

<ul>
  <li><a href="https://www.positronx.io/laravel-jwt-authentication-tutorial-user-login-signup-api/">https://www.positronx.io/laravel-jwt-authentication-tutorial-user-login-signup-api/</a></li>
  <li><a href="https://www.nigmacode.com/laravel/roles-de-usuario-en-laravel/">https://www.nigmacode.com/laravel/roles-de-usuario-en-laravel/</a> -&gt; php artisan vendor:publish –provider=”Spatie\Permission\PermissionServiceProvider”</li>
  <li><a href="https://laraveldaily.com/post/laravel-api-errors-and-exceptions-how-to-return-responses">https://laraveldaily.com/post/laravel-api-errors-and-exceptions-how-to-return-responses</a></li>
  <li><a href="https://stackoverflow.com/questions/64897053/laravel-8-return-all-exceptions-as-json">https://stackoverflow.com/questions/64897053/laravel-8-return-all-exceptions-as-json</a></li>
  <li><a href="https://www.itsolutionstuff.com/post/laravel-9-user-roles-and-permissions-tutorialexample.html">https://www.itsolutionstuff.com/post/laravel-9-user-roles-and-permissions-tutorialexample.html</a>
<a href="https://larainfo.com/blogs/laravel-9-image-file-upload-example">https://larainfo.com/blogs/laravel-9-image-file-upload-example</a></li>
  <li><a href="https://stackoverflow.com/questions/68128685/laravel-get-public-url-for-file-stored-in-storage-public-folder">https://stackoverflow.com/questions/68128685/laravel-get-public-url-for-file-stored-in-storage-public-folder</a> -&gt; php artisan storage:link
<a href="https://tinkerwell.app/blog/laravel-caches-and-all-ways-to-clear-them">https://tinkerwell.app/blog/laravel-caches-and-all-ways-to-clear-them</a></li>
  <li><a href="https://www.positronx.io/laravel-image-resize-upload-with-intervention-image-package/">https://www.positronx.io/laravel-image-resize-upload-with-intervention-image-package/</a></li>
</ul>

<p><em>Spatie permissions</em></p>

<ul>
  <li><a href="https://spatie.be/docs/laravel-permission/v5/basic-usage/direct-permissions">https://spatie.be/docs/laravel-permission/v5/basic-usage/direct-permissions</a></li>
  <li><a href="https://laravelcode.com/post/laravel-8-user-roles-and-permissions-using-spatie">https://laravelcode.com/post/laravel-8-user-roles-and-permissions-using-spatie</a>
<a href="https://spatie.be/docs/laravel-permission/v5/basic-usage/role-permissions">https://spatie.be/docs/laravel-permission/v5/basic-usage/role-permissions</a></li>
  <li><a href="https://scrutinizer-ci.com/g/spatie/laravel-permission/code-structure/master/operation/Spatie%5CPermission%5CTraits%5CHasPermissions::syncPermissions">https://scrutinizer-ci.com/g/spatie/laravel-permission/code-structure/master/operation/Spatie%5CPermission%5CTraits%5CHasPermissions::syncPermissions</a></li>
</ul>

<p><em>Faker y seed imagenes</em></p>

<ul>
  <li><a href="https://styde.net/generando-datos-de-prueba-con-faker-en-laravel/">https://styde.net/generando-datos-de-prueba-con-faker-en-laravel/</a></li>
  <li><a href="https://github.com/fzaninotto/Faker#formatters">https://github.com/fzaninotto/Faker#formatters</a></li>
  <li><a href="https://kodementor.com/how-to-seeds-images-with-faker-in-laravel/">https://kodementor.com/how-to-seeds-images-with-faker-in-laravel/</a></li>
  <li><a href="https://styde.net/insercion-de-datos-con-los-seeders-de-laravel/">https://styde.net/insercion-de-datos-con-los-seeders-de-laravel/</a> -&gt; php artisan migrate:fresh –seed</li>
</ul>

<p><em>storage -&gt; public link</em></p>

<ul>
  <li><a href="https://laravel.com/docs/10.x/filesystem#the-public-disk">https://laravel.com/docs/10.x/filesystem#the-public-disk</a> -&gt; php artisan storage:link</li>
</ul>

<p><em>Unit testing</em></p>

<ul>
  <li><a href="https://platzi.com/discusiones/1842-intro-laravel/85644-que-diferencia-hay-entre-unit-test-y-feature-test/">https://platzi.com/discusiones/1842-intro-laravel/85644-que-diferencia-hay-entre-unit-test-y-feature-test/</a></li>
  <li><a href="https://laravel.com/docs/10.x/testing">https://laravel.com/docs/10.x/testing</a> -&gt; php artisan test</li>
</ul>

<p><em>Docker postgreSQL database backup</em></p>

<ul>
  <li><a href="https://stackoverflow.com/questions/30171063/how-to-generate-a-postgresql-dump-from-a-docker-container">https://stackoverflow.com/questions/30171063/how-to-generate-a-postgresql-dump-from-a-docker-container</a></li>
</ul>]]></content><author><name></name></author><category term="javascript" /><category term="php" /><category term="angular" /><category term="laravel" /><category term="proyecto integrado" /><category term="gesmerca" /><summary type="html"><![CDATA[Integrated project at the end of the Higher Technician in Development of Web Applications (DWA).]]></summary></entry><entry xml:lang="en"><title type="html">Securing VPS</title><link href="https://rarcos.com/2023/03/14/Securizando-VPS/" rel="alternate" type="text/html" title="Securing VPS" /><published>2023-03-14T06:41:00+01:00</published><updated>2023-03-14T06:41:00+01:00</updated><id>https://rarcos.com/2023/03/14/Securizando%20VPS</id><content type="html" xml:base="https://rarcos.com/2023/03/14/Securizando-VPS/"><![CDATA[<p>By way of notes, a standard VPS securisation:</p>
<ul>
  <li><a href="#seg-basica">Basic security</a></li>
  <li><a href="#ssh">SSH key-based authentication</a></li>
  <li><a href="#maldet">Malware detection - maldet</a></li>
  <li><a href="#postfix">Postfix - Sending email</a></li>
  <li><a href="#cpu">Notification if CPU max</a></li>
</ul>

<p><a name="seg-basica"></a></p>

<h1 id="linux-security-and-common-weaknesses">Linux security and common weaknesses</h1>

<p>15 VPS security tips for protecting your server security</p>

<p><a href="https://www.hostinger.es/tutoriales/seguridad-vps">https://www.hostinger.es/tutoriales/seguridad-vps</a></p>

<p><a name="ssh"></a></p>

<h1 id="ssh-key-based-authentication---access">SSH Key Based Authentication - Access</h1>

<p>Generation of the key pair: public-private</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">ssh-keygen <span class="nt">-t</span> rsa</code></pre></figure>

<p>Public key authorisation</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nb">cat</span> ~/.ssh/id_rsa.pub <span class="o">&gt;&gt;</span> ~/.ssh/authorized_keys</code></pre></figure>

<p>Disable password authentication on your server</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nb">sudo </span>nano /etc/ssh/sshd_config</code></pre></figure>

<p>Change the value of PasswordAuthentication inside the sshd_config to:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">PasswordAuthentication no</code></pre></figure>

<p>Restart the SSH server for the changes to take effect:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">service ssh restart</code></pre></figure>

<p>We pass by sftp the private key <em>id_rsa</em> to the client we are going to use. Putty in my case.
On the client side, we install putty and generate the private key as follows:</p>

<p><a href="https://www.simplified.guide/putty/convert-ssh-key-to-ppk">https://www.simplified.guide/putty/convert-ssh-key-to-ppk</a></p>

<p><a name="maldet"></a></p>

<h1 id="malware-detection---maldet">Malware detection - maldet</h1>

<p>Installation and commissioning:</p>

<p><a href="https://codigonaranja.com/como-detectar-malware-en-tu-sitio-web-servidores-linux-ubuntu-debian">https://codigonaranja.com/como-detectar-malware-en-tu-sitio-web-servidores-linux-ubuntu-debian</a></p>

<p>View reports and briefings:</p>

<p><a href="https://wpbeaches.com/set-lmd-maldet-clamav-runcloud/">https://wpbeaches.com/set-lmd-maldet-clamav-runcloud/</a></p>

<p>Manual scanning:</p>

<p><a href="https://www.nosolocodigo.com/linux-malware-detect-escaner-para-aplicaciones-web-open-source/">https://www.nosolocodigo.com/linux-malware-detect-escaner-para-aplicaciones-web-open-source/</a></p>

<p><a name="postfix"></a></p>

<h1 id="installing-and-configuring-postfix-to-use-gmail-smtp">Installing and configuring Postfix to use Gmail SMTP</h1>

<p><a href="http://somebooks.es/configurar-postfix-para-usar-el-smtp-de-gmail-en-ubuntu-20-04-lts/">http://somebooks.es/configurar-postfix-para-usar-el-smtp-de-gmail-en-ubuntu-20-04-lts/</a></p>

<p><a href="https://www.fosstechnix.com/how-to-configure-postfix-with-gmail-on-ubuntu/">https://www.fosstechnix.com/how-to-configure-postfix-with-gmail-on-ubuntu/</a></p>

<p>Email aliases for users:</p>

<p><a href="https://www.cyberciti.biz/tips/how-to-redirect-one-users-mail-to-another-user-with-postfix.html">https://www.cyberciti.biz/tips/how-to-redirect-one-users-mail-to-another-user-with-postfix.html</a></p>

<p>Resolution of the error in the certificate:</p>

<p><a href="https://github.com/rancher/rancher/issues/4293">https://github.com/rancher/rancher/issues/4293</a></p>

<p><a name="cpu"></a></p>

<h1 id="email-notification-if-cpu-exceeds-80">Email notification if CPU exceeds 80%</h1>

<p><a href="https://www.2daygeek.com/linux-shell-script-to-monitor-cpu-utilization-usage-and-send-email/">https://www.2daygeek.com/linux-shell-script-to-monitor-cpu-utilization-usage-and-send-email/</a></p>]]></content><author><name></name></author><category term="vps" /><category term="seguridad" /><category term="ssh" /><category term="postfix" /><category term="malware" /><summary type="html"><![CDATA[VPS securisation notes: basic security, ssh keys, malware detection, posfix...]]></summary></entry><entry><title type="html">Dockerizando VPS</title><link href="https://rarcos.com/2023/03/11/Dockerizando-VPS/" rel="alternate" type="text/html" title="Dockerizando VPS" /><published>2023-03-11T06:41:00+01:00</published><updated>2023-03-11T06:41:00+01:00</updated><id>https://rarcos.com/2023/03/11/Dockerizando%20VPS</id><content type="html" xml:base="https://rarcos.com/2023/03/11/Dockerizando-VPS/"><![CDATA[<p>He traspasado todas mis aplicaciones que tenía en heroku a un vps propio y además he aprovechado para dockerizarlas todas, incluyendo bases de datos y otros servicios web. Concretamente he dockerizado:</p>
<ul>
  <li><a href="#cont-spring-boot">Spring Boot</a></li>
  <li><a href="#cont-laravel">Laravel</a></li>
  <li><a href="#cont-flask">Flask</a></li>
  <li><a href="#cont-nginx">Nginx</a></li>
  <li><a href="#cont-postgres">PostgreSQL</a></li>
  <li><a href="#cont-mysql">MySQL</a></li>
  <li><a href="#cont-mongo">MongoDB</a></li>
</ul>

<h1 id="instalación-de-docker-en-el-vps">Instalación de docker en el VPS</h1>

<p><strong>Docker</strong></p>

<p>En primer lugar he tenido que instalar docker y docker compose. Para la instalación de docker en ubuntu 22.04 server :</p>

<p>Actualizamos la lista de paquetes del S.O. y actualizamos el S.O.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">apt update <span class="o">&amp;&amp;</span> apt upgrade</code></pre></figure>

<p>Añadimos una serie de paquetes de requisitos previos.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">apt <span class="nb">install </span>apt-transport-https ca-certificates curl software-properties-common</code></pre></figure>

<p>Se agrega la clave GPG para el repositorio oficial de Docker a nuestro S.O.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">curl <span class="nt">-fsSL</span> https://download.docker.com/linux/ubuntu/gpg | apt-key add -</code></pre></figure>

<p>Y por último ya podremos añadir el repositorio a nuestro S.O. Podemos comprobar que se ha añadido una línea en /etc/apt/source.list.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">add-apt-repository <span class="s2">"deb [arch=amd64] https://download.docker.com/linux/ubuntu jammy stable"</span></code></pre></figure>

<p>Actualizamos la base de datos ya que hay una línea nueva (compruebe en el listado que sale) y comprobaremos antes de instalar que vamos a instalar desde el repositorio (y no desde Ubuntu Server).</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">apt update &amp; apt-cache policy docker-ce</code></pre></figure>

<p>Por último, podremos instalar el paquete (paquete pesado de aproximadamente 400 MBytes). Como no puede ser de otra manera hay que asegurar que Docker engine está arrancado y si reinicia el servicio en el arranque del S.O. anfitrión.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">apt-get <span class="nb">install </span>docker-ce</code></pre></figure>

<p><em>Manualillo de systemctl</em></p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">systemctl disable Docker <span class="c"># deshabilitamos en el arranque el demonio docker </span>
systemctl list-unit-files | <span class="nb">grep </span>docker 
systemctl <span class="nb">enable </span>docker 
systemctl list-unit-files | <span class="nb">grep </span>docker 
systemctl stop docker <span class="o">&amp;&amp;</span> systemctl status Docker 
systemctl start docker <span class="o">&amp;&amp;</span> systemctl status Docker 
docker versión</code></pre></figure>

<p><em>Resolución del problema de permisos de docker para un usuario no root</em></p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nb">sudo </span>groupadd docker
<span class="nb">sudo </span>usermod <span class="nt">-aG</span> docker mi_usuario
newgrp docker
docker ps</code></pre></figure>

<p><strong>Docker-Compose</strong></p>

<p>Actualización de la lista de repositorios</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nb">sudo </span>apt update</code></pre></figure>

<p>Instalación de docker-compose</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nb">sudo </span>apt <span class="nb">install </span>docker-compose</code></pre></figure>

<p>Comprobamos el estado del servidor docker y las versiones respectivamente</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">systemctl status docker
docker <span class="nt">-v</span>
docker-compose <span class="nt">-version</span></code></pre></figure>

<h1 id="creación-de-los-contenedores-y-docker-compose">Creación de los contenedores y docker-compose</h1>

<p>En primer lugar me he creado una carpeta <em>docker</em> en el home, que irá alojando los scripts y ficheros necesarios. Tiene la siguiente estructura:</p>

<p><img src="/images/pages/docker-jerarquia.jpg" alt="docker-jerarquia.jpg" /></p>

<p>Vamos a utilizar para el certificado de autenticación del servidor https <a href="https://letsencrypt.org/">Let’s encrypt</a>.</p>

<p><strong>Instalación y generación del certificado Let’s encrypt</strong></p>

<p>Para la instalación de la aplicación <em>certbot</em> de Let’s encrypt para generar los certificados, recomiendo seguir las instrucciones de la siguiente página <a href="https://certbot.eff.org/instructions?ws=other&amp;os=ubuntufocal">https://certbot.eff.org/instructions?ws=other&amp;os=ubuntufocal</a> está preseleccionado para Ubuntu server.</p>

<p>La página indicada anteriormente, es la única que funciona actualmente con Ubuntu Server 22.04, el resto de tutoriales que he visitado se encuentran obsoletos al haber cambiado a snap la aplicación de certbot de Let’s encrypt y el repositorio de github ya no funciona tampoco como se esperaba en instrucciones antiguas.</p>

<p>Una vez terminado nos generará la siguiente salida:
<img src="/images/pages/certificado_letsencrypt.jpg" alt="salida_certificado_letsencrypt" /></p>

<p>Generamos el certificado que es válido para tomcat .p12.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">openssl pkcs12 <span class="nt">-export</span> <span class="nt">-in</span> /etc/letsencrypt/live/mi_dominio_web/fullchain.pem <span class="nt">-inkey</span> /etc/letsencrypt/live/mi_dominio_web/privkey.pem <span class="nt">-out</span> springboot_letsencrypt.p12 <span class="nt">-name</span> bootalias <span class="nt">-CAfile</span> chain.pem <span class="nt">-caname</span> root</code></pre></figure>

<p><em>Recuerda cambiar las rutas por las tuyas</em></p>

<p><a name="cont-spring-boot"></a></p>

<p><strong>Contenedor para Spring Boot</strong></p>

<p>Copiamos los ficheros necesarios en nuestra carpeta de nuestro nuestra carpeta en el home de <em>/docker/docker-java/</em>: estando en la raíz de esta el fichero .jar y .p12.</p>

<p><em>Generación de los scripts de docker</em></p>

<p>En primer lugar, vamos a crear un <em>Dockerfile</em> para que contenga la imagen (para Ubuntu server) y realice la copia de los ficheros necesarios (el .jar y el certificado) hacia nuestro contenedor.</p>

<p>Dockerfile</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">FROM eclipse-temurin:17-jdk-alpine

ARG <span class="nv">JAR_FILE</span><span class="o">=</span><span class="k">*</span>.jar

COPY <span class="k">${</span><span class="nv">JAR_FILE</span><span class="k">}</span> my_proyect_compiled.jar
COPY my_cert_letsencrypt.p12 <span class="nb">.</span>

ENTRYPOINT <span class="o">[</span><span class="s2">"java"</span>,<span class="s2">"-jar"</span>,<span class="s2">"/my_proyect_compiled.jar"</span><span class="o">]</span></code></pre></figure>

<p><em>Tendremos que cambiar el nombre del certificado y del fichero del proyecto compilado .jar</em></p>

<p>En segundo lugar, vamos a crear el script de <em>docker-compose.yml</em> que creará nuestro servicio web y expondrá el puerto 8443 por defecto.</p>

<p>docker-compose.yml</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">version: <span class="s1">'3.8'</span>
services:
  proyect_name:
    build: <span class="nb">.</span>
    container_name: <span class="s1">'proyect_name-spring-app'</span>
    restart: always
    ports:
      - <span class="s1">'8080:8080'</span>
      - <span class="s1">'8443:8443'</span></code></pre></figure>

<p><em>Tendremos que cambiar el nombre del servicio y del contenedor</em></p>

<p><em>Proyecto Spring Boot</em></p>

<p>Vamos a añadir al fichero <em>aplication.properties</em> la configuración para que el servidor tomcat que crea Spring, escuche por el puerto https, que por defecto es el 8443 en lugar del 443. Y el certificado que hemos creado previamente para que nuestro servidor funcione con Let’s encrypt.</p>

<p>aplication.properties</p>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><span class="n">server</span><span class="o">.</span><span class="na">port</span><span class="o">=</span><span class="mi">9443</span>
<span class="n">server</span><span class="o">.</span><span class="na">ssl</span><span class="o">.</span><span class="na">enabled</span><span class="o">=</span><span class="kc">true</span>
<span class="n">server</span><span class="o">.</span><span class="na">ssl</span><span class="o">.</span><span class="na">key</span><span class="o">-</span><span class="n">store</span><span class="o">=</span><span class="n">my_cert_letsencrypt</span><span class="o">.</span><span class="na">p12</span>
<span class="n">server</span><span class="o">.</span><span class="na">ssl</span><span class="o">.</span><span class="na">key</span><span class="o">-</span><span class="n">store</span><span class="o">-</span><span class="n">password</span><span class="o">=</span><span class="n">your_password</span>
<span class="n">server</span><span class="o">.</span><span class="na">ssl</span><span class="o">.</span><span class="na">keyStoreType</span><span class="o">=</span><span class="no">PKCS12</span>
<span class="n">server</span><span class="o">.</span><span class="na">ssl</span><span class="o">.</span><span class="na">keyAlias</span><span class="o">=</span><span class="n">your_alias</span></code></pre></figure>

<p><em>Tendremos que cambiar: el certificado, la contraseña y el alias con el que creamos anteriormente.</em></p>

<p>Generamos el fichero <em>.jar</em> mediante el comando de mvn para compilar</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">mvn package</code></pre></figure>

<p><em>Para ver la diferencia entre mvn package y mvn install, consulta este <a href="https://www.appsdeveloperblog.com/difference-between-mvn-package-and-mvn-install/">enlace</a></em></p>

<p>Ahora en la carpeta <em>/target</em> del proyecto tendremos el fichero <em>.jar</em> que pasaremos por ftp a nuestra carpeta en el home de <em>/docker/docker-java/nombre_aplicacion</em> que contendrá a su vez los ficheros de <em>Dockerfile</em> y <em>docker-compose.yml</em>, junto a nuestro certificado <em>.p12</em>. Para que todo se pueda copiar en el contenedor de docker, según las instrucciones de nuesto <em>Dockerfile</em>.</p>

<p>Finalmente, debemos tener la siguiente estructura de ficheros en la carpeta de docker:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">/docker-my_app
|-Dockerfile
|-docker-compose.yml
|-my_app.jar
|-my_cert.p12</code></pre></figure>

<p>En la página oficial del Spring Boot hay también un tutorial que indica con mayor detalle lo realizado anteriormente <a href="https://spring.io/guides/topicals/spring-boot-docker/">https://spring.io/guides/topicals/spring-boot-docker/</a> incluyendo aspectos de seguridad como la creación de un usuario diferente a root dentro del contenedor de docker.</p>

<p><a name="cont-laravel"></a></p>

<p><strong>Contenedor para Laravel</strong></p>

<p>Para Laravel vamos a utilizar un servidor ngnix con la última versión por seguridad.
para ello crearemos varios ficheros que describiré a continuación:</p>

<p><em>Generación de los scripts de docker</em></p>

<p>Dockerfile</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="c"># imagen de dockerhub que descargara</span>
FROM php:8.2-fpm-alpine

<span class="c"># algunas configuraciones para que funcione el contenedor para mysql</span>
<span class="c">#RUN docker-php-ext-install pdo pdo_mysql</span>

<span class="c"># Install Postgre PDO</span>
RUN <span class="nb">set</span> <span class="nt">-ex</span> <span class="se">\</span>
  <span class="o">&amp;&amp;</span> apk <span class="nt">--no-cache</span> add <span class="se">\</span>
    postgresql-dev

RUN docker-php-ext-install pdo pdo_pgsql

<span class="c"># instala composer en el contenedor</span>
RUN curl <span class="nt">-sS</span> https://getcomposer.org/installer | php <span class="nt">--</span> <span class="nt">--install-dir</span><span class="o">=</span>/usr/local/bin <span class="nt">--filename</span><span class="o">=</span>composer

<span class="c"># da permisos para editar los archivos en esta ruta del container</span>
RUN <span class="nb">chown</span> <span class="nt">-R</span> www-data:www-data /var/www
RUN <span class="nb">chmod </span>755 /var/www</code></pre></figure>

<p>docker-compose.yml</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">version: <span class="s2">"3.3"</span>

<span class="c"># Servidor nginx</span>
services:
  nginx-laravel:
    image: nginx:latest
    restart: always
    ports:
      - <span class="s2">"10440:443"</span>
    volumes:
      - ./src:/var/www/html
      - ./src/storage:/var/www/html/storage
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt/live/mi_dominio_web/fullchain.pem:/etc/nginx/ssl/fullchain.pem:ro
      - /etc/letsencrypt/live/mi_dominio_web/privkey.pem:/etc/nginx/ssl/privkey.pem:ro

    links:
      - php-laravel

  <span class="c"># Configuración de php-fpm</span>
  php-laravel:
<span class="c">#    image: php:8-fpm</span>
    build: <span class="nb">.</span>
    restart: always
    volumes:
      - ./src:/var/www/html
<span class="c">#    command: sh -c "cd /var/www/html &amp;&amp; composer update nesbot/carbon"</span></code></pre></figure>

<p>nginx.conf</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">server <span class="o">{</span>
    listen 80<span class="p">;</span>
    listen <span class="o">[</span>::]:80<span class="p">;</span>
    listen 443 ssl<span class="p">;</span>
    server_name mi_ip www.mi_dominio mi_dominio localhost<span class="p">;</span>
    ssl_certificate /etc/nginx/ssl/fullchain.pem<span class="p">;</span>
    ssl_certificate_key /etc/nginx/ssl/privkey.pem<span class="p">;</span>

    <span class="c"># Redirect non-https traffic to https</span>
    <span class="k">if</span> <span class="o">(</span><span class="nv">$scheme</span> <span class="o">!=</span> <span class="s2">"https"</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return </span>301 https://<span class="nv">$host$request_uri</span><span class="p">;</span>
    <span class="o">}</span>

    <span class="c"># Log files for Debug</span>
    error_log  /var/log/nginx/error.log<span class="p">;</span>
    access_log /var/log/nginx/access.log<span class="p">;</span>

    <span class="c"># Laravel web root directory</span>
    root /var/www/html/public<span class="p">;</span>
    index index.php index.html<span class="p">;</span>

    location / <span class="o">{</span>
        try_files <span class="nv">$uri</span> <span class="nv">$uri</span>/ /index.php?<span class="nv">$query_string</span><span class="p">;</span>
        gzip_static on<span class="p">;</span>
    <span class="o">}</span>

    <span class="c"># Nginx Pass requests to PHP-FPM</span>
    location ~ <span class="se">\.</span>php<span class="nv">$ </span><span class="o">{</span>
        try_files <span class="nv">$uri</span> <span class="o">=</span>404<span class="p">;</span>
        fastcgi_split_path_info ^<span class="o">(</span>.+<span class="se">\.</span>php<span class="o">)(</span>/.+<span class="o">)</span><span class="nv">$;</span>
        fastcgi_pass php-laravel:9000<span class="p">;</span>
        fastcgi_index index.php<span class="p">;</span>
        include fastcgi_params<span class="p">;</span>
        fastcgi_param SCRIPT_FILENAME <span class="nv">$document_root$fastcgi_script_name</span><span class="p">;</span>
        fastcgi_param PATH_INFO <span class="nv">$fastcgi_path_info</span><span class="p">;</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre></figure>

<p><em>Sustituye mi dominio mi_dominio por el tuyo</em></p>

<p>Finalmente, debemos tener la siguiente estructura de ficheros en la carpeta de docker:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">/docker-my_app
|-Dockerfile
|-docker-compose.yml
|-default.conf
|-nginx.conf
|-src</code></pre></figure>

<p>Y en la carpeta <em>src</em> vamos a copiar todo el contenido de Laravel.</p>

<p>Levantamos el contenedor de docker como demonio y con la compilación activada</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">docker-compose up <span class="nt">--build</span> <span class="nt">-d</span></code></pre></figure>

<p>Con esto ya tenemos una versión de Laravel Dockerizada y funcionando.</p>

<p><a name="cont-flask"></a></p>

<p><strong>Contenedor para Flask</strong></p>

<p>Tenemos nuestra aplicación python con flask en la carpeta <em>app</em> y los certificados en la carpeta <em>certs</em> y el fichero de <em>requirements</em> al mismo nivel que los de docker.</p>

<p><em>Generación de los scripts de docker</em></p>

<p>Dockerfile</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">version: <span class="s1">'3.8'</span>

services:
  flask:
    restart: always
    build: <span class="nb">.</span>
    <span class="nb">command</span>: python app.py run <span class="nt">-h</span> 0.0.0.0
    volumes:
      - ./app:/usr/src/app/
    ports:
      - 10443:5000
    environment:
      - <span class="nv">FLASK_APP</span><span class="o">=</span>app.py
      - <span class="nv">FLASK_DEBUG</span><span class="o">=</span>1</code></pre></figure>

<p>nginx.conf</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">server <span class="o">{</span>
    listen 80<span class="p">;</span>
    listen <span class="o">[</span>::]:80<span class="p">;</span>
    listen 443 ssl<span class="p">;</span>
    server_name  www.mi_dominio_web mi_dominio_web<span class="p">;</span>
    ssl_certificate /etc/nginx/certs/fullchain.pem<span class="p">;</span>
    ssl_certificate_key /etc/nginx/certs/privkey.pem<span class="p">;</span>

    <span class="c"># Redirect non-https traffic to https</span>
    <span class="k">if</span> <span class="o">(</span><span class="nv">$scheme</span> <span class="o">!=</span> <span class="s2">"https"</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return </span>301 https://<span class="nv">$host$request_uri</span><span class="p">;</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre></figure>

<p>app.py</p>

<p><em>Sustituye mi dominio mi_dominio_web por el tuyo</em></p>

<p><a name="cont-nginx"></a></p>

<p><strong>Contenedor para Nginx</strong></p>

<p>Copiamos los ficheros necesarios en nuestra carpeta de nuestro nuestra carpeta en el home de <em>/docker/docker-ngnix/</em>: estando en la raíz de esta el fichero <em>docker-compose.yml y nginx.conf</em>, las carpetas: <em>cers, site-content y templates</em>.</p>

<p><em>Generación de los scripts de docker</em></p>

<p>docker-compose.yml</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">version: <span class="s2">"3.7"</span>
services:
  web:
    image: nginx
    volumes:
     - ./templates:/etc/nginx/templates
     - ./site-content:/etc/nginx/html
     - ./certs:/etc/nginx/certs:ro
     - ./nginx.conf:/etc/nginx/conf.d/nginx.conf

    ports:
     - <span class="s2">"80:80"</span>
     - <span class="s2">"443:443"</span></code></pre></figure>

<p><em>Generación del script de configuración de ngnix</em></p>

<p>nginx.conf</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">server <span class="o">{</span>
    listen 80<span class="p">;</span>
    listen <span class="o">[</span>::]:80<span class="p">;</span>
    listen 443 ssl<span class="p">;</span>
    server_name  www.mi_dominio_web mi_dominio_web<span class="p">;</span>
    ssl_certificate /etc/nginx/certs/fullchain.pem<span class="p">;</span>
    ssl_certificate_key /etc/nginx/certs/privkey.pem<span class="p">;</span>

    <span class="c"># Redirect non-https traffic to https</span>
    <span class="k">if</span> <span class="o">(</span><span class="nv">$scheme</span> <span class="o">!=</span> <span class="s2">"https"</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return </span>301 https://<span class="nv">$host$request_uri</span><span class="p">;</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre></figure>

<p><em>Sustituye mi dominio mi_dominio_web por el tuyo</em></p>

<p><em>Generación del resto de ficheros y carpetas</em></p>

<p>En la carpeta <em>certs</em> tienes que tener una copia de los ficheros generados por <em>certbot</em>, son los ficheros: <em>fullchain.pem y privkey.pem</em>.</p>

<p>En la carpeta <em>site-content</em> el <em>index.html</em> de tu web con todo su contenido. Este es un ejemplo de redirección de mi página, por si te sirve de ejemplo.</p>

<p>site-content/index.html</p>

<figure class="highlight"><pre><code class="language-html" data-lang="html"><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">"es"</span><span class="nt">&gt;</span>

<span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">"UTF-8"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"viewport"</span> <span class="na">content=</span><span class="s">"width=device-width, initial-scale=1.0"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">"X-UA-Compatible"</span> <span class="na">content=</span><span class="s">"ie=edge"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">"refresh"</span> <span class="na">content=</span><span class="s">"5;url=https://mi_dominio_web"</span><span class="nt">&gt;</span>
<span class="nt">&lt;/head&gt;</span>

<span class="nt">&lt;body&gt;</span>
<span class="nt">&lt;h1&gt;</span>Acceso no permitido<span class="nt">&lt;/h1&gt;</span>
<span class="nt">&lt;p&gt;</span>Va a ser redireccionado a la página <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"https://mi_dominio_web"</span><span class="nt">&gt;</span>https://mi_dominio_web<span class="nt">&lt;/a&gt;&lt;/p&gt;</span>
<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span></code></pre></figure>

<p><a name="cont-postgres"></a></p>

<p><strong>Contenedor para PostgreSQL</strong></p>

<p>La dockerización de PostgreSQL es una de las más sencillas que hay, solamente tenemos que crear un docker-compose y levantar el contenedor.</p>

<p><em>Generación del scripts de docker</em></p>

<p>docker-compose.yml</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">version: <span class="s1">'3.3'</span>
services:
  db:
    image: postgres
    restart: always
    container_name: postgresql
    environment:
      - <span class="nv">POSTGRES_USER</span><span class="o">=</span>mi_usuario
      - <span class="nv">POSTGRES_PASSWORD</span><span class="o">=</span>mi_contraseña
    ports:
      - <span class="s1">'mi_puerto_ext:5432'</span>
    volumes:
      - db:/var/lib/postgresql/data
volumes:
  db:
    driver: <span class="nb">local</span></code></pre></figure>

<p>En la carpeta <em>./db</em> que se creará automáticamente tendremos todos los ficheros de la base de datos para poder consultar y/o modificar lo que necesitemos desde fuera del contenedor.</p>

<p><a name="cont-mysql"></a></p>

<p><strong>Contenedor para mySQL</strong></p>

<p>La dockerización de MySQL es una de las más sencillas que hay, solamente tenemos que crear un docker-compose y levantar el contenedor.</p>

<p><em>Generación del scripts de docker</em></p>

<p>docker-compose.yml</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">version: <span class="s1">'2.4'</span>
services:
  mariadb:
    image: mariadb
    container_name: mysql
    restart: always
    volumes:
      - ./db:/var/lib/mysql
    environment:
      TZ: Europe/Madrid
      <span class="c">#MYSQL_RANDOM_ROOT_PASSWORD: "yes"</span>
      MYSQL_ROOT_PASSWORD: mi_contraseña_root
      MYSQL_DATABASE: mi_nombre_bbdd
      MYSQL_USER: mi_usuario
      MYSQL_PASSWORD: mi_contraseña
    ports:
      - 23452:3306
    <span class="c">#healthcheck:</span>
      <span class="c">#test:  mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD || exit 1</span>
      <span class="c">#test:  mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD || exit 1</span>
      <span class="c">#interval: 60s</span>
      <span class="c">#timeout: 5s</span>
      <span class="c">#retries: 5</span>
      <span class="c">#start_period: 30s</span></code></pre></figure>

<p>En la carpeta <em>./db</em> que se creará automáticamente tendremos todos los ficheros de la base de datos para poder consultar y/o modificar lo que necesitemos desde fuera del contenedor.</p>

<p><a name="cont-mongo"></a></p>

<p><strong>Contenedor para MongoDB</strong></p>

<p>La dockerización de MongoDB es una de las más sencillas que hay, solamente tenemos que crear un docker-compose y levantar el contenedor.</p>

<p><em>Generación del scripts de docker</em></p>

<p>docker-compose.yml</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">version: <span class="s1">'3.7'</span>
services:
  mongodb_container:
    image: mongo:latest
    ports:
      - mi_puerto_ext:27017
    volumes:
      - db:/data/db
volumes:
  db:</code></pre></figure>

<p>En la carpeta <em>./db</em> que se creará automáticamente tendremos todos los ficheros de la base de datos para poder consultar y/o modificar lo que necesitemos desde fuera del contenedor.</p>

<hr />

<p><strong>Fuentes:</strong></p>

<p><a href="https://certbot.eff.org/instructions">https://certbot.eff.org/instructions</a></p>

<p><a href="https://wstutorial.com/rest/spring-boot-with-lets-encrypt.html">https://wstutorial.com/rest/spring-boot-with-lets-encrypt.html</a></p>

<p><a href="https://spring.io/guides/topicals/spring-boot-docker/">https://spring.io/guides/topicals/spring-boot-docker/</a></p>

<p><a href="https://awstip.com/run-nginx-in-a-docker-container-using-pre-generated-ssl-certificates-from-letsencrypt-b005ebce74ca">https://awstip.com/run-nginx-in-a-docker-container-using-pre-generated-ssl-certificates-from-letsencrypt-b005ebce74ca</a></p>]]></content><author><name></name></author><category term="docker" /><category term="docker-compose" /><category term="vps" /><category term="spring" /><category term="java" /><category term="php" /><category term="laravel" /><category term="flask" /><category term="python" /><summary type="html"><![CDATA[Cómo he dockerizado mi vps para alojar aplicaciones: spring, laravel, flask...y más]]></summary></entry><entry><title type="html">Python - IA juego Hotel</title><link href="https://rarcos.com/2022/08/11/IA-Juego-Hotel/" rel="alternate" type="text/html" title="Python - IA juego Hotel" /><published>2022-08-11T16:33:28+02:00</published><updated>2022-08-11T16:33:28+02:00</updated><id>https://rarcos.com/2022/08/11/IA%20-%20Juego%20Hotel</id><content type="html" xml:base="https://rarcos.com/2022/08/11/IA-Juego-Hotel/"><![CDATA[<p>He realizado la creación de un sistema de IA para aprendizaje de la decisión de compra para el juego del Hotel. Se trata de decidir si se compra o no en la casilla de <em>compra</em>, y predecir cual de las propiedades es mejor comprar.</p>

<h1 id="programa-generador-de-partidas">Programa generador de partidas</h1>

<p><strong>Generador de partidas</strong></p>

<p>En primer lugar he tenido que realizar una generador de partidas del juego del Hotel, para alimentar a la IA. Posteriormente he creado también un jugador IA para comparar los resultados obtenidos tras el aprendizaje de la IA.</p>

<p><em>Generador de partidas aleatorio (juego Hotel, 4 jugadores):</em></p>

<p><a href="https://colab.research.google.com/drive/1KEqghfPGeuk9u5u8_s531CCb7869Hn3u"><img src="/images/pages/repository_small_colab.png" alt="Generador de partidas" /></a></p>

<p><strong>Dataset</strong></p>

<p>El conjunto de datos utilizado es el dataset de 500 partidas, pero se ha probado progresivamente de 10, 100, 500, 1000. No teniendo apenas diferencia en el aprendizaje entre el de 500 a 1000 partidas.</p>

<p><em>10 partidas - 100 partidas - 500 partidas - 1000 partidas</em></p>

<p><a href="https://github.com/rubenarcos2/ia-juego_hotel/raw/main/datasets/Diez_Partidas_Hotel.csv"><img src="/images/pages/repository_small_file.png" alt="Dataset 10 partidas" /></a>
<a href="https://github.com/rubenarcos2/ia-juego_hotel/raw/main/datasets/Cien_Partidas_Hotel.csv"><img src="/images/pages/repository_small_file.png" alt="Dataset 100 partidas" /></a>
<a href="https://github.com/rubenarcos2/ia-juego_hotel/raw/main/datasets/Quinientas_Partidas_Hotel_A.csv"><img src="/images/pages/repository_small_file.png" alt="Dataset 500 partidas" /></a>
<a href="https://github.com/rubenarcos2/ia-juego_hotel/raw/main/datasets/Mil_Partidas_Hotel.csv"><img src="/images/pages/repository_small_file.png" alt="Dataset 1000 partidas" /></a></p>

<h1 id="programa-de-ia">Programa de IA</h1>

<p>Tras alimentar con el dataset y realizar el EDA correspondiente, he procedido a probar los modelos predictivos de IA que podrían ser más recomendables debido a la casuística en la que nos encontramos. Tras descartar, los que dabamos valores totalmente fuera de lugar, han sido: Adaboost, Naives Bayes, Decision Tree, Random Forest, XGBoost y 3 modelos diferente de deep learning (LSTM, Neuronal básica, Neuronal profunda).</p>

<p><strong>Evaluación y resultados</strong></p>

<table>
  <tbody>
    <tr>
      <td><strong>Modelo predictivo</strong></td>
      <td><strong>Tasa acierto</strong></td>
      <td><strong>Tase error</strong> *</td>
      <td><strong>Accuracy</strong></td>
    </tr>
    <tr>
      <td>Naives Bayes (Smooth 1e-10)</td>
      <td>66%</td>
      <td>40%</td>
      <td>0.66662</td>
    </tr>
    <tr>
      <td>Naives Bayes (Smooth 1e-7)</td>
      <td>91%</td>
      <td>75%</td>
      <td>0.90729</td>
    </tr>
    <tr>
      <td>Naives Bayes (Smooth 1e-11)</td>
      <td>65%</td>
      <td>40%</td>
      <td>0.65114</td>
    </tr>
    <tr>
      <td>Adaboost</td>
      <td>2%</td>
      <td>100%</td>
      <td>0.96112</td>
    </tr>
    <tr>
      <td>Decision Tree</td>
      <td>2%</td>
      <td>63%</td>
      <td>0.96113</td>
    </tr>
    <tr>
      <td>Adaboost</td>
      <td>2%</td>
      <td>100%</td>
      <td>0.96011</td>
    </tr>
    <tr>
      <td>Adaboost</td>
      <td>2%</td>
      <td>78%</td>
      <td>0.95977</td>
    </tr>
  </tbody>
</table>

<p><em>*en los diferenetes a ‘no compra’, es decir en la elección de la propiedad</em></p>

<p>Para ver los detalles de la evaluación y el programa de IA que contiene los resultados en :</p>

<p><a href="https://colab.research.google.com/drive/10rXkRiRnq59435RtOSICPrA1T2dXyxG6"><img src="/images/pages/repository_small_colab.png" alt="Programa IA" /></a></p>

<p><strong>Jugadores vs IA</strong></p>

<p>El resultado es que gana la IA entre un 40%-47% de las veces.</p>

<p>Para ver el programa que evalua la partida de jugadores aleatorios vs IA:</p>

<p><a href="https://colab.research.google.com/drive/1c-ozdgzMSYzZD2el46knjWx0SRIi-hMC"><img src="/images/pages/repository_small_colab.png" alt="Programa Jugadores vs IA" /></a></p>

<p>Los resultado de las partidas se encuentran aquí:</p>

<p><em>10 partidas - 100 partidas</em></p>

<p><a href="https://raw.githubusercontent.com/rubenarcos2/ia-juego_hotel/main/jugador_partidas_vs_ia/Diez_Partidas_Hotel-Jugadores_vs_IA.csv"><img src="/images/pages/repository_small_file.png" alt="Dataset 10 partidas" /></a>
<a href="https://github.com/rubenarcos2/ia-juego_hotel/raw/main/jugador_partidas_vs_ia/Cien_Partidas_Hotel-Jugadores_vs_IA.csv"><img src="/images/pages/repository_small_file.png" alt="Dataset 100 partidas" /></a></p>

<h1 id="programa-de-predicción">Programa de predicción</h1>

<p>He realizado en flask el programa de predicción, importando el modelo ya entrenado con <em>pickle</em> y creado un formulario web para la introducción de los datos necesarios para la predicción.</p>

<p><a href="https://vps.rarcos.com:10446/">Aplicación web - https://vps.rarcos.com:10446/</a></p>

<hr />

<p>Si quieres ver el resultado de todo, te recomiendo visites:</p>

<p><em>Repositorio con el contenido</em></p>

<p><em>Repositorio - Generador - Prog. IA - Jugadores vs IA</em></p>

<p><a href="https://github.com/rubenarcos2/ia-juego_hotel"><img src="/images/pages/repository_small.png" alt="Repositorio" /></a>
<a href="https://colab.research.google.com/drive/1KEqghfPGeuk9u5u8_s531CCb7869Hn3u"><img src="/images/pages/repository_small_colab.png" alt="Generador de partidas" /></a>
<a href="https://colab.research.google.com/drive/10rXkRiRnq59435RtOSICPrA1T2dXyxG6"><img src="/images/pages/repository_small_colab.png" alt="Programa IA" /></a>
<a href="https://colab.research.google.com/drive/1c-ozdgzMSYzZD2el46knjWx0SRIi-hMC"><img src="/images/pages/repository_small_colab.png" alt="Programa Jugadores vs IA" /></a></p>]]></content><author><name></name></author><category term="python" /><category term="naives bayes" /><category term="ia" /><category term="colab" /><summary type="html"><![CDATA[Creación de un sistema de IA para aprendizaje de la decisión de compra para el juego del Hotel]]></summary></entry><entry><title type="html">C# + Arduino - Detector mute</title><link href="https://rarcos.com/2022/07/23/C-+-Arduino-Detector-mute/" rel="alternate" type="text/html" title="C# + Arduino - Detector mute" /><published>2022-07-23T16:33:28+02:00</published><updated>2022-07-23T16:33:28+02:00</updated><id>https://rarcos.com/2022/07/23/C#%20+%20Arduino%20-%20Detector%20mute</id><content type="html" xml:base="https://rarcos.com/2022/07/23/C-+-Arduino-Detector-mute/"><![CDATA[<h1 id="c--arduino---detector-mute-micrófono-y-webcam-en-uso">C# + Arduino - Detector mute micrófono y webcam en uso</h1>

<p>Desarrollo de una app en C# que se comunique con Arduino para la detección del micrófono, el estado muteado y la activación de la webcam.</p>

<p><img src="/images/pages/arduino_c_sharp_detect_mute.jpg" alt="app en funcionamiento" /></p>

<p><img src="/images/pages/detector_mute_cam.jpg" alt="soporte iot" /></p>

<p>El código de C#:</p>

<figure class="highlight"><pre><code class="language-c" data-lang="c"><span class="n">using</span> <span class="n">System</span><span class="p">;</span>
<span class="n">using</span> <span class="n">System</span><span class="p">.</span><span class="n">Linq</span><span class="p">;</span>
<span class="n">using</span> <span class="n">System</span><span class="p">.</span><span class="n">Windows</span><span class="p">.</span><span class="n">Forms</span><span class="p">;</span>
<span class="n">using</span> <span class="n">System</span><span class="p">.</span><span class="n">IO</span><span class="p">.</span><span class="n">Ports</span><span class="p">;</span>
<span class="n">using</span> <span class="n">NAudio</span><span class="p">.</span><span class="n">CoreAudioApi</span><span class="p">;</span>
<span class="n">using</span> <span class="n">Microsoft</span><span class="p">.</span><span class="n">Win32</span><span class="p">;</span>
<span class="n">using</span> <span class="n">System</span><span class="p">.</span><span class="n">Threading</span><span class="p">;</span>

<span class="n">namespace</span> <span class="n">ArduinoComunicacionSerie</span>
<span class="p">{</span>
    <span class="n">public</span> <span class="n">partial</span> <span class="n">class</span> <span class="n">frmMain</span> <span class="o">:</span> <span class="n">Form</span>
    <span class="p">{</span>
        <span class="n">System</span><span class="p">.</span><span class="n">IO</span><span class="p">.</span><span class="n">Ports</span><span class="p">.</span><span class="n">SerialPort</span> <span class="n">ArduinoPort</span><span class="p">;</span>
        <span class="n">public</span> <span class="n">MMDeviceCollection</span> <span class="n">devices</span><span class="p">;</span>
        <span class="n">public</span> <span class="kt">int</span> <span class="n">deviceSelected</span><span class="p">;</span>
        <span class="n">public</span> <span class="n">bool</span> <span class="n">toogleMuted</span><span class="p">;</span>
        <span class="n">public</span> <span class="n">bool</span> <span class="n">toogleCamera</span><span class="p">;</span>

        <span class="n">public</span> <span class="n">frmMain</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">InitializeComponent</span><span class="p">();</span>
            <span class="n">timerChangeStatus</span><span class="p">.</span><span class="n">Stop</span><span class="p">();</span>

            <span class="n">MMDeviceEnumerator</span> <span class="n">en</span> <span class="o">=</span> <span class="n">new</span> <span class="n">MMDeviceEnumerator</span><span class="p">();</span>
            <span class="n">devices</span> <span class="o">=</span> <span class="n">en</span><span class="p">.</span><span class="n">EnumerateAudioEndPoints</span><span class="p">(</span><span class="n">DataFlow</span><span class="p">.</span><span class="n">All</span><span class="p">,</span> <span class="n">DeviceState</span><span class="p">.</span><span class="n">Active</span><span class="p">);</span>

            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">devices</span><span class="p">.</span><span class="n">Count</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="c1">//Console.WriteLine(devices[i].ToString());</span>
                <span class="n">cmbDevices</span><span class="p">.</span><span class="n">Items</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">devices</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">ToString</span><span class="p">());</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">devices</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">ToString</span><span class="p">().</span><span class="n">Contains</span><span class="p">(</span><span class="s">"Micrófono"</span><span class="p">))</span> <span class="p">{</span> <span class="n">cmbDevices</span><span class="p">.</span><span class="n">SelectedIndex</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span> <span class="n">deviceSelected</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span> <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>

        <span class="n">private</span> <span class="kt">void</span> <span class="n">onLoadFrm</span><span class="p">(</span><span class="n">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">try</span>
            <span class="p">{</span>
                <span class="n">ArduinoPort</span> <span class="o">=</span> <span class="n">new</span> <span class="n">SerialPort</span><span class="p">();</span>
                <span class="n">ArduinoPort</span><span class="p">.</span><span class="n">PortName</span> <span class="o">=</span> <span class="s">"COM4"</span><span class="p">;</span>
                <span class="n">ArduinoPort</span><span class="p">.</span><span class="n">BaudRate</span> <span class="o">=</span> <span class="mi">9600</span><span class="p">;</span>
                <span class="n">ArduinoPort</span><span class="p">.</span><span class="n">DataReceived</span> <span class="o">+=</span> <span class="n">new</span> <span class="n">SerialDataReceivedEventHandler</span><span class="p">(</span><span class="n">arduinoReceivedSerial</span><span class="p">);</span>
                <span class="n">ArduinoPort</span><span class="p">.</span><span class="n">Open</span><span class="p">();</span>
                <span class="n">timerChangeStatus</span><span class="p">.</span><span class="n">Start</span><span class="p">();</span>
                <span class="n">chkToogleWebcam</span><span class="p">.</span><span class="n">Checked</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="n">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">ex</span><span class="p">.</span><span class="n">Message</span><span class="p">);</span>
                <span class="n">MessageBox</span><span class="p">.</span><span class="n">Show</span><span class="p">(</span><span class="s">"Conecte Arduino e inicie de nuevo la aplicación"</span><span class="p">,</span> <span class="s">"No está conectado Arduino"</span><span class="p">);</span>
                <span class="n">timerChangeStatus</span><span class="p">.</span><span class="n">Stop</span><span class="p">();</span>
                <span class="n">this</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
            <span class="p">}</span>

        <span class="p">}</span>

        <span class="n">private</span> <span class="kt">void</span> <span class="n">arduinoReceivedSerial</span><span class="p">(</span><span class="n">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">SerialDataReceivedEventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">EventType</span> <span class="o">==</span> <span class="n">SerialData</span><span class="p">.</span><span class="n">Chars</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="kt">int</span> <span class="n">input</span> <span class="o">=</span> <span class="n">ArduinoPort</span><span class="p">.</span><span class="n">ReadChar</span><span class="p">();</span>
                <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">input</span><span class="p">);</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">input</span><span class="p">.</span><span class="n">Equals</span><span class="p">(</span><span class="sc">'z'</span><span class="p">))</span>
                <span class="p">{</span>
                    <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">"***** CONNECTED *****"</span><span class="p">);</span>
                <span class="p">}</span>

                <span class="k">if</span> <span class="p">(</span><span class="n">input</span><span class="p">.</span><span class="n">Equals</span><span class="p">(</span><span class="sc">'g'</span><span class="p">))</span>
                <span class="p">{</span>
                    <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">"***** BUTTON PRESSED MICRO *****"</span><span class="p">);</span>
                    <span class="n">MMDeviceEnumerator</span> <span class="n">en</span> <span class="o">=</span> <span class="n">new</span> <span class="n">MMDeviceEnumerator</span><span class="p">();</span>
                    <span class="n">var</span> <span class="n">devices</span> <span class="o">=</span> <span class="n">en</span><span class="p">.</span><span class="n">EnumerateAudioEndPoints</span><span class="p">(</span><span class="n">DataFlow</span><span class="p">.</span><span class="n">All</span><span class="p">,</span> <span class="n">DeviceState</span><span class="p">.</span><span class="n">Active</span><span class="p">);</span>
                    <span class="n">toogleMuted</span> <span class="o">=</span> <span class="o">!</span><span class="n">toogleMuted</span><span class="p">;</span>
                    <span class="n">devices</span><span class="p">[</span><span class="n">deviceSelected</span><span class="p">].</span><span class="n">AudioSessionManager</span><span class="p">.</span><span class="n">AudioSessionControl</span><span class="p">.</span><span class="n">SimpleAudioVolume</span><span class="p">.</span><span class="n">Mute</span> <span class="o">=</span> <span class="n">toogleMuted</span><span class="p">;</span>
                <span class="p">}</span>
                <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">input</span><span class="p">.</span><span class="n">Equals</span><span class="p">(</span><span class="sc">'h'</span><span class="p">))</span>
                <span class="p">{</span>
                    <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">"***** BUTTON PRESSED CAMERA *****"</span><span class="p">);</span>
                    <span class="n">RegistryKey</span> <span class="n">key</span> <span class="o">=</span> <span class="n">Registry</span><span class="p">.</span><span class="n">CurrentUser</span><span class="p">.</span><span class="n">OpenSubKey</span><span class="p">(</span><span class="err">@</span><span class="s">"Software\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\webcam"</span><span class="p">,</span> <span class="nb">true</span><span class="p">);</span>
                    <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">key</span><span class="p">);</span>
                    <span class="n">toogleCamera</span> <span class="o">=</span> <span class="o">!</span><span class="n">toogleCamera</span><span class="p">;</span>
                    <span class="k">if</span> <span class="p">(</span><span class="n">toogleCamera</span><span class="p">)</span>
                    <span class="p">{</span>
                        <span class="c1">//adding/editing a value </span>
                        <span class="n">key</span><span class="p">.</span><span class="n">SetValue</span><span class="p">(</span><span class="s">"Value"</span><span class="p">,</span> <span class="s">"Allow"</span><span class="p">);</span>
                    <span class="p">}</span>
                    <span class="k">else</span>
                    <span class="p">{</span>
                        <span class="n">key</span><span class="p">.</span><span class="n">SetValue</span><span class="p">(</span><span class="s">"Value"</span><span class="p">,</span> <span class="s">"Deny"</span><span class="p">);</span>
                    <span class="p">}</span>
                    <span class="n">key</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>

        <span class="n">private</span> <span class="kt">void</span> <span class="n">chkToogleMute_CheckedChanged</span><span class="p">(</span><span class="n">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">MMDeviceEnumerator</span> <span class="n">en</span> <span class="o">=</span> <span class="n">new</span> <span class="n">MMDeviceEnumerator</span><span class="p">();</span>
            <span class="n">var</span> <span class="n">devices</span> <span class="o">=</span> <span class="n">en</span><span class="p">.</span><span class="n">EnumerateAudioEndPoints</span><span class="p">(</span><span class="n">DataFlow</span><span class="p">.</span><span class="n">All</span><span class="p">,</span> <span class="n">DeviceState</span><span class="p">.</span><span class="n">Active</span><span class="p">);</span>
            <span class="n">toogleMuted</span> <span class="o">=</span> <span class="n">chkToogleMute</span><span class="p">.</span><span class="n">Checked</span><span class="p">;</span>
            <span class="n">devices</span><span class="p">[</span><span class="n">cmbDevices</span><span class="p">.</span><span class="n">SelectedIndex</span><span class="p">].</span><span class="n">AudioSessionManager</span><span class="p">.</span><span class="n">AudioSessionControl</span><span class="p">.</span><span class="n">SimpleAudioVolume</span><span class="p">.</span><span class="n">Mute</span> <span class="o">=</span> <span class="n">toogleMuted</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="n">private</span> <span class="kt">void</span> <span class="n">chkToogleWebcam_CheckedChanged</span><span class="p">(</span><span class="n">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">toogleCamera</span> <span class="o">=</span> <span class="n">chkToogleWebcam</span><span class="p">.</span><span class="n">Checked</span><span class="p">;</span>

            <span class="n">RegistryKey</span> <span class="n">key</span> <span class="o">=</span> <span class="n">Registry</span><span class="p">.</span><span class="n">CurrentUser</span><span class="p">.</span><span class="n">OpenSubKey</span><span class="p">(</span><span class="err">@</span><span class="s">"Software\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\webcam"</span><span class="p">,</span> <span class="nb">true</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">key</span><span class="p">);</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">chkToogleWebcam</span><span class="p">.</span><span class="n">Checked</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="c1">//adding/editing a value </span>
                <span class="n">key</span><span class="p">.</span><span class="n">SetValue</span><span class="p">(</span><span class="s">"Value"</span><span class="p">,</span> <span class="s">"Allow"</span><span class="p">);</span>
            <span class="p">}</span>
            <span class="k">else</span>
            <span class="p">{</span>
                <span class="n">key</span><span class="p">.</span><span class="n">SetValue</span><span class="p">(</span><span class="s">"Value"</span><span class="p">,</span> <span class="s">"Deny"</span><span class="p">);</span>
            <span class="p">}</span>
            <span class="n">key</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
        <span class="p">}</span>

        <span class="n">private</span> <span class="kt">void</span> <span class="n">frmMain_FormClosing</span><span class="p">(</span><span class="n">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">FormClosingEventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">ArduinoPort</span><span class="p">.</span><span class="n">IsOpen</span><span class="p">)</span> <span class="n">ArduinoPort</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
        <span class="p">}</span>

        <span class="n">private</span> <span class="kt">void</span> <span class="n">timerChangeStatus_Tick</span><span class="p">(</span><span class="n">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">chkToogleMute</span><span class="p">.</span><span class="n">Checked</span> <span class="o">=</span> <span class="n">toogleMuted</span><span class="p">;</span>
            <span class="n">chkToogleWebcam</span><span class="p">.</span><span class="n">Checked</span> <span class="o">=</span> <span class="n">toogleCamera</span><span class="p">;</span>

            <span class="n">try</span>
            <span class="p">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">cmbDevices</span><span class="p">.</span><span class="n">SelectedItem</span> <span class="o">!=</span> <span class="n">null</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">"Mute      : "</span> <span class="o">+</span> <span class="n">devices</span><span class="p">[</span><span class="n">cmbDevices</span><span class="p">.</span><span class="n">SelectedIndex</span><span class="p">].</span><span class="n">AudioSessionManager</span><span class="p">.</span><span class="n">AudioSessionControl</span><span class="p">.</span><span class="n">SimpleAudioVolume</span><span class="p">.</span><span class="n">Mute</span><span class="p">);</span>
                    <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">"Webcam    : "</span> <span class="o">+</span> <span class="n">IsWebCamInUse</span><span class="p">());</span>
                    <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">"Microphone: "</span> <span class="o">+</span> <span class="n">IsMicrophoneInUse</span><span class="p">());</span>

                    <span class="k">if</span> <span class="p">(</span><span class="n">IsWebCamInUse</span><span class="p">())</span>
                    <span class="p">{</span>
                        <span class="n">chkCamera</span><span class="p">.</span><span class="n">Checked</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
                        <span class="n">ArduinoPort</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">"e"</span><span class="p">);</span>
                    <span class="p">}</span>
                    <span class="k">else</span>
                    <span class="p">{</span>
                        <span class="n">chkCamera</span><span class="p">.</span><span class="n">Checked</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
                        <span class="n">ArduinoPort</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">"f"</span><span class="p">);</span>
                    <span class="p">}</span>

                    <span class="k">if</span> <span class="p">(</span><span class="n">IsMicrophoneInUse</span><span class="p">())</span>
                    <span class="p">{</span>
                        <span class="n">chkMicrophone</span><span class="p">.</span><span class="n">Checked</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
                        <span class="n">ArduinoPort</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">"a"</span><span class="p">);</span>
                    <span class="p">}</span>
                    <span class="k">else</span>
                    <span class="p">{</span>
                        <span class="n">chkMicrophone</span><span class="p">.</span><span class="n">Checked</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
                        <span class="n">ArduinoPort</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">"b"</span><span class="p">);</span>
                    <span class="p">}</span>

                    <span class="k">if</span> <span class="p">(</span><span class="n">devices</span><span class="p">[</span><span class="n">cmbDevices</span><span class="p">.</span><span class="n">SelectedIndex</span><span class="p">].</span><span class="n">AudioSessionManager</span><span class="p">.</span><span class="n">AudioSessionControl</span><span class="p">.</span><span class="n">SimpleAudioVolume</span><span class="p">.</span><span class="n">Mute</span><span class="p">)</span>
                    <span class="p">{</span>
                        <span class="n">chkMicroMute</span><span class="p">.</span><span class="n">Checked</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
                        <span class="n">ArduinoPort</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">"c"</span><span class="p">);</span>
                    <span class="p">}</span>
                    <span class="k">else</span>
                    <span class="p">{</span>
                        <span class="n">chkMicroMute</span><span class="p">.</span><span class="n">Checked</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
                        <span class="n">ArduinoPort</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">"d"</span><span class="p">);</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span><span class="n">catch</span><span class="p">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">timerChangeStatus</span><span class="p">.</span><span class="n">Stop</span><span class="p">();</span>
                <span class="n">MessageBox</span><span class="p">.</span><span class="n">Show</span><span class="p">(</span><span class="s">"Se ha perdido la conexión con Arduino</span><span class="se">\n</span><span class="s">Vuelve a abrir la aplicación una vez esté solucionado."</span><span class="p">,</span> <span class="s">"Comprueba la conexión con Arduino"</span><span class="p">);</span>
                <span class="n">this</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
            <span class="p">}</span>


        <span class="p">}</span>

        <span class="n">private</span> <span class="n">bool</span> <span class="n">IsWebCamInUse</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">using</span> <span class="p">(</span><span class="n">var</span> <span class="n">key</span> <span class="o">=</span> <span class="n">Registry</span><span class="p">.</span><span class="n">CurrentUser</span><span class="p">.</span><span class="n">OpenSubKey</span><span class="p">(</span><span class="err">@</span><span class="s">"SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\webcam\NonPackaged"</span><span class="p">))</span>
            <span class="p">{</span>
                <span class="n">foreach</span> <span class="p">(</span><span class="n">var</span> <span class="n">subKeyName</span> <span class="n">in</span> <span class="n">key</span><span class="p">.</span><span class="n">GetSubKeyNames</span><span class="p">())</span>
                <span class="p">{</span>
                    <span class="n">using</span> <span class="p">(</span><span class="n">var</span> <span class="n">subKey</span> <span class="o">=</span> <span class="n">key</span><span class="p">.</span><span class="n">OpenSubKey</span><span class="p">(</span><span class="n">subKeyName</span><span class="p">))</span>
                    <span class="p">{</span>
                        <span class="k">if</span> <span class="p">(</span><span class="n">subKey</span><span class="p">.</span><span class="n">GetValueNames</span><span class="p">().</span><span class="n">Contains</span><span class="p">(</span><span class="s">"LastUsedTimeStop"</span><span class="p">))</span>
                        <span class="p">{</span>
                            <span class="n">var</span> <span class="n">endTime</span> <span class="o">=</span> <span class="n">subKey</span><span class="p">.</span><span class="n">GetValue</span><span class="p">(</span><span class="s">"LastUsedTimeStop"</span><span class="p">)</span> <span class="n">is</span> <span class="kt">long</span> <span class="o">?</span> <span class="p">(</span><span class="kt">long</span><span class="p">)</span><span class="n">subKey</span><span class="p">.</span><span class="n">GetValue</span><span class="p">(</span><span class="s">"LastUsedTimeStop"</span><span class="p">)</span> <span class="o">:</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
                            <span class="k">if</span> <span class="p">(</span><span class="n">endTime</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">)</span>
                            <span class="p">{</span>
                                <span class="k">return</span> <span class="nb">true</span><span class="p">;</span>
                            <span class="p">}</span>
                        <span class="p">}</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>

            <span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="n">private</span> <span class="n">bool</span> <span class="n">IsMicrophoneInUse</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">using</span> <span class="p">(</span><span class="n">var</span> <span class="n">key</span> <span class="o">=</span> <span class="n">Registry</span><span class="p">.</span><span class="n">CurrentUser</span><span class="p">.</span><span class="n">OpenSubKey</span><span class="p">(</span><span class="err">@</span><span class="s">"SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\microphone\NonPackaged"</span><span class="p">))</span>
            <span class="p">{</span>
                <span class="n">foreach</span> <span class="p">(</span><span class="n">var</span> <span class="n">subKeyName</span> <span class="n">in</span> <span class="n">key</span><span class="p">.</span><span class="n">GetSubKeyNames</span><span class="p">())</span>
                <span class="p">{</span>
                    <span class="n">using</span> <span class="p">(</span><span class="n">var</span> <span class="n">subKey</span> <span class="o">=</span> <span class="n">key</span><span class="p">.</span><span class="n">OpenSubKey</span><span class="p">(</span><span class="n">subKeyName</span><span class="p">))</span>
                    <span class="p">{</span>
                        <span class="k">if</span> <span class="p">(</span><span class="n">subKey</span><span class="p">.</span><span class="n">GetValueNames</span><span class="p">().</span><span class="n">Contains</span><span class="p">(</span><span class="s">"LastUsedTimeStop"</span><span class="p">))</span>
                        <span class="p">{</span>
                            <span class="n">var</span> <span class="n">endTime</span> <span class="o">=</span> <span class="n">subKey</span><span class="p">.</span><span class="n">GetValue</span><span class="p">(</span><span class="s">"LastUsedTimeStop"</span><span class="p">)</span> <span class="n">is</span> <span class="kt">long</span> <span class="o">?</span> <span class="p">(</span><span class="kt">long</span><span class="p">)</span><span class="n">subKey</span><span class="p">.</span><span class="n">GetValue</span><span class="p">(</span><span class="s">"LastUsedTimeStop"</span><span class="p">)</span> <span class="o">:</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
                            <span class="k">if</span> <span class="p">(</span><span class="n">endTime</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">)</span>
                            <span class="p">{</span>
                                <span class="k">return</span> <span class="nb">true</span><span class="p">;</span>
                            <span class="p">}</span>
                        <span class="p">}</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>

            <span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
        <span class="p">}</span>

    <span class="p">}</span>
<span class="p">}</span></code></pre></figure>

<p>El código de Arduino:</p>

<figure class="highlight"><pre><code class="language-c" data-lang="c"><span class="k">const</span> <span class="kt">int</span> <span class="n">pinLEDMicUso</span>  <span class="o">=</span> <span class="mi">16</span><span class="p">;</span>
<span class="k">const</span> <span class="kt">int</span> <span class="n">pinLEDMicMute</span> <span class="o">=</span> <span class="mi">12</span><span class="p">;</span>
<span class="k">const</span> <span class="kt">int</span> <span class="n">pinLEDCamUso</span>  <span class="o">=</span> <span class="mi">14</span><span class="p">;</span>
<span class="k">const</span> <span class="kt">int</span> <span class="n">pinBTNMicMute</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="k">const</span> <span class="kt">int</span> <span class="n">pinBTNCamMute</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>

<span class="kt">int</span> <span class="n">btnMicMute</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">btnCamMute</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

<span class="kt">void</span> <span class="nf">setup</span><span class="p">()</span>
<span class="p">{</span>
  <span class="n">Serial</span><span class="p">.</span><span class="n">begin</span><span class="p">(</span><span class="mi">9600</span><span class="p">);</span>
  <span class="n">pinMode</span><span class="p">(</span><span class="n">pinLEDMicUso</span><span class="p">,</span> <span class="n">OUTPUT</span><span class="p">);</span>
  <span class="n">pinMode</span><span class="p">(</span><span class="n">pinLEDMicMute</span><span class="p">,</span> <span class="n">OUTPUT</span><span class="p">);</span>
  <span class="n">pinMode</span><span class="p">(</span><span class="n">pinLEDCamUso</span><span class="p">,</span> <span class="n">OUTPUT</span><span class="p">);</span>
  <span class="n">pinMode</span><span class="p">(</span><span class="n">pinBTNMicMute</span><span class="p">,</span> <span class="n">INPUT</span><span class="p">);</span>
  <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="sc">'z'</span><span class="p">);</span> <span class="c1">//Conectado</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">loop</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">if</span> <span class="p">(</span><span class="n">Serial</span><span class="p">.</span><span class="n">available</span><span class="p">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
  <span class="p">{</span>
    <span class="kt">int</span> <span class="n">option</span> <span class="o">=</span> <span class="n">Serial</span><span class="p">.</span><span class="n">read</span><span class="p">();</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">option</span> <span class="o">==</span> <span class="sc">'a'</span><span class="p">)</span>
    <span class="p">{</span>
      <span class="n">digitalWrite</span><span class="p">(</span><span class="n">pinLEDMicUso</span><span class="p">,</span> <span class="n">HIGH</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">option</span> <span class="o">==</span> <span class="sc">'b'</span><span class="p">)</span>
    <span class="p">{</span>
      <span class="n">digitalWrite</span><span class="p">(</span><span class="n">pinLEDMicUso</span><span class="p">,</span> <span class="n">LOW</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">option</span> <span class="o">==</span> <span class="sc">'c'</span><span class="p">)</span>
    <span class="p">{</span>
      <span class="n">digitalWrite</span><span class="p">(</span><span class="n">pinLEDMicMute</span><span class="p">,</span> <span class="n">HIGH</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">option</span> <span class="o">==</span> <span class="sc">'d'</span><span class="p">)</span>
    <span class="p">{</span>
      <span class="n">digitalWrite</span><span class="p">(</span><span class="n">pinLEDMicMute</span><span class="p">,</span> <span class="n">LOW</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">option</span> <span class="o">==</span> <span class="sc">'e'</span><span class="p">)</span>
    <span class="p">{</span>
      <span class="n">digitalWrite</span><span class="p">(</span><span class="n">pinLEDCamUso</span><span class="p">,</span> <span class="n">HIGH</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">option</span> <span class="o">==</span> <span class="sc">'f'</span><span class="p">)</span>
    <span class="p">{</span>
      <span class="n">digitalWrite</span><span class="p">(</span><span class="n">pinLEDCamUso</span><span class="p">,</span> <span class="n">LOW</span><span class="p">);</span>
    <span class="p">}</span>
  <span class="p">}</span>

  <span class="n">btnMicMute</span> <span class="o">=</span> <span class="n">digitalRead</span><span class="p">(</span><span class="n">pinBTNMicMute</span><span class="p">);</span>
  <span class="k">if</span> <span class="p">(</span><span class="n">btnMicMute</span> <span class="o">==</span> <span class="n">LOW</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"g"</span><span class="p">);</span>
    <span class="n">delay</span><span class="p">(</span><span class="mi">200</span><span class="p">);</span>
  <span class="p">}</span>

  <span class="n">btnCamMute</span> <span class="o">=</span> <span class="n">digitalRead</span><span class="p">(</span><span class="n">pinBTNCamMute</span><span class="p">);</span>
  <span class="k">if</span> <span class="p">(</span><span class="n">btnCamMute</span> <span class="o">==</span> <span class="n">LOW</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"h"</span><span class="p">);</span>
    <span class="n">delay</span><span class="p">(</span><span class="mi">200</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">}</span></code></pre></figure>

<hr />

<p><em>Repositorio con el contenido</em></p>

<p><a href="https://github.com/rubenarcos2/c_sharp-arduino_detect_mute"><img src="/images/pages/repository_small.png" alt="Repositorio" /></a>
<a href="https://github.com/rubenarcos2/c_sharp-arduino_detect_mute/tree/main/ArduinoComunicacionSerie/bin/Debug"><img src="/images/pages/icono_archivo_exe1-100x100.png" alt="Ejecutable" /></a></p>

<hr />

<p><strong>Fuentes</strong></p>

<p><a href="https://codingvision.net/c-edit-registry-keys-or-values">https://codingvision.net/c-edit-registry-keys-or-values</a>
<a href="https://superuser.com/questions/1346676/disabling-camera-via-regedit">https://superuser.com/questions/1346676/disabling-camera-via-regedit</a></p>]]></content><author><name></name></author><category term="C#" /><category term="arduino" /><category term="iot" /><summary type="html"><![CDATA[Desarrollo de una app en C# que se comunique con Arduino para la detección del micrófono, el estado muteado y la activación de la webcam]]></summary></entry><entry><title type="html">JS Vanilla MVC - Spring API rest</title><link href="https://rarcos.com/2022/07/23/Vanilla-JS-MVC-Spring-API-rest/" rel="alternate" type="text/html" title="JS Vanilla MVC - Spring API rest" /><published>2022-07-23T16:33:28+02:00</published><updated>2022-07-23T16:33:28+02:00</updated><id>https://rarcos.com/2022/07/23/Vanilla%20JS%20MVC%20-%20Spring%20API%20rest</id><content type="html" xml:base="https://rarcos.com/2022/07/23/Vanilla-JS-MVC-Spring-API-rest/"><![CDATA[<h1 id="js-vanilla-mvc---spring-api-rest">JS Vanilla MVC - Spring API rest</h1>

<p>Desarrollo de una app en JS Vanilla con MVC para consumir una api rest en Spring Boot.</p>

<p>Esta es la demostración de la aplicación que he realizado (click <a href="/WorkspaceWeb/JSconsumeAPI">aquí</a> o en la imagen):</p>

<p><a href="/WorkspaceWeb/JSconsumeAPI"><img src="/images/pages/api_rest.png" alt="Ir a ver la app en funcionamiento" /></a></p>

<hr />

<p><em>Repositorio con el contenido</em></p>

<p><a href="https://github.com/rubenarcos2/spring-boot-api_rest"><img src="/images/pages/repository_small.png" alt="Repositorio" /></a>
Servidor
<a href="https://github.com/rubenarcos2/js-vanilla-api-client"><img src="/images/pages/repository_small.png" alt="Repositorio" /></a>
Cliente</p>

<hr />

<p><strong>Fuentes:</strong></p>]]></content><author><name></name></author><category term="spring" /><category term="MVC" /><category term="js" /><category term="vanilla js" /><category term="api" /><summary type="html"><![CDATA[Desarrollo de una app en JS Vanilla con MVC para consumir una api rest en Spring Boot]]></summary></entry><entry><title type="html">Laravel 9 - PHP 8 y MVC</title><link href="https://rarcos.com/2022/07/17/Laravel-9-MVC/" rel="alternate" type="text/html" title="Laravel 9 - PHP 8 y MVC" /><published>2022-07-17T16:33:28+02:00</published><updated>2022-07-17T16:33:28+02:00</updated><id>https://rarcos.com/2022/07/17/Laravel%209%20-%20MVC</id><content type="html" xml:base="https://rarcos.com/2022/07/17/Laravel-9-MVC/"><![CDATA[<h1 id="laravel-9-php-8-y-mvc">Laravel 9, PHP 8 y MVC</h1>

<p>Desarrollo de una aplicaciones web usando Laravel 9 y PHP 8:</p>

<p>Esta es la demostración de la aplicación que he realizado (click <a href="https://vps.rarcos.com:10440">aquí</a> o en la imagen):</p>

<p>Los credenciales son:</p>
<ul>
  <li>usuario: admin@admin.com</li>
  <li>contraseña: administrador</li>
</ul>

<p><a href="https://vps.rarcos.com:10440"><img src="/images/pages/laravel-inmobiliaria.png" alt="Ir a ver la app en funcionamiento" /></a></p>

<h2 id="creación-del-proyecto">Creación del proyecto</h2>
<p>Para la creación del proyecto primero tenemos que tener instalado composer y php. También tenerlos enlazados en el IDE para que la terminal reconozca los comandos. 
Para ver cómo enlazar php con vscode click <a href="https://code.visualstudio.com/docs/languages/php">aquí</a>.</p>

<p>Una vez tenemos todo lo necesario, creamos el proyecto con el siguiente comando:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">composer create-project laravel/laravel nombre_app
<span class="nb">cd </span>nombre_app
php artisan serve</code></pre></figure>

<p>Y se levantará un servidor en <a href="http://127.0.0.1:8000/">http://127.0.0.1:8000/</a> con el proyecto (esqueleto solamente) y la página de bienvenida.
Para más información y otros tipos de instalaciones ver <a href="https://laravel.com/docs/9.x/installation">aquí</a> en la documentación oficial.</p>

<h2 id="creación-de-los-ficheros-migration">Creación de los ficheros migration</h2>
<p>Para que laravel pueda crear la tabla en la DB, tiene unos ficheros que se encargan de crearlas, destruirlas, actualizarlas o modificarlas según vamos necesitando a lo largo del proyecto.</p>

<p>Ahora vamos a crear un fichero de migrations para la tabla <em>Property</em> que vamos a crear.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">php artisan make:migration Property</code></pre></figure>

<p>Este una vez creado lo podremos comprobar en la ruta: database\migrations\fecha_y_hora_creacion_property.php</p>

<p>Ahora vamos a completar el contenido del fichero de migración con los campos de nuestra tabla:</p>

<figure class="highlight"><pre><code class="language-php" data-lang="php"><span class="cp">&lt;?php</span>

<span class="kn">use</span> <span class="nc">Illuminate\Database\Migrations\Migration</span><span class="p">;</span>
<span class="kn">use</span> <span class="nc">Illuminate\Database\Schema\Blueprint</span><span class="p">;</span>
<span class="kn">use</span> <span class="nc">Illuminate\Support\Facades\Schema</span><span class="p">;</span>

<span class="k">return</span> <span class="k">new</span> <span class="kd">class</span> <span class="kd">extends</span> <span class="nc">Migration</span>
<span class="p">{</span>
    <span class="cd">/**
     * Run the migrations.
     *
     * @return void
     */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">up</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nc">Schema</span><span class="o">::</span><span class="nf">create</span><span class="p">(</span><span class="s1">'properties'</span><span class="p">,</span> <span class="k">function</span> <span class="p">(</span><span class="kt">Blueprint</span> <span class="nv">$table</span><span class="p">)</span> <span class="p">{</span>
            <span class="nv">$table</span><span class="o">-&gt;</span><span class="nf">id</span><span class="p">();</span>
            <span class="nv">$table</span><span class="o">-&gt;</span><span class="nf">string</span><span class="p">(</span><span class="s1">'name'</span><span class="p">);</span>
            <span class="nv">$table</span><span class="o">-&gt;</span><span class="nf">string</span><span class="p">(</span><span class="s1">'shortDescription'</span><span class="p">);</span>
            <span class="nv">$table</span><span class="o">-&gt;</span><span class="nf">string</span><span class="p">(</span><span class="s1">'phone'</span><span class="p">);</span>
            <span class="nv">$table</span><span class="o">-&gt;</span><span class="nf">timestamps</span><span class="p">();</span>
        <span class="p">});</span>
    <span class="p">}</span>

    <span class="cd">/**
     * Reverse the migrations.
     *
     * @return void
     */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">down</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nc">Schema</span><span class="o">::</span><span class="nf">dropIfExists</span><span class="p">(</span><span class="s1">'properties'</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">};</span></code></pre></figure>

<p>Como se puede comprobar tiene un método up (para la creación) y un down (para el borrado) de la tabla. Simplemente se trata de añadir el nombre de la tabla en ambos métodos, y en el up los campos de la tabla que queremos que tenga nuestro modelo.</p>

<h3 id="añadir-segunda-tabla-con-foreign-key">Añadir segunda tabla con foreign key</h3>
<p>A continuación, vamos a crear un fichero de migrations para el segundo modelo de <em>House</em> que hemos creado.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">php artisan make:migration House</code></pre></figure>

<p>Este una vez creado lo podremos comprobar en la ruta: database\migrations\fecha_y_hora_creacion_house.php</p>

<p>Ahora vamos a completar el contenido del fichero de migración con los campos de nuestra tabla:</p>

<figure class="highlight"><pre><code class="language-php" data-lang="php"><span class="cp">&lt;?php</span>

<span class="kn">use</span> <span class="nc">Illuminate\Database\Migrations\Migration</span><span class="p">;</span>
<span class="kn">use</span> <span class="nc">Illuminate\Database\Schema\Blueprint</span><span class="p">;</span>
<span class="kn">use</span> <span class="nc">Illuminate\Support\Facades\Schema</span><span class="p">;</span>

<span class="k">return</span> <span class="k">new</span> <span class="kd">class</span> <span class="kd">extends</span> <span class="nc">Migration</span>
<span class="p">{</span>
    <span class="cd">/**
     * Run the migrations.
     *
     * @return void
     */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">up</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nc">Schema</span><span class="o">::</span><span class="nf">create</span><span class="p">(</span><span class="s1">'houses'</span><span class="p">,</span> <span class="k">function</span> <span class="p">(</span><span class="kt">Blueprint</span> <span class="nv">$table</span><span class="p">)</span> <span class="p">{</span>
            <span class="nv">$table</span><span class="o">-&gt;</span><span class="nf">id</span><span class="p">();</span>
            <span class="nv">$table</span><span class="o">-&gt;</span><span class="nf">string</span><span class="p">(</span><span class="s1">'shortDescription'</span><span class="p">);</span>
            <span class="nv">$table</span><span class="o">-&gt;</span><span class="nf">string</span><span class="p">(</span><span class="s1">'phone'</span><span class="p">);</span>
            <span class="nv">$table</span><span class="o">-&gt;</span><span class="nf">string</span><span class="p">(</span><span class="s1">'photo'</span><span class="p">);</span>
            <span class="nv">$table</span><span class="o">-&gt;</span><span class="nf">foreign</span><span class="p">(</span><span class="s1">'property_id'</span><span class="p">)</span>
                <span class="o">-&gt;</span><span class="nf">references</span><span class="p">(</span><span class="s1">'id'</span><span class="p">)</span><span class="o">-&gt;</span><span class="nf">on</span><span class="p">(</span><span class="s1">'properties'</span><span class="p">)</span><span class="o">-&gt;</span><span class="nf">onUpdate</span><span class="p">(</span><span class="s1">'cascade'</span><span class="p">);</span>
            <span class="nv">$table</span><span class="o">-&gt;</span><span class="nf">timestamps</span><span class="p">();</span>
        <span class="p">});</span>
    <span class="p">}</span>

    <span class="cd">/**
     * Reverse the migrations.
     *
     * @return void
     */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">down</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nc">Schema</span><span class="o">::</span><span class="nf">dropIfExists</span><span class="p">(</span><span class="s1">'houses'</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">};</span></code></pre></figure>

<p>Como se puede comprobar tiene una clave foránea añadida para la columna <em>property_id</em> que apunta a la tabla <em>properties</em> del campo <em>id</em>.</p>

<h2 id="creación-de-los-modelos">Creación de los modelos</h2>
<p>Laravel está compuesto por varios componentes y entre ellos tenemos un ORM llamado Eloquent, que nos va a realizar todas las gestiones de la base de datos, en nuestro caso PostgreSQL.</p>

<p>Vamos a crear un modelo que almacene nuestras viviendas (recordar que el nombre debe estar siempre en singular, ya que laravel crea las tablas en plural automáticamente) y para ellos ejecutaremos el comando:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">php artisan make:model House</code></pre></figure>

<p>Este una vez creado lo podremos comprobar en la ruta: app\Models\House.php</p>

<p>Ahora vamos a completar el contenido del modelo con los campos que dimos en nuestra tabla:</p>

<figure class="highlight"><pre><code class="language-php" data-lang="php"><span class="cp">&lt;?php</span>

<span class="kn">namespace</span> <span class="nn">App\Models</span><span class="p">;</span>

<span class="kn">use</span> <span class="nc">Illuminate\Database\Eloquent\Factories\HasFactory</span><span class="p">;</span>
<span class="kn">use</span> <span class="nc">Illuminate\Database\Eloquent\Model</span><span class="p">;</span>

<span class="kd">class</span> <span class="nc">House</span> <span class="kd">extends</span> <span class="nc">Model</span>
<span class="p">{</span>
    <span class="kn">use</span> <span class="nc">HasFactory</span><span class="p">;</span>

    <span class="k">protected</span> <span class="nv">$fillable</span> <span class="o">=</span> <span class="p">[</span>
        <span class="s1">'shortDescription'</span><span class="p">,</span>
        <span class="s1">'phone'</span><span class="p">,</span>
        <span class="s1">'photo'</span><span class="p">,</span>
        <span class="s1">'property_id'</span>
    <span class="p">];</span>
<span class="p">}</span></code></pre></figure>

<p>Haremos los mismo con el modelo <em>Property</em>:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">php artisan make:model Property</code></pre></figure>

<p>Este una vez creado lo podremos comprobar en la ruta: app\Models\Property.php</p>

<p>Ahora vamos a completar el contenido del modelo con los campos que dimos en nuestra tabla:</p>

<figure class="highlight"><pre><code class="language-php" data-lang="php"><span class="cp">&lt;?php</span>

<span class="kn">namespace</span> <span class="nn">App\Models</span><span class="p">;</span>

<span class="kn">use</span> <span class="nc">Illuminate\Database\Eloquent\Factories\HasFactory</span><span class="p">;</span>
<span class="kn">use</span> <span class="nc">Illuminate\Database\Eloquent\Model</span><span class="p">;</span>

<span class="kd">class</span> <span class="nc">Property</span> <span class="kd">extends</span> <span class="nc">Model</span>
<span class="p">{</span>
    <span class="kn">use</span> <span class="nc">HasFactory</span><span class="p">;</span>

    <span class="k">protected</span> <span class="nv">$fillable</span> <span class="o">=</span> <span class="p">[</span>
        <span class="s1">'name'</span><span class="p">,</span>
        <span class="s1">'shortDescription'</span><span class="p">,</span>
        <span class="s1">'phone'</span><span class="p">,</span>
    <span class="p">];</span>
<span class="p">}</span></code></pre></figure>

<h2 id="realización-de-la-migración-a-la-db">Realización de la migración a la DB</h2>
<p>Primero, vamos a configurar los parámetros de conexión con nuestra DB. Estos se encuentra en el fichero de configuración <em>.env</em> en la raíz del proyecto. Concretamente cambiaremos la parte referente a la DB:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">DB_CONNECTION</span><span class="o">=</span>pgsql
<span class="nv">DB_HOST</span><span class="o">=</span>127.0.0.1
<span class="nv">DB_PORT</span><span class="o">=</span>5432
<span class="nv">DB_DATABASE</span><span class="o">=</span>laravel
<span class="nv">DB_USERNAME</span><span class="o">=</span>postgres
<span class="nv">DB_PASSWORD</span><span class="o">=</span>postgres</code></pre></figure>

<p>Posteriormente, migramos todos los cambios a la DB con el comando:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">php artisan make:migration</code></pre></figure>

<h2 id="creación-del-controlador">Creación del controlador</h2>
<p>Ahora vamos a crear un controlador para cada modelo, estos tendrán las operaciones básicas de un CRUD que es lo que vamos a necesitar.</p>

<p>Para crear el controlador del modelo <em>House</em> ejecutamos:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">php artisan make:controller HouseController</code></pre></figure>

<p>Y el contenido del controlador sería el siguiente:</p>

<figure class="highlight"><pre><code class="language-php" data-lang="php"><span class="cp">&lt;?php</span>

<span class="kn">namespace</span> <span class="nn">App\Http\Controllers</span><span class="p">;</span>

<span class="kn">use</span> <span class="nc">App\Models\Property</span><span class="p">;</span>
<span class="kn">use</span> <span class="nc">Illuminate\Http\Request</span><span class="p">;</span>
<span class="kn">use</span> <span class="nc">App\Models\House</span><span class="p">;</span>

<span class="kd">class</span> <span class="nc">HouseController</span> <span class="kd">extends</span> <span class="nc">Controller</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">index</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$houses</span> <span class="o">=</span> <span class="nc">House</span><span class="o">::</span><span class="nf">all</span><span class="p">();</span>
        <span class="nv">$properties</span> <span class="o">=</span> <span class="nc">Property</span><span class="o">::</span><span class="nf">all</span><span class="p">();</span>
        <span class="k">return</span> <span class="nf">view</span><span class="p">(</span><span class="s1">'houses.index'</span><span class="p">,</span> <span class="p">[</span><span class="s1">'houses'</span> <span class="o">=&gt;</span> <span class="nv">$houses</span><span class="p">,</span> <span class="s1">'properties'</span> <span class="o">=&gt;</span> <span class="nv">$properties</span><span class="p">]);</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="n">store</span><span class="p">(</span><span class="kt">Request</span> <span class="nv">$request</span><span class="p">){</span>

        <span class="nv">$request</span><span class="o">-&gt;</span><span class="nf">validate</span><span class="p">([</span>
            <span class="s1">'title'</span> <span class="o">=&gt;</span> <span class="s1">'required|min:3'</span><span class="p">,</span>
        <span class="p">]);</span>

        <span class="nv">$house</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">House</span><span class="p">;</span>
        <span class="nv">$house</span><span class="o">-&gt;</span><span class="n">title</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="n">title</span><span class="p">;</span>
        <span class="nv">$house</span><span class="o">-&gt;</span><span class="n">category_id</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="n">category_id</span><span class="p">;</span>
        <span class="nv">$house</span><span class="o">-&gt;</span><span class="nf">save</span><span class="p">();</span>

        <span class="k">return</span> <span class="nf">redirect</span><span class="p">()</span><span class="o">-&gt;</span><span class="nf">route</span><span class="p">(</span><span class="s1">'houses'</span><span class="p">)</span><span class="o">-&gt;</span><span class="nf">with</span><span class="p">(</span><span class="s1">'success'</span><span class="p">,</span> <span class="s1">'Todo created successfully'</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="n">destroy</span><span class="p">(</span><span class="nv">$id</span><span class="p">){</span>
        <span class="nv">$house</span> <span class="o">=</span> <span class="nc">House</span><span class="o">::</span><span class="nf">find</span><span class="p">(</span><span class="nv">$id</span><span class="p">);</span>
        <span class="nv">$house</span><span class="o">-&gt;</span><span class="nb">delete</span><span class="p">();</span>
        <span class="k">return</span> <span class="nf">redirect</span><span class="p">()</span><span class="o">-&gt;</span><span class="nf">route</span><span class="p">(</span><span class="s1">'houses'</span><span class="p">)</span><span class="o">-&gt;</span><span class="nf">with</span><span class="p">(</span><span class="s1">'success'</span><span class="p">,</span> <span class="s1">'Todo deleted successfully'</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="n">show</span><span class="p">(</span><span class="nv">$id</span><span class="p">){</span>
        <span class="nv">$house</span> <span class="o">=</span> <span class="nc">House</span><span class="o">::</span><span class="nf">find</span><span class="p">(</span><span class="nv">$id</span><span class="p">);</span>
        <span class="nv">$properties</span> <span class="o">=</span> <span class="nc">Property</span><span class="o">::</span><span class="nf">all</span><span class="p">();</span>
        <span class="k">return</span> <span class="nf">view</span><span class="p">(</span><span class="s1">'houses.show'</span><span class="p">,</span> <span class="p">[</span><span class="s1">'todo'</span> <span class="o">=&gt;</span> <span class="nv">$house</span><span class="p">,</span> <span class="s1">'properties'</span> <span class="o">=&gt;</span> <span class="nv">$properties</span><span class="p">]);</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="n">update</span><span class="p">(</span><span class="kt">Request</span> <span class="nv">$request</span><span class="p">,</span> <span class="nv">$id</span><span class="p">){</span>
        <span class="nv">$house</span> <span class="o">=</span> <span class="nc">House</span><span class="o">::</span><span class="nf">find</span><span class="p">(</span><span class="nv">$id</span><span class="p">);</span>

        <span class="nv">$house</span><span class="o">-&gt;</span><span class="n">title</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="n">title</span><span class="p">;</span>
        <span class="nv">$house</span><span class="o">-&gt;</span><span class="nf">save</span><span class="p">();</span>

        <span class="k">return</span> <span class="nf">redirect</span><span class="p">()</span><span class="o">-&gt;</span><span class="nf">route</span><span class="p">(</span><span class="s1">'Houses'</span><span class="p">)</span><span class="o">-&gt;</span><span class="nf">with</span><span class="p">(</span><span class="s1">'success'</span><span class="p">,</span> <span class="s1">'House updated successfully'</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span></code></pre></figure>

<h2 id="creación-del-enrutador">Creación del enrutador</h2>
<p>En laravel el enrutador se encuentra en la ruta <em>\routes\web.php</em>. Realizaremos las siguientes incorporaciones:</p>

<figure class="highlight"><pre><code class="language-php" data-lang="php"><span class="cp">&lt;?php</span>

<span class="kn">use</span> <span class="nc">Illuminate\Support\Facades\Route</span><span class="p">;</span>

<span class="cm">/*
|--------------------------------------------------------------------------
| Web Routes
|--------------------------------------------------------------------------
|
| Here is where you can register web routes for your application. These
| routes are loaded by the RouteServiceProvider within a group which
| contains the "web" middleware group. Now create something great!
|
*/</span>

<span class="nc">Route</span><span class="o">::</span><span class="nf">get</span><span class="p">(</span><span class="s1">'/'</span><span class="p">,</span> <span class="k">function</span> <span class="p">()</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nf">view</span><span class="p">(</span><span class="s1">'welcome'</span><span class="p">);</span>
<span class="p">});</span>

<span class="nc">Route</span><span class="o">::</span><span class="nf">get</span><span class="p">(</span><span class="s1">'/properties'</span><span class="p">,</span> <span class="s1">'\App\Http\Controllers\PropertyController@index'</span><span class="p">)</span><span class="o">-&gt;</span><span class="nf">name</span><span class="p">(</span><span class="s1">'properties'</span><span class="p">);</span>

<span class="nc">Route</span><span class="o">::</span><span class="nf">post</span><span class="p">(</span><span class="s1">'/properties'</span><span class="p">,</span> <span class="s1">'App\Http\Controllers\PropertyController@store'</span><span class="p">);</span>

<span class="nc">Route</span><span class="o">::</span><span class="nb">delete</span><span class="p">(</span><span class="s1">'/properties/{id}'</span><span class="p">,</span> <span class="s1">'App\Http\Controllers\PropertyController@destroy'</span><span class="p">)</span><span class="o">-&gt;</span><span class="nf">name</span><span class="p">(</span><span class="s1">'properties-destroy'</span><span class="p">);</span>

<span class="nc">Route</span><span class="o">::</span><span class="nf">get</span><span class="p">(</span><span class="s1">'/properties/{id}'</span><span class="p">,</span> <span class="s1">'App\Http\Controllers\PropertyController@show'</span><span class="p">)</span><span class="o">-&gt;</span><span class="nf">name</span><span class="p">(</span><span class="s1">'properties-edit'</span><span class="p">);</span>

<span class="nc">Route</span><span class="o">::</span><span class="nf">patch</span><span class="p">(</span><span class="s1">'/properties/{id}'</span><span class="p">,</span> <span class="s1">'App\Http\Controllers\PropertyController@update'</span><span class="p">)</span><span class="o">-&gt;</span><span class="nf">name</span><span class="p">(</span><span class="s1">'properties-update'</span><span class="p">);</span>

<span class="nc">Route</span><span class="o">::</span><span class="nf">get</span><span class="p">(</span><span class="s1">'/houses'</span><span class="p">,</span> <span class="s1">'\App\Http\Controllers\HouseController@index'</span><span class="p">)</span><span class="o">-&gt;</span><span class="nf">name</span><span class="p">(</span><span class="s1">'houses'</span><span class="p">);</span>

<span class="nc">Route</span><span class="o">::</span><span class="nf">post</span><span class="p">(</span><span class="s1">'/houses'</span><span class="p">,</span> <span class="s1">'App\Http\Controllers\HouseController@store'</span><span class="p">);</span>

<span class="nc">Route</span><span class="o">::</span><span class="nb">delete</span><span class="p">(</span><span class="s1">'/houses/{id}'</span><span class="p">,</span> <span class="s1">'App\Http\Controllers\HouseController@destroy'</span><span class="p">)</span><span class="o">-&gt;</span><span class="nf">name</span><span class="p">(</span><span class="s1">'houses-destroy'</span><span class="p">);</span>

<span class="nc">Route</span><span class="o">::</span><span class="nf">get</span><span class="p">(</span><span class="s1">'/houses/{id}'</span><span class="p">,</span> <span class="s1">'App\Http\Controllers\HouseController@show'</span><span class="p">)</span><span class="o">-&gt;</span><span class="nf">name</span><span class="p">(</span><span class="s1">'houses-edit'</span><span class="p">);</span>

<span class="nc">Route</span><span class="o">::</span><span class="nf">patch</span><span class="p">(</span><span class="s1">'/houses/{id}'</span><span class="p">,</span> <span class="s1">'App\Http\Controllers\HouseController@update'</span><span class="p">)</span><span class="o">-&gt;</span><span class="nf">name</span><span class="p">(</span><span class="s1">'houses-update'</span><span class="p">);</span></code></pre></figure>

<p>Con el siguiente comando, podemos ver una tabla con todos los endpoints que hemos ido creando:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">php artisan route:list</code></pre></figure>

<h2 id="creación-del-segundo-controlador">Creación del segundo controlador</h2>
<p>Para crear el controlador del modelo <em>Property</em> ejecutamos:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">php artisan make:controller PropertyController</code></pre></figure>

<p>Y el contenido del controlador sería el siguiente:</p>

<figure class="highlight"><pre><code class="language-php" data-lang="php"><span class="cp">&lt;?php</span>

<span class="kn">namespace</span> <span class="nn">App\Http\Controllers</span><span class="p">;</span>

<span class="kn">use</span> <span class="nc">Illuminate\Http\Request</span><span class="p">;</span>
<span class="kn">use</span> <span class="nc">App\Models\Property</span><span class="p">;</span>

<span class="kd">class</span> <span class="nc">PropertyController</span> <span class="kd">extends</span> <span class="nc">Controller</span>
<span class="p">{</span>
    <span class="cd">/**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">index</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$properties</span> <span class="o">=</span> <span class="nc">Property</span><span class="o">::</span><span class="nf">all</span><span class="p">();</span>

        <span class="k">return</span> <span class="nf">view</span><span class="p">(</span><span class="s1">'properties.index'</span><span class="p">,</span> <span class="p">[</span><span class="s1">'properties'</span> <span class="o">=&gt;</span> <span class="nv">$properties</span><span class="p">]);</span>
    <span class="p">}</span>

    <span class="cd">/**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">create</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="c1">//</span>
    <span class="p">}</span>

    <span class="cd">/**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">store</span><span class="p">(</span><span class="kt">Request</span> <span class="nv">$request</span><span class="p">)</span>
    <span class="p">{</span>


        <span class="nv">$this</span><span class="o">-&gt;</span><span class="nf">validate</span><span class="p">(</span><span class="nv">$request</span><span class="p">,</span> <span class="p">[</span>
            <span class="s1">'name'</span> <span class="o">=&gt;</span> <span class="s1">'required|unique:properties|max:255'</span><span class="p">,</span>
        <span class="p">]);</span>

        <span class="nv">$property</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Property</span><span class="p">;</span>
        <span class="nv">$property</span><span class="o">-&gt;</span><span class="n">name</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="n">name</span><span class="p">;</span>
        <span class="nv">$property</span><span class="o">-&gt;</span><span class="nf">save</span><span class="p">();</span>

        <span class="k">return</span> <span class="nf">redirect</span><span class="p">()</span><span class="o">-&gt;</span><span class="nf">route</span><span class="p">(</span><span class="s1">'properties.index'</span><span class="p">)</span><span class="o">-&gt;</span><span class="nf">with</span><span class="p">(</span><span class="s1">'success'</span><span class="p">,</span> <span class="s1">'Property has been added'</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="cd">/**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">show</span><span class="p">(</span><span class="nv">$id</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$property</span> <span class="o">=</span> <span class="nc">Property</span><span class="o">::</span><span class="nf">find</span><span class="p">(</span><span class="nv">$id</span><span class="p">);</span>
        <span class="k">return</span> <span class="nf">view</span><span class="p">(</span><span class="s1">'properties.show'</span><span class="p">,</span> <span class="p">[</span><span class="s1">'property'</span> <span class="o">=&gt;</span> <span class="nv">$property</span><span class="p">]);</span>
    <span class="p">}</span>

    <span class="cd">/**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">edit</span><span class="p">(</span><span class="nv">$id</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="c1">//</span>
    <span class="p">}</span>

    <span class="cd">/**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">update</span><span class="p">(</span><span class="kt">Request</span> <span class="nv">$request</span><span class="p">,</span> <span class="nv">$property</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$property</span> <span class="o">=</span> <span class="nc">Property</span><span class="o">::</span><span class="nf">find</span><span class="p">(</span><span class="nv">$property</span><span class="p">);</span>

        <span class="nv">$property</span><span class="o">-&gt;</span><span class="n">name</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="n">name</span><span class="p">;</span>
        <span class="nv">$property</span><span class="o">-&gt;</span><span class="nf">save</span><span class="p">();</span>

        <span class="k">return</span> <span class="nf">redirect</span><span class="p">()</span><span class="o">-&gt;</span><span class="nf">route</span><span class="p">(</span><span class="s1">'properties.index'</span><span class="p">)</span><span class="o">-&gt;</span><span class="nf">with</span><span class="p">(</span><span class="s1">'success'</span><span class="p">,</span> <span class="s1">'Property updated successfully'</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="cd">/**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">destroy</span><span class="p">(</span><span class="nv">$property</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="c1">//</span>
        <span class="nv">$property</span> <span class="o">=</span> <span class="nc">Property</span><span class="o">::</span><span class="nf">find</span><span class="p">(</span><span class="nv">$property</span><span class="p">);</span>
        <span class="nv">$property</span><span class="o">-&gt;</span><span class="nf">todos</span><span class="p">()</span><span class="o">-&gt;</span><span class="nb">each</span><span class="p">(</span><span class="k">function</span><span class="p">(</span><span class="nv">$todo</span><span class="p">)</span> <span class="p">{</span>
            <span class="nv">$todo</span><span class="o">-&gt;</span><span class="nb">delete</span><span class="p">();</span> <span class="c1">// &lt;-- direct deletion</span>
        <span class="p">});</span>
        <span class="nv">$property</span><span class="o">-&gt;</span><span class="nb">delete</span><span class="p">();</span>
        <span class="k">return</span> <span class="nf">redirect</span><span class="p">()</span><span class="o">-&gt;</span><span class="nf">route</span><span class="p">(</span><span class="s1">'properties.index'</span><span class="p">)</span><span class="o">-&gt;</span><span class="nf">with</span><span class="p">(</span><span class="s1">'success'</span><span class="p">,</span> <span class="s1">'Property deleted successfully'</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span></code></pre></figure>

<h2 id="sistema-de-vistas">Sistema de vistas</h2>
<p>Debido a que es un sistema completo las vistas que se han realizado, añadiendo bootstrap y demás elementos web, que directamente te bajes los recursos de mi repositorio y le eches un vistazo al funcionamiente, puesto que es intuitivo.</p>

<p><a href="https://github.com/rubenarcos2/laravel-Inmobiliaria/tree/main/resources/views">https://github.com/rubenarcos2/laravel-Inmobiliaria/tree/main/resources/views</a></p>

<h2 id="instalación-módulo-auth-login">Instalación módulo Auth: login</h2>
<p>Tendremos que ejeuctar los siguientes comandos:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">composer require laravel/ui
php artisan ui vue <span class="nt">--auth</span>
npm <span class="nb">install
</span>npm run dev</code></pre></figure>

<p>Comprobaremos que nos ha creado:</p>
<ul>
  <li>Actualizado el controlador HomeController en App\Http\Controllers</li>
  <li>Creado una carpeta <em>auth</em> en la vista en resources\views\auth</li>
  <li>Añadido <em>Auth::routes();</em> a nuestros endpoints en routes\web.php</li>
</ul>

<h2 id="solución-al-error-de-la-pérdida-del-estilo-en-login-logout-y-forgot-módulo-auth">Solución al error de la pérdida del estilo en login, logout y forgot. Módulo ‘auth’.</h2>
<p>Aún instalado todo lo anterior, se puede dar el caso de que se pierda el estilo de las páginas de auth que se acaban de instalar, para solucionarlo:</p>
<ul>
  <li>Ir a la vista \resources\views\layouts\app.blade.php</li>
  <li>Eliminar las rutas al css y el fichero jss</li>
  <li>Sustituirlas por:</li>
</ul>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">&lt;<span class="nb">link </span><span class="nv">href</span><span class="o">=</span><span class="s2">"https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/css/bootstrap.min.css"</span> <span class="nv">rel</span><span class="o">=</span><span class="s2">"stylesheet"</span> <span class="nv">integrity</span><span class="o">=</span><span class="s2">"sha384-F3w7mX95PdgyTmZZMECAngseQB83DfGTowi0iMjiWaeVhAn4FJkqJByhZMI3AhiU"</span> <span class="nv">crossorigin</span><span class="o">=</span><span class="s2">"anonymous"</span><span class="o">&gt;</span>
&lt;script <span class="nv">src</span><span class="o">=</span><span class="s2">"https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/js/bootstrap.bundle.min.js"</span> <span class="nv">integrity</span><span class="o">=</span><span class="s2">"sha384-/bQdsTh/da6pkI1MST/rWKFNjaCP5gBSY4sEBT38Q/9RBh9AH40zEOg7Hlq2THRZ"</span> <span class="nv">crossorigin</span><span class="o">=</span><span class="s2">"anonymous"</span><span class="o">&gt;</span>&lt;/script&gt;</code></pre></figure>

<p>Y una vez guardado se verán los cambios ya aplicados y nuestra aplicación ya tendrá servicio de autenticación completo. Solo tendremos que ir añadiendo la autenticación requerida en los endpoints.</p>

<h2 id="modificación-del-enrutador">Modificación del enrutador</h2>
<p>Ahora vamos a modificar el enrutador para que tenga los endpoints restringidos y solamente se pueda acceder a la vista principal sin haber hecho <em>login in</em>.</p>

<figure class="highlight"><pre><code class="language-php" data-lang="php"><span class="cp">&lt;?php</span>

<span class="kn">use</span> <span class="nc">Illuminate\Support\Facades\Route</span><span class="p">;</span>

<span class="cm">/*
|--------------------------------------------------------------------------
| Web Routes
|--------------------------------------------------------------------------
|
| Here is where you can register web routes for your application. These
| routes are loaded by the RouteServiceProvider within a group which
| contains the "web" middleware group. Now create something great!
|
*/</span>
<span class="nc">Auth</span><span class="o">::</span><span class="nf">routes</span><span class="p">();</span>
<span class="nc">Route</span><span class="o">::</span><span class="nf">group</span><span class="p">([</span><span class="s1">'middleware'</span> <span class="o">=&gt;</span> <span class="s1">'auth'</span><span class="p">],</span> <span class="k">function</span> <span class="p">()</span> <span class="p">{</span>
    <span class="nc">Route</span><span class="o">::</span><span class="nb">delete</span><span class="p">(</span><span class="s1">'/{id}'</span><span class="p">,</span> <span class="s1">'App\Http\Controllers\HouseController@destroy'</span><span class="p">)</span><span class="o">-&gt;</span><span class="nf">name</span><span class="p">(</span><span class="s1">'houses-destroy'</span><span class="p">);</span>
    <span class="nc">Route</span><span class="o">::</span><span class="nf">post</span><span class="p">(</span><span class="s1">'/edit/{id}'</span><span class="p">,</span> <span class="s1">'App\Http\Controllers\HouseController@update'</span><span class="p">)</span><span class="o">-&gt;</span><span class="nf">name</span><span class="p">(</span><span class="s1">'houses-update'</span><span class="p">);</span>
    <span class="nc">Route</span><span class="o">::</span><span class="nf">get</span><span class="p">(</span><span class="s1">'/edit/{id}'</span><span class="p">,</span> <span class="s1">'App\Http\Controllers\HouseController@edit'</span><span class="p">)</span><span class="o">-&gt;</span><span class="nf">name</span><span class="p">(</span><span class="s1">'houses-edit'</span><span class="p">);</span>
    <span class="nc">Route</span><span class="o">::</span><span class="nf">get</span><span class="p">(</span><span class="s1">'/new'</span><span class="p">,</span> <span class="s1">'App\Http\Controllers\HouseController@new'</span><span class="p">)</span><span class="o">-&gt;</span><span class="nf">name</span><span class="p">(</span><span class="s1">'houses-new'</span><span class="p">);</span>
    <span class="nc">Route</span><span class="o">::</span><span class="nf">post</span><span class="p">(</span><span class="s1">'/new'</span><span class="p">,</span> <span class="s1">'App\Http\Controllers\HouseController@store'</span><span class="p">)</span><span class="o">-&gt;</span><span class="nf">name</span><span class="p">(</span><span class="s1">'houses-new'</span><span class="p">);</span>

    <span class="nc">Route</span><span class="o">::</span><span class="nf">get</span><span class="p">(</span><span class="s1">'/properties'</span><span class="p">,</span> <span class="s1">'\App\Http\Controllers\PropertyController@index'</span><span class="p">)</span><span class="o">-&gt;</span><span class="nf">name</span><span class="p">(</span><span class="s1">'properties'</span><span class="p">);</span>
    <span class="nc">Route</span><span class="o">::</span><span class="nf">get</span><span class="p">(</span><span class="s1">'/properties/new'</span><span class="p">,</span> <span class="s1">'App\Http\Controllers\PropertyController@new'</span><span class="p">)</span><span class="o">-&gt;</span><span class="nf">name</span><span class="p">(</span><span class="s1">'properties-new'</span><span class="p">);</span>
    <span class="nc">Route</span><span class="o">::</span><span class="nf">post</span><span class="p">(</span><span class="s1">'/properties/new'</span><span class="p">,</span> <span class="s1">'App\Http\Controllers\PropertyController@store'</span><span class="p">)</span><span class="o">-&gt;</span><span class="nf">name</span><span class="p">(</span><span class="s1">'properties-new'</span><span class="p">);</span>
    <span class="nc">Route</span><span class="o">::</span><span class="nf">get</span><span class="p">(</span><span class="s1">'/properties/{id}'</span><span class="p">,</span> <span class="s1">'App\Http\Controllers\PropertyController@show'</span><span class="p">)</span><span class="o">-&gt;</span><span class="nf">name</span><span class="p">(</span><span class="s1">'properties-show'</span><span class="p">);</span>
    <span class="nc">Route</span><span class="o">::</span><span class="nb">delete</span><span class="p">(</span><span class="s1">'/properties/{id}'</span><span class="p">,</span> <span class="s1">'App\Http\Controllers\PropertyController@destroy'</span><span class="p">)</span><span class="o">-&gt;</span><span class="nf">name</span><span class="p">(</span><span class="s1">'properties-destroy'</span><span class="p">);</span>
    <span class="nc">Route</span><span class="o">::</span><span class="nf">post</span><span class="p">(</span><span class="s1">'/properties/edit/{id}'</span><span class="p">,</span> <span class="s1">'App\Http\Controllers\PropertyController@update'</span><span class="p">)</span><span class="o">-&gt;</span><span class="nf">name</span><span class="p">(</span><span class="s1">'properties-update'</span><span class="p">);</span>
    <span class="nc">Route</span><span class="o">::</span><span class="nf">get</span><span class="p">(</span><span class="s1">'/properties/edit/{id}'</span><span class="p">,</span> <span class="s1">'App\Http\Controllers\PropertyController@edit'</span><span class="p">)</span><span class="o">-&gt;</span><span class="nf">name</span><span class="p">(</span><span class="s1">'properties-edit'</span><span class="p">);</span>
<span class="p">});</span>

<span class="nc">Route</span><span class="o">::</span><span class="nf">get</span><span class="p">(</span><span class="s1">'/'</span><span class="p">,</span> <span class="s1">'\App\Http\Controllers\HouseController@index'</span><span class="p">)</span><span class="o">-&gt;</span><span class="nf">name</span><span class="p">(</span><span class="s1">'houses'</span><span class="p">);</span>
<span class="nc">Route</span><span class="o">::</span><span class="nf">get</span><span class="p">(</span><span class="s1">'/{id}'</span><span class="p">,</span> <span class="s1">'App\Http\Controllers\HouseController@show'</span><span class="p">)</span><span class="o">-&gt;</span><span class="nf">name</span><span class="p">(</span><span class="s1">'houses-show'</span><span class="p">);</span></code></pre></figure>

<p>Es importante tener en cuenta el orden en el que se definen las rutas hacia los controladores, debe de coincidir con el flujo del usuario, para que no empiecen a generarse errores dispares que en apariencia difieren, pero son provocados por esto solamente.</p>

<hr />

<p><em>Repositorio con el contenido</em></p>

<p><a href="https://github.com/rubenarcos2/laravel-Inmobiliaria"><img src="/images/pages/repository_small.png" alt="Repositorio" /></a></p>

<hr />

<p><strong>Fuentes:</strong></p>

<p><a href="https://www.youtube.com/watch?v=a-4923Uyu54">https://www.youtube.com/watch?v=a-4923Uyu54</a>
<a href="https://github.com/marcosrivasr/primera-app-laravel">https://github.com/marcosrivasr/primera-app-laravel</a>
<a href="https://www.codermen.com/solved-target-class-controller-does-not-exist/#:~:text=%E2%80%9CTarget%20class%20Controller%20does%20not,your%20routes%20are%20loaded%20into.">https://www.codermen.com/solved-target-class-controller-does-not-exist/#:~:text=%E2%80%9CTarget%20class%20Controller%20does%20not,your%20routes%20are%20loaded%20into.</a>
<a href="https://styde.net/despliega-tu-aplicacion-de-laravel-con-github-y-heroku/">https://styde.net/despliega-tu-aplicacion-de-laravel-con-github-y-heroku/</a>
<a href="https://www.youtube.com/watch?v=BowxsMH91Xw">https://www.youtube.com/watch?v=BowxsMH91Xw</a>
<a href="https://www.codekayak.net/laravel-displaying-created_at-updated_at-value-in-view/">https://www.codekayak.net/laravel-displaying-created_at-updated_at-value-in-view/</a>
<a href="https://webdesignerwall.com/wdw-snippet/bootstrap-cards-in-columns">https://webdesignerwall.com/wdw-snippet/bootstrap-cards-in-columns</a></p>]]></content><author><name></name></author><category term="php" /><category term="spring" /><category term="MVC" /><category term="laravel" /><summary type="html"><![CDATA[Uso del framework Laravel 9 con PHP 8: MVC]]></summary></entry><entry><title type="html">Spring 5 - Spring Boot y MVC</title><link href="https://rarcos.com/2022/07/15/Spring-5-MVC/" rel="alternate" type="text/html" title="Spring 5 - Spring Boot y MVC" /><published>2022-07-15T16:33:28+02:00</published><updated>2022-07-15T16:33:28+02:00</updated><id>https://rarcos.com/2022/07/15/Spring%205%20-%20MVC</id><content type="html" xml:base="https://rarcos.com/2022/07/15/Spring-5-MVC/"><![CDATA[<h1 id="spring-boot-y-spring-mvc">Spring Boot y Spring MVC</h1>

<p>Desarrollo de una aplicaciones web usando Spring Boot:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>- Spring MVC
    - Thymeleaf
    - Bootstrap
- Spring JPA
    - PostgreSQL
- Upload files to server
- Spring security
    - Persistence on DB
    - Sessions
</code></pre></div></div>

<p>Los credenciales son:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>- username: admin
- password: admin
</code></pre></div></div>

<p>Esta es la demostración de la aplicación que he realizado (click <a href="https://vps.rarcos.com:10442">aquí</a> o en la imagen):</p>

<p><a href="https://vps.rarcos.com:10442"><img src="/images/pages/spring-inmobiliaria.png" alt="Ir a ver la app en funcionamiento" /></a></p>

<hr />

<p><em>Repositorio con el contenido</em></p>

<p><a href="https://github.com/rubenarcos2/spring-Inmobiliaria"><img src="/images/pages/repository_small.png" alt="Repositorio" /></a></p>

<hr />

<p><strong>Fuentes:</strong></p>

<p><a href="https://openwebinars.net/academia/aprende/spring-boot/">https://openwebinars.net/academia/aprende/spring-boot/</a>
<a href="https://github.com/OpenWebinarsNet/curso_spring_boot_mvc">https://github.com/OpenWebinarsNet/curso_spring_boot_mvc</a>
<a href="https://github.com/OpenWebinarsNet/curso_spring_boot_mvc/blob/master/19_Seguridad_completo/src/main/java/com/openwebinars/spring/seguridad/SecurityConfig.java">https://github.com/OpenWebinarsNet/curso_spring_boot_mvc/blob/master/19_Seguridad_completo/src/main/java/com/openwebinars/spring/seguridad/SecurityConfig.java</a>
<a href="https://fullstackdeveloper.guru/2020/06/05/how-to-do-user-authentication-in-spring-boot-using-postgresql-database/">https://fullstackdeveloper.guru/2020/06/05/how-to-do-user-authentication-in-spring-boot-using-postgresql-database/</a>
<a href="https://www.jhipster.tech/tips/028_tip_pgadmin_heroku.html">https://www.jhipster.tech/tips/028_tip_pgadmin_heroku.html</a>
<a href="https://huongdanjava.com/introduction-about-spring-session.html">https://huongdanjava.com/introduction-about-spring-session.html</a></p>]]></content><author><name></name></author><category term="java" /><category term="spring" /><category term="MVC" /><category term="spring5" /><summary type="html"><![CDATA[Uso del framework Spring 5 con Spring Boot: MVC, spring security, spring JPA, postgreSQL, upload file, thymeleaf, sessions...]]></summary></entry><entry><title type="html">Java - Stream Api</title><link href="https://rarcos.com/2022/07/07/Java-Stream-Api/" rel="alternate" type="text/html" title="Java - Stream Api" /><published>2022-07-07T16:33:28+02:00</published><updated>2022-07-07T16:33:28+02:00</updated><id>https://rarcos.com/2022/07/07/Java-Stream-Api</id><content type="html" xml:base="https://rarcos.com/2022/07/07/Java-Stream-Api/"><![CDATA[<h1 id="utilización-de-la-stream-api">Utilización de la Stream Api</h1>

<p>La API Stream ofrece un enfoque alternativo de “tuberías y filtros” para el procesamiento de colecciones.</p>

<p>Antes de Java 8 debías manipular colecciones manualmente, por lo general iterando a través de la colección y usando operadores en cada elemento en turno. Estos bucles explícitos requerían muchas repeticiones, además de que es difícil entender la estructura del ciclo for hasta que uno llega al cuerpo del mismo.</p>

<p>La API Stream te proporciona una forma de procesar datos de manera más eficiente al realizar una única ejecución sobre ellos, independientemente de la cantidad de información que estés procesando o de si estás realizando múltiples cálculos</p>

<p>El código fuente con los ejerciciós está <a href="https://github.com/rubenarcos2/java8StreamApi">aquí</a>, he utilizado TDD:</p>

<p><strong>Map</strong></p>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">com.rarcos</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">static</span> <span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">stream</span><span class="o">.</span><span class="na">Collectors</span><span class="o">.</span><span class="na">toList</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.stream.IntStream</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">MapCollection</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="nf">MapCollection</span><span class="o">()</span> <span class="o">{</span>
	<span class="o">}</span>

	<span class="c1">// Map 1 - All characters upper case are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">mapAllUpperCaseJava7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">newCollection</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
		<span class="k">for</span> <span class="o">(</span><span class="nc">String</span> <span class="n">elm</span> <span class="o">:</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">newCollection</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">elm</span><span class="o">.</span><span class="na">toUpperCase</span><span class="o">());</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">newCollection</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">mapAllUpperCase</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">map</span><span class="o">(</span><span class="nl">String:</span><span class="o">:</span><span class="n">toUpperCase</span><span class="o">).</span><span class="na">toList</span><span class="o">();</span>
	<span class="o">}</span>

	<span class="c1">// Map 2 - All length of countries are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">mapLengthJava7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">newCollection</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
		<span class="k">for</span> <span class="o">(</span><span class="nc">String</span> <span class="n">elm</span> <span class="o">:</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">newCollection</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">elm</span><span class="o">.</span><span class="na">length</span><span class="o">()));</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">newCollection</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">IntStream</span> <span class="nf">mapLength</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">mapToInt</span><span class="o">(</span><span class="nl">String:</span><span class="o">:</span><span class="n">length</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="c1">// Map 3 - All name of person to upper case are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">mapNamePersonUpperCaseJava7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Person</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">newCollection</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
		<span class="k">for</span> <span class="o">(</span><span class="nc">Person</span> <span class="n">elm</span> <span class="o">:</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">newCollection</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">elm</span><span class="o">.</span><span class="na">getName</span><span class="o">().</span><span class="na">toUpperCase</span><span class="o">()));</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">newCollection</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">mapNamePersonUpperCase</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Person</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">map</span><span class="o">(</span><span class="n">e</span> <span class="o">-&gt;</span> <span class="n">e</span><span class="o">.</span><span class="na">getName</span><span class="o">()).</span><span class="na">map</span><span class="o">(</span><span class="n">e</span> <span class="o">-&gt;</span> <span class="n">e</span><span class="o">.</span><span class="na">toUpperCase</span><span class="o">()).</span><span class="na">toList</span><span class="o">();</span>
	<span class="o">}</span>

	<span class="c1">// Map 4 - Flat map are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">mapFlatJava7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">newCollection</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
        <span class="k">for</span> <span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">subCollection</span> <span class="o">:</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">for</span> <span class="o">(</span><span class="nc">String</span> <span class="n">value</span> <span class="o">:</span> <span class="n">subCollection</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">newCollection</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">value</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">newCollection</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">mapFlat</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">stream</span><span class="o">()</span> <span class="c1">// Convert collection to Stream</span>
                <span class="o">.</span><span class="na">flatMap</span><span class="o">(</span><span class="n">value</span> <span class="o">-&gt;</span> <span class="n">value</span><span class="o">.</span><span class="na">stream</span><span class="o">())</span> <span class="c1">// Replace list with stream</span>
                <span class="o">.</span><span class="na">collect</span><span class="o">(</span><span class="n">toList</span><span class="o">());</span> <span class="c1">// Collect results to a new list</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre></figure>

<p><strong>Filter</strong></p>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">com.rarcos</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">FilterCollection</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="nf">FilterCollection</span><span class="o">()</span> <span class="o">{</span>
	<span class="o">}</span>

	<span class="c1">// Filter 1 - Filter collection so that only elements with less or equal then 5</span>
	<span class="c1">// characters are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">filterShorterThant5CharactersJava7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">newCollection</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
		<span class="k">for</span> <span class="o">(</span><span class="nc">String</span> <span class="n">elm</span> <span class="o">:</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">if</span> <span class="o">(</span><span class="n">elm</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">&lt;=</span> <span class="mi">5</span><span class="o">)</span>
				<span class="n">newCollection</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">elm</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">newCollection</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">filterShorterThant5Characters</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">filter</span><span class="o">(</span><span class="n">e</span> <span class="o">-&gt;</span> <span class="n">e</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">&lt;=</span> <span class="mi">5</span><span class="o">).</span><span class="na">toList</span><span class="o">();</span>
	<span class="o">}</span>

	<span class="c1">// Filter 2 - Filter collection start with C character are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">filterWithCharacterCJava7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">newCollection</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
		<span class="k">for</span> <span class="o">(</span><span class="nc">String</span> <span class="n">elm</span> <span class="o">:</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">if</span> <span class="o">(</span><span class="n">elm</span><span class="o">.</span><span class="na">toUpperCase</span><span class="o">().</span><span class="na">contains</span><span class="o">(</span><span class="s">"C"</span><span class="o">))</span>
				<span class="n">newCollection</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">elm</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">newCollection</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">filterWithCharacterC</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">filter</span><span class="o">(</span><span class="n">e</span> <span class="o">-&gt;</span> <span class="n">e</span><span class="o">.</span><span class="na">toUpperCase</span><span class="o">().</span><span class="na">contains</span><span class="o">(</span><span class="s">"C"</span><span class="o">)).</span><span class="na">toList</span><span class="o">();</span>
	<span class="o">}</span>

	<span class="c1">// Filter 3 - Filter collection with distinct characters are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">filterWithDistinctCharactersJava7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">listDistinctInts</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;(</span><span class="n">collection</span><span class="o">.</span><span class="na">size</span><span class="o">());</span>
		<span class="k">for</span> <span class="o">(</span><span class="nc">String</span> <span class="n">i</span> <span class="o">:</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">if</span> <span class="o">(!</span><span class="n">listDistinctInts</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">i</span><span class="o">))</span> <span class="o">{</span>
				<span class="n">listDistinctInts</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
			<span class="o">}</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">listDistinctInts</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">filterWithDistinctCharacters</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">distinct</span><span class="o">().</span><span class="na">toList</span><span class="o">();</span>
	<span class="o">}</span>

	<span class="c1">// Filter 4 - Filter collection 3 first elements are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">filter3FirstJava7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">newCollection</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;(</span><span class="n">collection</span><span class="o">.</span><span class="na">size</span><span class="o">());</span>
		<span class="n">newCollection</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">collection</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">));</span>
		<span class="n">newCollection</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">collection</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">));</span>
		<span class="n">newCollection</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">collection</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">2</span><span class="o">));</span>
		<span class="k">return</span> <span class="n">newCollection</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">filter3First</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">limit</span><span class="o">(</span><span class="mi">3</span><span class="o">).</span><span class="na">toList</span><span class="o">();</span>
	<span class="o">}</span>

	<span class="c1">// Filter 4 - Filter collection all elements minus 3 first elements are</span>
	<span class="c1">// returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">filterAllMinus3FirstJava7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">newCollection</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;(</span><span class="n">collection</span><span class="o">.</span><span class="na">size</span><span class="o">());</span>

		<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">3</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">collection</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="n">newCollection</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">collection</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">));</span>
		<span class="o">}</span>

		<span class="k">return</span> <span class="n">newCollection</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">filterAllMinus3First</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">skip</span><span class="o">(</span><span class="mi">3</span><span class="o">).</span><span class="na">toList</span><span class="o">();</span>
	<span class="o">}</span>
<span class="o">}</span></code></pre></figure>

<p><strong>Search</strong></p>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">com.rarcos</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Optional</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Random</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">SearchCollection</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="nf">SearchCollection</span><span class="o">()</span> <span class="o">{</span>
	<span class="o">}</span>

	<span class="c1">// Search 1 - Search it have more 4 characters are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">searchAllMore4CharactersJava7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">newCollection</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
		<span class="k">for</span> <span class="o">(</span><span class="nc">String</span> <span class="n">elm</span> <span class="o">:</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">if</span> <span class="o">(</span><span class="n">elm</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">4</span><span class="o">)</span>
				<span class="n">newCollection</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">elm</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">newCollection</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">searchAllMore4Characters</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">allMatch</span><span class="o">(</span><span class="n">e</span> <span class="o">-&gt;</span> <span class="n">e</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">4</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="c1">// Search 2 - Search it have one or more condition are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">searchConditionJava7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">newCollection</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
		<span class="k">for</span> <span class="o">(</span><span class="nc">String</span> <span class="n">elm</span> <span class="o">:</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">if</span> <span class="o">(</span><span class="n">elm</span> <span class="o">==</span> <span class="s">"Spain"</span><span class="o">)</span>
				<span class="n">newCollection</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">elm</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">newCollection</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">searchCondition</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">anyMatch</span><span class="o">(</span><span class="n">e</span> <span class="o">-&gt;</span> <span class="n">e</span> <span class="o">==</span> <span class="s">"Spain"</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="c1">// Search 2 - Search it haven't condition are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">searchNotConditionJava7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">newCollection</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
		<span class="k">for</span> <span class="o">(</span><span class="nc">String</span> <span class="n">elm</span> <span class="o">:</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">if</span> <span class="o">(</span><span class="n">elm</span> <span class="o">==</span> <span class="s">"Spain"</span><span class="o">)</span>
				<span class="n">newCollection</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">elm</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">newCollection</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">searchNotCondition</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">noneMatch</span><span class="o">(</span><span class="n">e</span> <span class="o">-&gt;</span> <span class="n">e</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">&gt;=</span> <span class="mi">4</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="c1">// Search 3 - Search any element are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">searchAnyElementJava7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">newCollection</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
		<span class="nc">Random</span> <span class="n">r</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Random</span><span class="o">();</span>
		<span class="kt">int</span> <span class="n">pos</span> <span class="o">=</span> <span class="n">r</span><span class="o">.</span><span class="na">nextInt</span><span class="o">((</span><span class="n">collection</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">-</span> <span class="mi">0</span><span class="o">)</span> <span class="o">+</span> <span class="mi">1</span><span class="o">)</span> <span class="o">+</span> <span class="mi">0</span><span class="o">;</span>
		<span class="n">newCollection</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">collection</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">pos</span><span class="o">));</span>
		<span class="k">return</span> <span class="n">newCollection</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">Optional</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">searchAnyElement</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">parallelStream</span><span class="o">().</span><span class="na">findAny</span><span class="o">();</span>
	<span class="o">}</span>

	<span class="c1">// Search 4 - Search first element are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">searchFirstElementJava7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">newCollection</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
		<span class="nc">Random</span> <span class="n">r</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Random</span><span class="o">();</span>
		<span class="kt">int</span> <span class="n">pos</span> <span class="o">=</span> <span class="n">r</span><span class="o">.</span><span class="na">nextInt</span><span class="o">((</span><span class="n">collection</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">-</span> <span class="mi">0</span><span class="o">)</span> <span class="o">+</span> <span class="mi">1</span><span class="o">)</span> <span class="o">+</span> <span class="mi">0</span><span class="o">;</span>
		<span class="n">newCollection</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">collection</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">pos</span><span class="o">));</span>
		<span class="k">return</span> <span class="n">newCollection</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">Optional</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">searchFirstElement</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">parallelStream</span><span class="o">().</span><span class="na">findFirst</span><span class="o">();</span>
	<span class="o">}</span>
<span class="o">}</span></code></pre></figure>

<p><strong>Data and Calculate</strong></p>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">com.rarcos</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Comparator</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.OptionalInt</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">DataAndCalculateCollection</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="nf">DataAndCalculateCollection</span><span class="o">()</span> <span class="o">{</span>
	<span class="o">}</span>

	<span class="c1">// Data and calculate 1 - Max number are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">dataAndCalculateMaxJava7</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="kt">int</span> <span class="n">maximum</span> <span class="o">=</span> <span class="n">collection</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span>
		<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">collection</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="k">if</span> <span class="o">(</span><span class="n">maximum</span> <span class="o">&lt;</span> <span class="n">collection</span><span class="o">[</span><span class="n">i</span><span class="o">])</span>
				<span class="n">maximum</span> <span class="o">=</span> <span class="n">collection</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">maximum</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">OptionalInt</span> <span class="nf">dataAndCalculateMax</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">stream</span><span class="o">(</span><span class="n">collection</span><span class="o">).</span><span class="na">reduce</span><span class="o">(</span><span class="nl">Integer:</span><span class="o">:</span><span class="n">max</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="c1">// Data and calculate 2 - Sum of numbers are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">dataAndCalculateSumJava7</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="kt">int</span> <span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">number</span> <span class="o">:</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">sum</span> <span class="o">+=</span> <span class="n">number</span><span class="o">;</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">sum</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">dataAndCalculateSum</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">stream</span><span class="o">(</span><span class="n">collection</span><span class="o">).</span><span class="na">reduce</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="o">(</span><span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="n">x</span> <span class="o">+</span> <span class="n">y</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="c1">// Data and calculate 3 - Elements sorted are returned.</span>
<span class="c1">//	public static int[] dataAndCalculateSortJava7(int[] collection) {</span>
<span class="c1">//		return Collections.sort(collection);</span>
<span class="c1">//	}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">Object</span><span class="o">[]</span> <span class="nf">dataAndCalculateSort</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">sorted</span><span class="o">((</span><span class="n">s1</span><span class="o">,</span> <span class="n">s2</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="n">s1</span><span class="o">.</span><span class="na">compareTo</span><span class="o">(</span><span class="n">s2</span><span class="o">)).</span><span class="na">toArray</span><span class="o">();</span>
	<span class="o">}</span>

	<span class="c1">// Data and calculate 4 - Oldest person are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">Person</span> <span class="nf">getOldestPerson7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Person</span><span class="o">&gt;</span> <span class="n">people</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">Person</span> <span class="n">oldestPerson</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Person</span><span class="o">(</span><span class="s">""</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
		<span class="k">for</span> <span class="o">(</span><span class="nc">Person</span> <span class="n">person</span> <span class="o">:</span> <span class="n">people</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">if</span> <span class="o">(</span><span class="n">person</span><span class="o">.</span><span class="na">getAge</span><span class="o">()</span> <span class="o">&gt;</span> <span class="n">oldestPerson</span><span class="o">.</span><span class="na">getAge</span><span class="o">())</span> <span class="o">{</span>
				<span class="n">oldestPerson</span> <span class="o">=</span> <span class="n">person</span><span class="o">;</span>
			<span class="o">}</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">oldestPerson</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">Person</span> <span class="nf">getOldestPerson</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Person</span><span class="o">&gt;</span> <span class="n">people</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">people</span><span class="o">.</span><span class="na">stream</span><span class="o">()</span> <span class="c1">// Convert collection to Stream</span>
				<span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="nc">Comparator</span><span class="o">.</span><span class="na">comparing</span><span class="o">(</span><span class="nl">Person:</span><span class="o">:</span><span class="n">getAge</span><span class="o">))</span> <span class="c1">// Compares people ages</span>
				<span class="o">.</span><span class="na">get</span><span class="o">();</span> <span class="c1">// Gets stream result</span>
	<span class="o">}</span>
<span class="o">}</span></code></pre></figure>

<p><strong>Collectors</strong></p>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">com.rarcos</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Comparator</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.IntSummaryStatistics</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Optional</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Set</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.stream.Collectors</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">static</span> <span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">stream</span><span class="o">.</span><span class="na">Collectors</span><span class="o">.*;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">CollectorsCollection</span> <span class="o">{</span>

	<span class="kd">private</span> <span class="nf">CollectorsCollection</span><span class="o">()</span> <span class="o">{</span>
	<span class="o">}</span>

	<span class="c1">// Collectors 1 - Count of elements are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">Long</span> <span class="nf">collectorsCountingJava7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="o">(</span><span class="kt">long</span><span class="o">)</span> <span class="n">collection</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">Long</span> <span class="nf">collectorsCounting</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">collect</span><span class="o">(</span><span class="nc">Collectors</span><span class="o">.</span><span class="na">counting</span><span class="o">());</span>
	<span class="o">}</span>

	<span class="c1">// Collectors 2 - Max of elements are returned.</span>
<span class="c1">//	public static Long collectorsMaxJava7(List&lt;String&gt; collection) {</span>
<span class="c1">//		return (long) Collections.max(collection);</span>
<span class="c1">//	}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">Optional</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="nf">collectorsMax</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">collect</span><span class="o">(</span><span class="nc">Collectors</span><span class="o">.</span><span class="na">maxBy</span><span class="o">(</span><span class="nc">Comparator</span><span class="o">.</span><span class="na">naturalOrder</span><span class="o">()));</span>
	<span class="o">}</span>

	<span class="c1">// Collectors 3 - Sum of elements are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">Double</span> <span class="nf">collectorsSumJava7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="kt">double</span> <span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">collection</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="n">sum</span> <span class="o">=</span> <span class="n">sum</span> <span class="o">+</span> <span class="n">collection</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">sum</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">Integer</span> <span class="nf">collectorsSum</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">collect</span><span class="o">(</span><span class="nc">Collectors</span><span class="o">.</span><span class="na">summingInt</span><span class="o">(</span><span class="n">v</span> <span class="o">-&gt;</span> <span class="n">v</span><span class="o">.</span><span class="na">intValue</span><span class="o">()));</span>
	<span class="o">}</span>

	<span class="c1">// Collectors 4 - Average of elements are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">Double</span> <span class="nf">collectorsAverageJava7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="kt">double</span> <span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">collection</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="n">sum</span> <span class="o">=</span> <span class="n">sum</span> <span class="o">+</span> <span class="n">collection</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">sum</span> <span class="o">/</span> <span class="n">collection</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">Double</span> <span class="nf">collectorsAverage</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">collect</span><span class="o">(</span><span class="nc">Collectors</span><span class="o">.</span><span class="na">averagingInt</span><span class="o">(</span><span class="nl">Integer:</span><span class="o">:</span><span class="n">intValue</span><span class="o">));</span>
	<span class="o">}</span>

	<span class="c1">// Collectors 5 - Summarizing of elements are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">IntSummaryStatistics</span> <span class="nf">collectorsSummarizing</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">collect</span><span class="o">(</span><span class="nc">Collectors</span><span class="o">.</span><span class="na">summarizingInt</span><span class="o">(</span><span class="nl">Integer:</span><span class="o">:</span><span class="n">intValue</span><span class="o">));</span>
	<span class="o">}</span>

	<span class="c1">// Collectors 6 - Join of elements are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">String</span> <span class="nf">collectorsJoining</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">collection</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">sorted</span><span class="o">().</span><span class="na">map</span><span class="o">(</span><span class="nl">Object:</span><span class="o">:</span><span class="n">toString</span><span class="o">).</span><span class="na">collect</span><span class="o">(</span><span class="nc">Collectors</span><span class="o">.</span><span class="na">joining</span><span class="o">(</span><span class="s">", "</span><span class="o">));</span>
	<span class="o">}</span>

	<span class="c1">// Collectors 7 - Group by of elements are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Person</span><span class="o">&gt;&gt;</span> <span class="nf">collectorsGroupByNationalityJava7</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Person</span><span class="o">&gt;</span> <span class="n">people</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Person</span><span class="o">&gt;&gt;</span> <span class="n">map</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>
		<span class="k">for</span> <span class="o">(</span><span class="nc">Person</span> <span class="n">person</span> <span class="o">:</span> <span class="n">people</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">if</span> <span class="o">(!</span><span class="n">map</span><span class="o">.</span><span class="na">containsKey</span><span class="o">(</span><span class="n">person</span><span class="o">.</span><span class="na">getNationality</span><span class="o">()))</span> <span class="o">{</span>
				<span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">person</span><span class="o">.</span><span class="na">getNationality</span><span class="o">(),</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;());</span>
			<span class="o">}</span>
			<span class="n">map</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">person</span><span class="o">.</span><span class="na">getNationality</span><span class="o">()).</span><span class="na">add</span><span class="o">(</span><span class="n">person</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">map</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Person</span><span class="o">&gt;&gt;</span> <span class="nf">collectorsGroupByNationality</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Person</span><span class="o">&gt;</span> <span class="n">people</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">people</span><span class="o">.</span><span class="na">stream</span><span class="o">()</span> <span class="c1">// Convert collection to Stream</span>
				<span class="o">.</span><span class="na">collect</span><span class="o">(</span><span class="n">groupingBy</span><span class="o">(</span><span class="nl">Person:</span><span class="o">:</span><span class="n">getNationality</span><span class="o">));</span> <span class="c1">// Group people by nationality</span>
	<span class="o">}</span>

	<span class="c1">// Collectors 8 - Collector to set are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">Set</span><span class="o">&lt;</span><span class="nc">Person</span><span class="o">&gt;</span> <span class="nf">collectorsToSet</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Person</span><span class="o">&gt;</span> <span class="n">people</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">people</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">collect</span><span class="o">(</span><span class="nc">Collectors</span><span class="o">.</span><span class="na">toSet</span><span class="o">());</span>
	<span class="o">}</span>

	<span class="c1">// Collectors 9 - Collector to list are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Person</span><span class="o">&gt;</span> <span class="nf">collectorsToList</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Person</span><span class="o">&gt;</span> <span class="n">people</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">people</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">collect</span><span class="o">(</span><span class="nc">Collectors</span><span class="o">.</span><span class="na">toList</span><span class="o">());</span>
	<span class="o">}</span>

	<span class="c1">// Collectors 10 - Collector to map are returned.</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Integer</span><span class="o">&gt;</span> <span class="nf">collectorsToMap</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Person</span><span class="o">&gt;</span> <span class="n">people</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">people</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">collect</span><span class="o">(</span><span class="nc">Collectors</span><span class="o">.</span><span class="na">toMap</span><span class="o">(</span><span class="nl">Person:</span><span class="o">:</span><span class="n">getName</span><span class="o">,</span> <span class="nl">Person:</span><span class="o">:</span><span class="n">getAge</span><span class="o">));</span>
	<span class="o">}</span>
<span class="o">}</span></code></pre></figure>

<hr />

<p>El código fuente con los ejerciciós está aquí, he utilizado TDD:</p>

<p><em>Repositorio con el contenido</em></p>

<p><a href="https://github.com/rubenarcos2/java8StreamApi"><img src="/images/pages/repository_small.png" alt="Repositorio" /></a></p>

<h5 id="más-sobre-todas-las-novedades-de-java-8">Más sobre todas las novedades de Java 8:</h5>

<p><a href="https://code.tutsplus.com/es/tutorials/java-8-for-android-development-stream-api-and-date-time-libraries--cms-29904">https://code.tutsplus.com/es/tutorials/java-8-for-android-development-stream-api-and-date-time-libraries–cms-29904</a></p>

<h5 id="más-ejercicios-para-practicar-el-stream-api">Más ejercicios para practicar el stream api:</h5>

<p><a href="https://github.com/vfarcic/java-8-exercises">https://github.com/vfarcic/java-8-exercises</a></p>

<p><a href="https://github.com/OpenWebinarsNet/Curso-java-8-para-programadores-java">https://github.com/OpenWebinarsNet/Curso-java-8-para-programadores-java</a></p>]]></content><author><name></name></author><category term="java" /><category term="stream api" /><summary type="html"><![CDATA[Uso de la Stream Api de Java 8]]></summary></entry><entry><title type="html">Power BI</title><link href="https://rarcos.com/2022/04/21/Power-BI/" rel="alternate" type="text/html" title="Power BI" /><published>2022-04-21T16:33:28+02:00</published><updated>2022-04-21T16:33:28+02:00</updated><id>https://rarcos.com/2022/04/21/Power%20BI</id><content type="html" xml:base="https://rarcos.com/2022/04/21/Power-BI/"><![CDATA[<h1 id="python-y-power-bi">Python y Power BI</h1>

<p>A continuación, se muestran 3 proyectos en Python y en Power BI con análisis de 3 fuentes de datos diferentes.</p>

<h2 id="python-y-power-bi-i---alquiler-de-alojamientos">Python y Power BI I - Alquiler de alojamientos</h2>

<p>Ejercicio de alquiler de alojamientos:</p>

<iframe type="application/pdf" src="/pdf/PowerBI-Ejercicio1.pdf#toolbar=0" frameborder="0" allowfullscreen="" width="100%" height="500"></iframe>

<p><a href="https://colab.research.google.com/drive/1RwTC3bZu_ceE4J7Zea0wBHxVBBiK18G_"><img src="/images/pages/repository_small_colab.png" alt="Repositorio" /></a> Versión Colab
<a href="https://drive.google.com/file/d/1UFqVfxWfwG3VS3b_r84BW7wC1Q9Cq2f_"><img src="/images/pages/repository_small_file.png" alt="Repositorio" /></a> Versión PowerBI y listado de datos en CSV</p>

<h2 id="python-y-power-bi-ii---juegos-olímpicos">Python y Power BI II - Juegos olímpicos</h2>

<p>Ejercicio con datos de juegos olímpicos:</p>

<iframe type="application/pdf" src="/pdf/PowerBI-Ejercicio2.pdf#toolbar=0" frameborder="0" allowfullscreen="" width="100%" height="500"></iframe>

<p><a href="https://colab.research.google.com/drive/1iWEPGupNABjurql8xRxzitvMzgQ-T0fo"><img src="/images/pages/repository_small_colab.png" alt="Repositorio" /></a> Versión Colab
<a href="https://drive.google.com/file/d/1aFZUOVVVsUKSyI177MRsIlajgH_A-8I9"><img src="/images/pages/repository_small_file.png" alt="Repositorio" /></a> Versión PowerBI y listado de datos en CSV</p>

<h2 id="python-y-power-bi-iii---bestsellers-de-libros">Python y Power BI III - Bestsellers de libros</h2>

<p>Ejercicio con datos de bestsellers de libros:</p>

<iframe type="application/pdf" src="/pdf/PowerBI-Ejercicio3.pdf#toolbar=0" frameborder="0" allowfullscreen="" width="100%" height="500"></iframe>

<p><a href="https://drive.google.com/file/d/1mUDA4crc_IMJHI-Ta7H2YTyIwV3BpR5Z"><img src="/images/pages/repository_small_file.png" alt="Repositorio" /></a> Versión PowerBI y listado de datos en CSV</p>]]></content><author><name></name></author><category term="python" /><category term="powerBI" /><category term="EDA" /><summary type="html"><![CDATA[Proyectos en Power BI con análisis de 3 fuentes de datos diferentes.]]></summary></entry></feed>